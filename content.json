{"meta":{"title":null,"subtitle":"LUC_WANG","description":"记录学习的每一天","author":"WANG Qi","url":"https://github.com/wangqi1994/wangqi1994.github.io","root":"/"},"pages":[{"title":"categories","date":"2021-03-17T05:18:44.143Z","updated":"2021-03-17T05:18:44.143Z","comments":true,"path":"categories/index.html","permalink":"https://github.com/wangqi1994/wangqi1994.github.io/categories/index.html","excerpt":"","text":""},{"title":"Gallery","date":"2020-04-21T09:10:36.000Z","updated":"2020-04-21T09:10:36.000Z","comments":true,"path":"photos/index.html","permalink":"https://github.com/wangqi1994/wangqi1994.github.io/photos/index.html","excerpt":"","text":""},{"title":"tags","date":"2021-03-17T05:18:44.207Z","updated":"2021-03-17T05:18:44.207Z","comments":true,"path":"tags/index.html","permalink":"https://github.com/wangqi1994/wangqi1994.github.io/tags/index.html","excerpt":"","text":""}],"posts":[{"title":"Hexo部署解决报错Error: Cannot find module './db.json'","slug":"2021-03-5-Hexo部署解决报错Error-Cannot-find-module-.db.json","date":"2021-03-25T04:00:00.000Z","updated":"2021-03-25T04:00:00.000Z","comments":true,"path":"2021/03/25/2021-03-5-Hexo部署解决报错Error-Cannot-find-module-.db.json/","link":"","permalink":"https://github.com/wangqi1994/wangqi1994.github.io/2021/03/25/2021-03-5-Hexo%E9%83%A8%E7%BD%B2%E8%A7%A3%E5%86%B3%E6%8A%A5%E9%94%99Error-Cannot-find-module-.db.json/","excerpt":"","text":"12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455Error: Cannot find module &#39;.&#x2F;db.json&#39;at Function.Module._resolveFilename (module.js:336:15)at Function.Module._load (module.js:286:25)at Module.require (module.js:365:17)at require (module.js:384:17)at Object. (&#x2F;user&#x2F;XXX&#x2F;node_modules&#x2F;hexo-server&#x2F;node_modules&#x2F;compression&#x2F;node_modules&#x2F;accepts&#x2F;node_modules&#x2F;mime-types&#x2F;node_modules&#x2F;mime-db&#x2F;index.js:11:18)at Module._compile (module.js:434:26)at Object.Module._extensions..js (module.js:452:10)at Module.load (module.js:355:32)at Function.Module._load (module.js:310:12)at Module.require (module.js:365:17)at require (module.js:384:17)at Object. (&#x2F;user&#x2F;XXX&#x2F;node_modules&#x2F;hexo-server&#x2F;node_modules&#x2F;compression&#x2F;node_modules&#x2F;accepts&#x2F;node_modules&#x2F;mime-types&#x2F;index.js:15:10)at Module._compile (module.js:434:26)at Object.Module._extensions..js (module.js:452:10)at Module.load (module.js:355:32)at Function.Module._load (module.js:310:12)at Module.require (module.js:365:17)at require (module.js:384:17)at Object. (&#x2F;user&#x2F;XXX&#x2F;node_modules&#x2F;hexo-server&#x2F;node_modules&#x2F;compression&#x2F;node_modules&#x2F;accepts&#x2F;index.js:16:12)at Module._compile (module.js:434:26)at Object.Module._extensions..js (module.js:452:10)at Module.load (module.js:355:32)at Function.Module._load (module.js:310:12)at Module.require (module.js:365:17)at require (module.js:384:17)at Object. (&#x2F;user&#x2F;XXX&#x2F;node_modules&#x2F;hexo-server&#x2F;node_modules&#x2F;compression&#x2F;index.js:17:15)at Module._compile (module.js:434:26)at Object.Module._extensions..js (module.js:452:10)at Module.load (module.js:355:32)at Function.Module._load (module.js:310:12)at Module.require (module.js:365:17)at require (module.js:384:17)at Object. (&#x2F;user&#x2F;XXX&#x2F;node_modules&#x2F;hexo-server&#x2F;lib&#x2F;middlewares&#x2F;gzip.js:3:16)at Module._compile (module.js:434:26)at Object.Module._extensions..js (module.js:452:10)at Module.load (module.js:355:32)at Function.Module._load (module.js:310:12)at Module.require (module.js:365:17)at require (&#x2F;user&#x2F;XXX&#x2F;node_modules&#x2F;hexo&#x2F;lib&#x2F;hexo&#x2F;index.js:213:21)at &#x2F;user&#x2F;XXX&#x2F;node_modules&#x2F;hexo-server&#x2F;index.js:24:50at &#x2F;user&#x2F;XXX&#x2F;node_modules&#x2F;hexo&#x2F;lib&#x2F;hexo&#x2F;index.js:229:12at tryCatcher (&#x2F;user&#x2F;XXX&#x2F;node_modules&#x2F;hexo&#x2F;node_modules&#x2F;hexo-fs&#x2F;node_modules&#x2F;bluebird&#x2F;js&#x2F;release&#x2F;util.js:11:23)at Promise._settlePromiseFromHandler (&#x2F;user&#x2F;XXX&#x2F;node_modules&#x2F;hexo&#x2F;node_modules&#x2F;hexo-fs&#x2F;node_modules&#x2F;bluebird&#x2F;js&#x2F;release&#x2F;promise.js:489:31)at Promise._settlePromise (&#x2F;user&#x2F;XXX&#x2F;node_modules&#x2F;hexo&#x2F;node_modules&#x2F;hexo-fs&#x2F;node_modules&#x2F;bluebird&#x2F;js&#x2F;release&#x2F;promise.js:546:18)at Promise._settlePromise0 (&#x2F;user&#x2F;XXX&#x2F;node_modules&#x2F;hexo&#x2F;node_modules&#x2F;hexo-fs&#x2F;node_modules&#x2F;bluebird&#x2F;js&#x2F;release&#x2F;promise.js:591:10)at Promise._settlePromises (&#x2F;user&#x2F;XXX&#x2F;node_modules&#x2F;hexo&#x2F;node_modules&#x2F;hexo-fs&#x2F;node_modules&#x2F;bluebird&#x2F;js&#x2F;release&#x2F;promise.js:674:18)at Promise._fulfill (&#x2F;user&#x2F;XXX&#x2F;node_modules&#x2F;hexo&#x2F;node_modules&#x2F;hexo-fs&#x2F;node_modules&#x2F;bluebird&#x2F;js&#x2F;release&#x2F;promise.js:615:18)at Promise._resolveCallback (&#x2F;user&#x2F;XXX&#x2F;node_modules&#x2F;hexo&#x2F;node_modules&#x2F;hexo-fs&#x2F;node_modules&#x2F;bluebird&#x2F;js&#x2F;release&#x2F;promise.js:416:57)at Promise._settlePromiseFromHandler (&#x2F;user&#x2F;XXX&#x2F;node_modules&#x2F;hexo&#x2F;node_modules&#x2F;hexo-fs&#x2F;node_modules&#x2F;bluebird&#x2F;js&#x2F;release&#x2F;promise.js:502:17)at Promise._settlePromise (&#x2F;user&#x2F;XXX&#x2F;node_modules&#x2F;hexo&#x2F;node_modules&#x2F;hexo-fs&#x2F;node_modules&#x2F;bluebird&#x2F;js&#x2F;release&#x2F;promise.js:546:18)at Promise._settlePromise0 (&#x2F;user&#x2F;XXX&#x2F;node_modules&#x2F;hexo&#x2F;node_modules&#x2F;hexo-fs&#x2F;node_modules&#x2F;bluebird&#x2F;js&#x2F;release&#x2F;promise.js:591:10)at Promise._settlePromises (&#x2F;user&#x2F;XXX&#x2F;node_modules&#x2F;hexo&#x2F;node_modules&#x2F;hexo-fs&#x2F;node_modules&#x2F;bluebird&#x2F;js&#x2F;release&#x2F;promise.js:674:18)INFO Deleted database.INFO Deleted public folder. 123发生这种情况是因为mime-db模块中缺少db.json文件1.可以创建db.json文件或将mime-db模块安装在其他位置，然后从那里复制db.json2.把node-modules 删除之后重装","categories":[{"name":"hexo","slug":"hexo","permalink":"https://github.com/wangqi1994/wangqi1994.github.io/categories/hexo/"}],"tags":[{"name":"hexo","slug":"hexo","permalink":"https://github.com/wangqi1994/wangqi1994.github.io/tags/hexo/"}]},{"title":"PyCharm 2020.3.3 激活码_安装教程","slug":"2021-03-23-PyCharm-2020.3.3-激活码_安装教程","date":"2021-03-23T04:00:00.000Z","updated":"2021-03-23T04:00:00.000Z","comments":true,"path":"2021/03/23/2021-03-23-PyCharm-2020.3.3-激活码_安装教程/","link":"","permalink":"https://github.com/wangqi1994/wangqi1994.github.io/2021/03/23/2021-03-23-PyCharm-2020.3.3-%E6%BF%80%E6%B4%BB%E7%A0%81_%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B/","excerpt":"","text":"PyCharm 2020.3.3 激活码_安装教程因为 Pycharm 同属于 Jetbrains 系列产品，所以激活方式与 IDEA 激活方式是一样的： 这里提供两种激活方式： 第一种： 即本文的教程，亲测可激活至 2099 年，跟着图文，一步一步操作即可； 第二种： 通过无限重置30天试用期的方式继续使用 ​ 无限重置方法链接 本教程适用于 PyCharm 2020.3.3 以下所有版本，请放心食用 ~ 本教程适用于 JetBrains 全系列产品，包括 IDEA、PyCharm、WebStorm、Phpstorm、Datagrip、RubyMine、CLion、AppCode 等。 本教程适用 Windows/Mac/Linux 系统，文中以 Windows 系统为例做讲解，其他系统按照教程顺序即可。 第一步: 下载最新的 PyCharm 2020.3.3 版本安装包我们先从 PyCharm 官网下载 PyCharm 2020.3.3 版本的安装包，下载链接如下： https://www.jetbrains.com/pycharm/download 点击下载，静心等待其下载完毕即可。 第二步: 先卸载老版本的 PyCharm 注意，如果电脑上之前有安装老版本的 PyCharm, 需要先卸载干净，否则可能安装失败！ 注意，一定要先卸载干净掉老版本的 PyCharm。 第三步: 开始激活 PyCharm 2020.3.3 版本2.安装目录默认为 C:\\Program Files\\JetBrains\\PyCharm 2020.3.3, 自主修改: 3.勾选创建桌面快捷方式 64 位系统的： 4.点击 Install： 5.安装完成后，勾选 Run PyCharm，点击 Finish 运行软件: 6.等待 PyCharm 2020.3.3 运行, 中间会先弹出一个注册框，我们勾选Evaluate for free, 点击 Evaluate， 先试用 30 天: 注意，如果没有弹出上面的界面，可执行重置30天试用期脚本 打开该文件夹后，有对应系统的执行脚本，执行即可： windows系统：reset_jetbrains_eval_windows.vbs linux/mac系统：reset_jetbrains_eval_mac_linux.sh 7.进入 PyCharm 中， 我们先随便建个 Python 工程，然后将网盘中最新的 Pycharm 破解补丁 BetterIntelliJ.zip拖入 Pycharm界面中，如下图所示： 注意：必须新建一个 Python 项目后，再将破解补丁拖入 Pycharm 界面中。 拖进去后，提示下面弹框表示安装成功： *注意： * *zip 补丁包无需解压 ~ 无需解压 ~ 无需解压 ~ * 激活后补丁不要移动，不要删除~ 补丁安装成功后，需要输入激活补丁key.txt里面的激活码，两个步骤缺一不可，否则会激活失败 4.1 另外一种安装补丁的方式如果拖动的方式不成功，还可以通过磁盘安装插件，点击菜单 File -&gt; Settings -&gt; Install Plugin From Disk，图文步骤如下： 注意：安装成功后一定要重启 Pycharm!!! 注意：安装成功后一定要重启 Pycharm!!! 注意：安装成功后一定要重启 Pycharm !!! 第五步: 必须重启 ，必须重启 ，重点 ！！ 否则不起作用 ！特别重要：插件安装完成后，必须要重启Pycharm（检查进程，是否真得关闭了Pycharm？），才能生效!!! 报key is invaild,是由于没有重启IDEA，就直接输入激活补丁key.txt里面的激活码，肯定不行的 ！！ **PS: 如果重启一次还是提示 key is invaild, 请再重启一次试试 ！ 第六步: 检查插件是否安装成功（建议）插件安装完成后，建议检查一下是否安装成功，点击菜单：Help -&gt; Edit Custom VM Options... 打开 .vmoptions 配置文件，如果插件安装成功，会在文件中添加以 -javaagent 为前缀的配置，如下图所示: 1234567## 以windows为例，正确配置如下：-javaagent:C:\\Users\\Public\\.BetterIntelliJ\\BetterIntelliJ-版本号.jar## 以unix为例，正确配置如下：-javaagent:$&#123;HOME&#125;&#x2F;&#x2F;.BetterIntelliJ&#x2F;BetterIntelliJ-版本号.jar 注意：如果你之前配置了其他的 -javaagent 路径，请一定要先删除掉 ！！！ 否则会激活不成功 ！！！ 注意：如果你之前配置了其他的 -javaagent 路径，请一定要先删除掉 ！！！ 否则会激活不成功 ！！！ 注意：如果你之前配置了其他的 -javaagent 路径，请一定要先删除掉 ！！！ 否则会激活不成功 ！！！ 第七步：输入 激活补丁key.txt里面的激活码重启成功后，点击菜单 Help -&gt; Register -&gt; Add New License ， 如下图所示: 复制网盘中的 激活补丁key.txt文件中的激活码，拷贝到输入框中，然后点击 Activate 按钮激活： 到这里， Pycharm 就已经激活成功了 ~ 第八步: 验证 Pycharm 是否激活成功你说激活成功就激活成功了？我咋不信呢？ 别急，接下来我们就来验证一下 Pycharm 是否已经激活成功了，步骤如下： 1.进入 IDEA 界面后，点击 Help -&gt; Register 查看：","categories":[{"name":"软件配置","slug":"软件配置","permalink":"https://github.com/wangqi1994/wangqi1994.github.io/categories/%E8%BD%AF%E4%BB%B6%E9%85%8D%E7%BD%AE/"}],"tags":[{"name":"软件配置","slug":"软件配置","permalink":"https://github.com/wangqi1994/wangqi1994.github.io/tags/%E8%BD%AF%E4%BB%B6%E9%85%8D%E7%BD%AE/"}]},{"title":"hexo版本问题导致报错“lineno”","slug":"2021-03-19-hexo版本问题导致报错“lineno”","date":"2021-03-19T04:00:00.000Z","updated":"2021-03-19T04:00:00.000Z","comments":true,"path":"2021/03/19/2021-03-19-hexo版本问题导致报错“lineno”/","link":"","permalink":"https://github.com/wangqi1994/wangqi1994.github.io/2021/03/19/2021-03-19-hexo%E7%89%88%E6%9C%AC%E9%97%AE%E9%A2%98%E5%AF%BC%E8%87%B4%E6%8A%A5%E9%94%99%E2%80%9Clineno%E2%80%9D/","excerpt":"","text":"hexo -v出现的问题 1234567891011121314151617181920212223242526$ hexo -v(node:9876) Warning: Accessing non-existent property &#39;lineno&#39; of module exports inside circular dependency(Use &#96;node --trace-warnings ...&#96; to show where the warning was created)(node:9876) Warning: Accessing non-existent property &#39;column&#39; of module exports inside circular dependency(node:9876) Warning: Accessing non-existent property &#39;filename&#39; of module exports inside circular dependency(node:9876) Warning: Accessing non-existent property &#39;lineno&#39; of module exports inside circular dependency(node:9876) Warning: Accessing non-existent property &#39;column&#39; of module exports inside circular dependency(node:9876) Warning: Accessing non-existent property &#39;filename&#39; of module exports inside circular dependencyhexo: 4.2.0hexo-cli: 3.1.0os: Windows_NT 10.0.18363 win32 x64node: 14.0.0v8: 8.1.307.30-node.30uv: 1.37.0zlib: 1.2.11brotli: 1.0.7ares: 1.16.0modules: 83nghttp2: 1.40.0napi: 6llhttp: 2.0.4openssl: 1.1.1fcldr: 36.1icu: 66.1tz: 2019cunicode: 13.0 hexo d -g 出现的问题 1234567891011121314151617181920212223242526272829303132333435363738$ hexo d -g(node:3908) Warning: Accessing non-existent property &#39;lineno&#39; of module exports inside circular dependency(Use &#96;node --trace-warnings ...&#96; to show where the warning was created)(node:3908) Warning: Accessing non-existent property &#39;column&#39; of module exports inside circular dependency(node:3908) Warning: Accessing non-existent property &#39;filename&#39; of module exports inside circular dependency(node:3908) Warning: Accessing non-existent property &#39;lineno&#39; of module exports inside circular dependency(node:3908) Warning: Accessing non-existent property &#39;column&#39; of module exports inside circular dependency(node:3908) Warning: Accessing non-existent property &#39;filename&#39; of module exports inside circular dependencyINFO Start processingINFO Files loaded in 94 msINFO 0 files generated in 22 msINFO Deploying: gitINFO Clearing .deploy_git folder...INFO Copying files from public folder...FATAL Something&#39;s wrong. Maybe you can find the solution here: https:&#x2F;&#x2F;hexo.io&#x2F;docs&#x2F;troubleshooting.htmlTypeError [ERR_INVALID_ARG_TYPE]: The &quot;mode&quot; argument must be integer. Received an instance of Object at copyFile (fs.js:1890:10) at tryCatcher (D:\\Blog\\node_modules\\bluebird\\js\\release\\util.js:16:23) at ret (eval at makeNodePromisifiedEval (D:\\Node\\node_global\\node_modules\\hexo-cli\\node_modules\\bluebird\\js\\release\\promisify.js:184:12), &lt;anonymous&gt;:13:39) at D:\\Blog\\node_modules\\hexo-fs\\lib\\fs.js:144:39 at tryCatcher (D:\\Blog\\node_modules\\bluebird\\js\\release\\util.js:16:23) at Promise._settlePromiseFromHandler (D:\\Blog\\node_modules\\bluebird\\js\\release\\promise.js:547:31) at Promise._settlePromise (D:\\Blog\\node_modules\\bluebird\\js\\release\\promise.js:604:18) at Promise._settlePromise0 (D:\\Blog\\node_modules\\bluebird\\js\\release\\promise.js:649:10) at Promise._settlePromises (D:\\Blog\\node_modules\\bluebird\\js\\release\\promise.js:729:18) at Promise._fulfill (D:\\Blog\\node_modules\\bluebird\\js\\release\\promise.js:673:18) at Promise._resolveCallback (D:\\Blog\\node_modules\\bluebird\\js\\release\\promise.js:466:57) at Promise._settlePromiseFromHandler (D:\\Blog\\node_modules\\bluebird\\js\\release\\promise.js:559:17) at Promise._settlePromise (D:\\Blog\\node_modules\\bluebird\\js\\release\\promise.js:604:18) at Promise._settlePromise0 (D:\\Blog\\node_modules\\bluebird\\js\\release\\promise.js:649:10) at Promise._settlePromises (D:\\Blog\\node_modules\\bluebird\\js\\release\\promise.js:729:18) at Promise._fulfill (D:\\Blog\\node_modules\\bluebird\\js\\release\\promise.js:673:18) at Promise._resolveCallback (D:\\Blog\\node_modules\\bluebird\\js\\release\\promise.js:466:57) at Promise._settlePromiseFromHandler (D:\\Blog\\node_modules\\bluebird\\js\\release\\promise.js:559:17) at Promise._settlePromise (D:\\Blog\\node_modules\\bluebird\\js\\release\\promise.js:604:18) at Promise._settlePromise0 (D:\\Blog\\node_modules\\bluebird\\js\\release\\promise.js:649:10) at Promise._settlePromises (D:\\Blog\\node_modules\\bluebird\\js\\release\\promise.js:729:18) at Promise._fulfill (D:\\Blog\\node_modules\\bluebird\\js\\release\\promise.js:673:18) 出现这些是因为node版本太高，切换成低版本的node来安装Hexo就可以了 原先安装了最新版node14.0，后来装了一个比较稳定的node12.14版本，这个问题就解决了","categories":[{"name":"软件配置","slug":"软件配置","permalink":"https://github.com/wangqi1994/wangqi1994.github.io/categories/%E8%BD%AF%E4%BB%B6%E9%85%8D%E7%BD%AE/"}],"tags":[{"name":"软件配置","slug":"软件配置","permalink":"https://github.com/wangqi1994/wangqi1994.github.io/tags/%E8%BD%AF%E4%BB%B6%E9%85%8D%E7%BD%AE/"}]},{"title":"Typora自动上传图片配置，集成PicGo-Core","slug":"2021-03-18-Typora自动上传图片配置，集成PicGo-Core","date":"2021-03-18T04:00:00.000Z","updated":"2021-03-18T04:00:00.000Z","comments":true,"path":"2021/03/18/2021-03-18-Typora自动上传图片配置，集成PicGo-Core/","link":"","permalink":"https://github.com/wangqi1994/wangqi1994.github.io/2021/03/18/2021-03-18-Typora%E8%87%AA%E5%8A%A8%E4%B8%8A%E4%BC%A0%E5%9B%BE%E7%89%87%E9%85%8D%E7%BD%AE%EF%BC%8C%E9%9B%86%E6%88%90PicGo-Core/","excerpt":"","text":"​ 由于markdown上传图片默认是在本地，在其他地方打开时，看不了图片，所以对Typora进行PicGo-Core配置，从而自动上传图片至网络上。 集成步骤如下： 一、下载PicGo-Core 二、配置PicGo-Core的图床 注意：图片中“对网络位置的图片应用上述规则”这个选项。 如果不勾选，从其他网站复制的图片，就不会上传至你配置的图床，md文档中会直接显示对应网站图片链接； 如果勾选了，就会在本地生成upload文件夹，自动下载图片后，再上传至你配置的图床。 无论是否勾选，对于QQ截屏的图片，也会在本地生成upload文件夹，保存图片后，再上传至你配置的图床。 具体配置依赖于你选择用什么图床（就是存储到哪里） 如果准备用gitee作为图床，跳过此步，直接看下方的gitee配置步骤 配置参考文档：https://picgo.github.io/PicGo-Core-Doc/zh/guide/config.html 三、验证功能上述配置完成后，可以验证下 四、gitee配置步骤1、gitee账号配置先有一个gitee账号，官网：https://gitee.com/ 创建一个公有仓库，用于存储图片 生成一个token用于PicGo操作你的仓库（生成后的token务必自己保存下，防止丢失） 访问：https://gitee.com/profile/personal_access_tokens 2、安装nodejs因为使用gitee作为图床，需要下载gitee-uploader插件，而下载插件又需要nodejs的运行时环境 下载地址：https://nodejs.org/en/ 安装node-v12.16.2-x64.msi文件，一路next就可以了 3、下载插件需要下载两个插件 gitee-uploader（用于使用gitee作为图床） super-prefix（用于上传图片时能自动使用时间戳重命名） 1.查询之前安装的PicGo执行路径 2.拷贝路径后进入cmd操作 123cd C:\\Users\\aji\\AppData\\Roaming\\Typora\\picgo\\win64.\\picgo.exe install gitee-uploader.\\picgo.exe install super-prefix 均下载成功即可（如果执行报错 NPM is not installed，请检查上 #四.2步中的 nodejs 是否已安装成功），如： 4、修改配置文件修改为如下内容： 12345678910111213141516171819&#123;&quot;picBed&quot;: &#123; &quot;uploader&quot;: &quot;gitee&quot;, &#x2F;&#x2F; 代表当前的上传图床 &quot;gitee&quot;: &#123; &quot;repo&quot;: &quot;&quot;, &#x2F;&#x2F; 仓库名，格式是 username&#x2F;reponame 必填 &quot;token&quot;: &quot;&quot;, &#x2F;&#x2F; gitee 私人令牌 必填 &quot;path&quot;: &quot;&quot;, &#x2F;&#x2F; 自定义存储路径，比如 img&#x2F; 建议填 &quot;customUrl&quot;: &quot;&quot;, &#x2F;&#x2F; 没有自己的域名的话，可以默认为空就行； 如果自定义域名，注意要加http:&#x2F;&#x2F;或者https:&#x2F;&#x2F;， &quot;branch&quot;: &quot;&quot; &#x2F;&#x2F; 分支名，默认是 master &#125; &#125;, &quot;picgoPlugins&quot;: &#123; &quot;picgo-plugin-gitee-uploader&quot;: true, &quot;picgo-plugin-super-prefix&quot;: true &#125;, &#x2F;&#x2F; 为插件预留 &quot;picgo-plugin-super-prefix&quot;: &#123; &quot;fileFormat&quot;: &quot;YYYYMMDDHHmmss&quot; &#125; &#x2F;&#x2F;super-prefix插件配置&#125; 5、配置完成后验证 如果图片上传成功并可以访问，自动上传图片的配置就结束了 参考文档https://support.typora.io/Upload-Image/#install-prebuilt-binary-of-picgo-core-linux--windows https://blog.csdn.net/jaymie1023/article/details/105361168/ https://github.com/PicGo/PicGo-Core https://picgo.github.io/PicGo-Core-Doc/zh/guide/config.html#%E9%BB%98%E8%AE%A4%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6","categories":[{"name":"软件配置","slug":"软件配置","permalink":"https://github.com/wangqi1994/wangqi1994.github.io/categories/%E8%BD%AF%E4%BB%B6%E9%85%8D%E7%BD%AE/"}],"tags":[{"name":"软件配置","slug":"软件配置","permalink":"https://github.com/wangqi1994/wangqi1994.github.io/tags/%E8%BD%AF%E4%BB%B6%E9%85%8D%E7%BD%AE/"}]},{"title":"oracle中文转拼音函数","slug":"oracle中文转拼音函数","date":"2020-08-14T04:00:00.000Z","updated":"2020-08-14T04:00:00.000Z","comments":true,"path":"2020/08/14/oracle中文转拼音函数/","link":"","permalink":"https://github.com/wangqi1994/wangqi1994.github.io/2020/08/14/oracle%E4%B8%AD%E6%96%87%E8%BD%AC%E6%8B%BC%E9%9F%B3%E5%87%BD%E6%95%B0/","excerpt":"","text":" OR REPLACE FUNCTION fn_getpy (p_str IN VARCHAR2, p_flag NUMBER DEFAULT NULL) RETURN VARCHAR2AS v_compare VARCHAR2 (4); v_return VARCHAR2 (4000); v_length INT :&#x3D; 0; v_substr VARCHAR2 (4); FUNCTION fn_nlssort (p_word IN VARCHAR2) RETURN VARCHAR2 AS BEGIN RETURN SUBSTR (NLSSORT (p_word, &#39;nls_sort&#x3D;schinese_pinyin_m&#39;), 1, 4); END fn_nlssort;BEGIN IF p_str IS NULL THEN RETURN &#39;&#39;; END IF; v_length :&#x3D; LENGTH (p_str); CASE p_flag WHEN 1 THEN --全拼大写 FOR i IN 1 .. v_length LOOP v_substr :&#x3D; SUBSTR (p_str, i, 1); v_compare :&#x3D; fn_nlssort (v_substr); CASE WHEN v_compare BETWEEN &#39;3B29&#39; AND &#39;3B30&#39; THEN v_return :&#x3D; v_return || &#39;A&#39;; WHEN v_compare &#x3D; &#39;3B31&#39; THEN v_return :&#x3D; v_return || &#39;AES&#39;; WHEN v_compare BETWEEN &#39;3B32&#39; AND &#39;3B9E&#39; THEN v_return :&#x3D; v_return || &#39;AI&#39;; WHEN v_compare BETWEEN &#39;3BA0&#39; AND &#39;3BFE&#39; THEN v_return :&#x3D; v_return || &#39;AN&#39;; WHEN v_compare BETWEEN &#39;3C01&#39; AND &#39;3C14&#39; THEN v_return :&#x3D; v_return || &#39;ANG&#39;; WHEN v_compare BETWEEN &#39;3C15&#39; AND &#39;3C82&#39; THEN v_return :&#x3D; v_return || &#39;AO&#39;; WHEN v_compare BETWEEN &#39;3C84&#39; AND &#39;3CE9&#39; THEN v_return :&#x3D; v_return || &#39;BA&#39;; WHEN v_compare BETWEEN &#39;3CED&#39; AND &#39;3D1D&#39; THEN v_return :&#x3D; v_return || &#39;BAI&#39;; WHEN v_compare BETWEEN &#39;3D20&#39; AND &#39;3D64&#39; THEN v_return :&#x3D; v_return || &#39;BAN&#39;; WHEN v_compare BETWEEN &#39;3D66&#39; AND &#39;3DA2&#39; THEN v_return :&#x3D; v_return || &#39;BANG&#39;; WHEN v_compare BETWEEN &#39;3DA4&#39; AND &#39;3E10&#39; THEN v_return :&#x3D; v_return || &#39;BAO&#39;; WHEN v_compare &#x3D; &#39;3E11&#39; THEN v_return :&#x3D; v_return || &#39;BE&#39;; WHEN v_compare BETWEEN &#39;3E12&#39; AND &#39;3E7A&#39; THEN v_return :&#x3D; v_return || &#39;BEI&#39;; WHEN v_compare BETWEEN &#39;3E7C&#39; AND &#39;3EA0&#39; THEN v_return :&#x3D; v_return || &#39;BEN&#39;; WHEN v_compare BETWEEN &#39;3EA1&#39; AND &#39;3ED5&#39; THEN v_return :&#x3D; v_return || &#39;BENG&#39;; WHEN v_compare BETWEEN &#39;3ED8&#39; AND &#39;3FE9&#39; THEN v_return :&#x3D; v_return || &#39;BI&#39;; WHEN v_compare BETWEEN &#39;3FEA&#39; AND &#39;4055&#39; THEN v_return :&#x3D; v_return || &#39;BIAN&#39;; WHEN v_compare BETWEEN &#39;4058&#39; AND &#39;40AE&#39; THEN v_return :&#x3D; v_return || &#39;BIAO&#39;; WHEN v_compare &#x3D; &#39;4060&#39; THEN v_return :&#x3D; v_return || &#39;BIA&#39;; WHEN v_compare BETWEEN &#39;40B4&#39; AND &#39;40D4&#39; THEN v_return :&#x3D; v_return || &#39;BIE&#39;; WHEN v_compare BETWEEN &#39;40D6&#39; AND &#39;4116&#39; THEN v_return :&#x3D; v_return || &#39;BIN&#39;; WHEN v_compare BETWEEN &#39;4118&#39; AND &#39;4160&#39; THEN v_return :&#x3D; v_return || &#39;BING&#39;; WHEN v_compare BETWEEN &#39;4161&#39; AND &#39;4224&#39; THEN v_return :&#x3D; v_return || &#39;BO&#39;; WHEN v_compare BETWEEN &#39;4225&#39; AND &#39;427C&#39; THEN v_return :&#x3D; v_return || &#39;BU&#39;; WHEN v_compare BETWEEN &#39;427D&#39; AND &#39;4289&#39; THEN v_return :&#x3D; v_return || &#39;CA&#39;; WHEN v_compare BETWEEN &#39;428C&#39; AND &#39;42B5&#39; THEN v_return :&#x3D; v_return || &#39;CAI&#39;; WHEN v_compare BETWEEN &#39;42B9&#39; AND &#39;430C&#39; THEN v_return :&#x3D; v_return || &#39;CAN&#39;; WHEN v_compare BETWEEN &#39;430D&#39; AND &#39;4334&#39; THEN v_return :&#x3D; v_return || &#39;CANG&#39;; WHEN v_compare BETWEEN &#39;4335&#39; AND &#39;435C&#39; THEN v_return :&#x3D; v_return || &#39;CAO&#39;; WHEN v_compare BETWEEN &#39;435D&#39; AND &#39;438C&#39; THEN v_return :&#x3D; v_return || &#39;CE&#39;; WHEN v_compare BETWEEN &#39;4390&#39; AND &#39;4398&#39; THEN v_return :&#x3D; v_return || &#39;CEN&#39;; WHEN v_compare BETWEEN &#39;439D&#39; AND &#39;43AA&#39; THEN v_return :&#x3D; v_return || &#39;CENG&#39;; WHEN v_compare &#x3D; &#39;43AC&#39; THEN v_return :&#x3D; v_return || &#39;CEOK&#39;; WHEN v_compare &#x3D; &#39;43AE&#39; THEN v_return :&#x3D; v_return || &#39;CEOM&#39;; WHEN v_compare &#x3D; &#39;43B0&#39; THEN v_return :&#x3D; v_return || &#39;CEON&#39;; WHEN v_compare &#x3D; &#39;43B1&#39; THEN v_return :&#x3D; v_return || &#39;CEOR&#39;; WHEN v_compare BETWEEN &#39;43B2&#39; AND &#39;440A&#39; THEN v_return :&#x3D; v_return || &#39;CHA&#39;; WHEN v_compare BETWEEN &#39;440E&#39; AND &#39;442D&#39; THEN v_return :&#x3D; v_return || &#39;CHAI&#39;; WHEN v_compare BETWEEN &#39;4431&#39; AND &#39;44E1&#39; THEN v_return :&#x3D; v_return || &#39;CHAN&#39;; WHEN v_compare BETWEEN &#39;44E4&#39; AND &#39;4552&#39; THEN v_return :&#x3D; v_return || &#39;CHANG&#39;; WHEN v_compare BETWEEN &#39;4554&#39; AND &#39;458E&#39; THEN v_return :&#x3D; v_return || &#39;CHAO&#39;; WHEN v_compare BETWEEN &#39;4590&#39; AND &#39;45C8&#39; THEN v_return :&#x3D; v_return || &#39;CHE&#39;; WHEN v_compare BETWEEN &#39;45C9&#39; AND &#39;463D&#39; THEN v_return :&#x3D; v_return || &#39;CHEN&#39;; WHEN v_compare BETWEEN &#39;463E&#39; AND &#39;46CD&#39; THEN v_return :&#x3D; v_return || &#39;CHENG&#39;; WHEN v_compare BETWEEN &#39;46CE&#39; AND &#39;47A6&#39; THEN v_return :&#x3D; v_return || &#39;CHI&#39;; WHEN v_compare BETWEEN &#39;47A8&#39; AND &#39;47EC&#39; THEN v_return :&#x3D; v_return || &#39;CHONG&#39;; WHEN v_compare BETWEEN &#39;47ED&#39; AND &#39;484C&#39; THEN v_return :&#x3D; v_return || &#39;CHOU&#39;; WHEN v_compare BETWEEN &#39;484D&#39; AND &#39;48E2&#39; THEN v_return :&#x3D; v_return || &#39;CHU&#39;; WHEN v_compare BETWEEN &#39;48E9&#39; AND &#39;48F4&#39; THEN v_return :&#x3D; v_return || &#39;CHUAI&#39;; WHEN v_compare BETWEEN &#39;48F6&#39; AND &#39;4924&#39; THEN v_return :&#x3D; v_return || &#39;CHUAN&#39;; WHEN v_compare BETWEEN &#39;4925&#39; AND &#39;4951&#39; THEN v_return :&#x3D; v_return || &#39;CHUANG&#39;; WHEN v_compare BETWEEN &#39;4954&#39; AND &#39;496E&#39; THEN v_return :&#x3D; v_return || &#39;CHUI&#39;; WHEN v_compare BETWEEN &#39;4971&#39; AND &#39;49C6&#39; THEN v_return :&#x3D; v_return || &#39;CHUN&#39;; WHEN v_compare BETWEEN &#39;49C8&#39; AND &#39;49EA&#39; THEN v_return :&#x3D; v_return || &#39;CHUO&#39;; WHEN v_compare BETWEEN &#39;49EC&#39; AND &#39;4A4A&#39; THEN v_return :&#x3D; v_return || &#39;CI&#39;; WHEN v_compare &#x3D; &#39;4A50&#39; THEN v_return :&#x3D; v_return || &#39;CIS&#39;; WHEN v_compare BETWEEN &#39;4A51&#39; AND &#39;4AB2&#39; THEN v_return :&#x3D; v_return || &#39;CONG&#39;; WHEN v_compare BETWEEN &#39;4AB4&#39; AND &#39;4ABA&#39; THEN v_return :&#x3D; v_return || &#39;COU&#39;; WHEN v_compare BETWEEN &#39;4ABC&#39; AND &#39;4AEA&#39; THEN v_return :&#x3D; v_return || &#39;CU&#39;; WHEN v_compare BETWEEN &#39;4AEE&#39; AND &#39;4B0C&#39; THEN v_return :&#x3D; v_return || &#39;CUAN&#39;; WHEN v_compare BETWEEN &#39;4B0D&#39; AND &#39;4B56&#39; THEN v_return :&#x3D; v_return || &#39;CUI&#39;; WHEN v_compare BETWEEN &#39;4B59&#39; AND &#39;4B6C&#39; THEN v_return :&#x3D; v_return || &#39;CUN&#39;; WHEN v_compare BETWEEN &#39;4B70&#39; AND &#39;4BA9&#39; THEN v_return :&#x3D; v_return || &#39;CUO&#39;; WHEN v_compare BETWEEN &#39;4BAD&#39; AND &#39;4BFE&#39; THEN v_return :&#x3D; v_return || &#39;DA&#39;; WHEN v_compare BETWEEN &#39;4C00&#39; AND &#39;4C4E&#39; THEN v_return :&#x3D; v_return || &#39;DAI&#39;; WHEN v_compare BETWEEN &#39;4C50&#39; AND &#39;4CDC&#39; THEN v_return :&#x3D; v_return || &#39;DAN&#39;; WHEN v_compare BETWEEN &#39;4CDE&#39; AND &#39;4D26&#39; THEN v_return :&#x3D; v_return || &#39;DANG&#39;; WHEN v_compare BETWEEN &#39;4D28&#39; AND &#39;4D76&#39; THEN v_return :&#x3D; v_return || &#39;DAO&#39;; WHEN v_compare BETWEEN &#39;4D7E&#39; AND &#39;4D8D&#39; THEN v_return :&#x3D; v_return || &#39;DE&#39;; WHEN v_compare &#x3D; &#39;4D8E&#39; THEN v_return :&#x3D; v_return || &#39;DEM&#39;; WHEN v_compare BETWEEN &#39;4D90&#39; AND &#39;4D91&#39; THEN v_return :&#x3D; v_return || &#39;DEN&#39;; WHEN v_compare BETWEEN &#39;4D94&#39; AND &#39;4DC0&#39; THEN v_return :&#x3D; v_return || &#39;DENG&#39;; WHEN v_compare BETWEEN &#39;4DC4&#39; AND &#39;4E8A&#39; THEN v_return :&#x3D; v_return || &#39;DI&#39;; WHEN v_compare &#x3D; &#39;4E8C&#39; THEN v_return :&#x3D; v_return || &#39;DIA&#39;; WHEN v_compare BETWEEN &#39;4E8D&#39; AND &#39;4EE8&#39; THEN v_return :&#x3D; v_return || &#39;DIAN&#39;; WHEN v_compare BETWEEN &#39;4EE9&#39; AND &#39;4F38&#39; THEN v_return :&#x3D; v_return || &#39;DIAO&#39;; WHEN v_compare BETWEEN &#39;4F39&#39; AND &#39;4F90&#39; THEN v_return :&#x3D; v_return || &#39;DIE&#39;; WHEN v_compare &#x3D; &#39;4F8D&#39; THEN v_return :&#x3D; v_return || &#39;DEI&#39;; WHEN v_compare &#x3D; &#39;4F91&#39; THEN v_return :&#x3D; v_return || &#39;DIM&#39;; WHEN v_compare BETWEEN &#39;4F92&#39; AND &#39;4FCD&#39; THEN v_return :&#x3D; v_return || &#39;DING&#39;; WHEN v_compare BETWEEN &#39;4FCD&#39; AND &#39;4FD4&#39; THEN v_return :&#x3D; v_return || &#39;DIU&#39;; WHEN v_compare BETWEEN &#39;4FD5&#39; AND &#39;5032&#39; THEN v_return :&#x3D; v_return || &#39;DONG&#39;; WHEN v_compare BETWEEN &#39;5034&#39; AND &#39;507C&#39; THEN v_return :&#x3D; v_return || &#39;DOU&#39;; WHEN v_compare &#x3D; &#39;5044&#39; THEN v_return :&#x3D; v_return || &#39;DUL&#39;; WHEN v_compare BETWEEN &#39;507E&#39; AND &#39;50E9&#39; THEN v_return :&#x3D; v_return || &#39;DU&#39;; WHEN v_compare BETWEEN &#39;50EA&#39; AND &#39;5110&#39; THEN v_return :&#x3D; v_return || &#39;DUAN&#39;; WHEN v_compare BETWEEN &#39;5114&#39; AND &#39;514E&#39; THEN v_return :&#x3D; v_return || &#39;DUI&#39;; WHEN v_compare BETWEEN &#39;5152&#39; AND &#39;518D&#39; THEN v_return :&#x3D; v_return || &#39;DUN&#39;; WHEN v_compare &#x3D; &#39;5160&#39; THEN v_return :&#x3D; v_return || &#39;TON&#39;; WHEN v_compare BETWEEN &#39;518E&#39; AND &#39;5200&#39; THEN v_return :&#x3D; v_return || &#39;DUO&#39;; WHEN v_compare BETWEEN &#39;5205&#39; AND &#39;52C2&#39; THEN v_return :&#x3D; v_return || &#39;E&#39;; WHEN v_compare BETWEEN &#39;52C4&#39; AND &#39;52CD&#39; THEN v_return :&#x3D; v_return || &#39;EN&#39;; WHEN v_compare &#x3D; &#39;52D4&#39; THEN v_return :&#x3D; v_return || &#39;ENG&#39;; WHEN v_compare &#x3D; &#39;52D5&#39; THEN v_return :&#x3D; v_return || &#39;EO&#39;; WHEN v_compare &#x3D; &#39;52D6&#39; THEN v_return :&#x3D; v_return || &#39;EOL&#39;; WHEN v_compare &#x3D; &#39;52D8&#39; THEN v_return :&#x3D; v_return || &#39;EOS&#39;; WHEN v_compare BETWEEN &#39;52D9&#39; AND &#39;5332&#39; THEN v_return :&#x3D; v_return || &#39;ER&#39;; WHEN v_compare BETWEEN &#39;5334&#39; AND &#39;5366&#39; THEN v_return :&#x3D; v_return || &#39;FA&#39;; WHEN v_compare BETWEEN &#39;536A&#39; AND &#39;53FA&#39; THEN v_return :&#x3D; v_return || &#39;FAN&#39;; WHEN v_compare BETWEEN &#39;53FD&#39; AND &#39;5438&#39; THEN v_return :&#x3D; v_return || &#39;FANG&#39;; WHEN v_compare BETWEEN &#39;5439&#39; AND &#39;54B2&#39; THEN v_return :&#x3D; v_return || &#39;FEI&#39;; WHEN v_compare BETWEEN &#39;54B4&#39; AND &#39;5528&#39; THEN v_return :&#x3D; v_return || &#39;FEN&#39;; WHEN v_compare BETWEEN &#39;5529&#39; AND &#39;55A9&#39; THEN v_return :&#x3D; v_return || &#39;FENG&#39;; WHEN v_compare BETWEEN &#39;55AA&#39; AND &#39;55AE&#39; THEN v_return :&#x3D; v_return || &#39;FO&#39;; WHEN v_compare BETWEEN &#39;55B1&#39; AND &#39;55BC&#39; THEN v_return :&#x3D; v_return || &#39;FOU&#39;; WHEN v_compare BETWEEN &#39;55BD&#39; AND &#39;5739&#39; THEN v_return :&#x3D; v_return || &#39;FU&#39;; WHEN v_compare &#x3D; &#39;569D&#39; THEN v_return :&#x3D; v_return || &#39;M&#39;; WHEN v_compare BETWEEN &#39;573C&#39; AND &#39;574C&#39; THEN v_return :&#x3D; v_return || &#39;GA&#39;; WHEN v_compare BETWEEN &#39;574D&#39; AND &#39;578C&#39; THEN v_return :&#x3D; v_return || &#39;GAI&#39;; WHEN v_compare BETWEEN &#39;578D&#39; AND &#39;57F0&#39; THEN v_return :&#x3D; v_return || &#39;GAN&#39;; WHEN v_compare BETWEEN &#39;57F1&#39; AND &#39;582C&#39; THEN v_return :&#x3D; v_return || &#39;GANG&#39;; WHEN v_compare BETWEEN &#39;582E&#39; AND &#39;5884&#39; THEN v_return :&#x3D; v_return || &#39;GAO&#39;; WHEN v_compare BETWEEN &#39;5885&#39; AND &#39;5905&#39; THEN v_return :&#x3D; v_return || &#39;GE&#39;; WHEN v_compare &#x3D; &#39;5906&#39; THEN v_return :&#x3D; v_return || &#39;GEI&#39;; WHEN v_compare BETWEEN &#39;5909&#39; AND &#39;5915&#39; THEN v_return :&#x3D; v_return || &#39;GEN&#39;; WHEN v_compare BETWEEN &#39;5918&#39; AND &#39;594E&#39; THEN v_return :&#x3D; v_return || &#39;GENG&#39;; WHEN v_compare &#x3D; &#39;5956&#39; THEN v_return :&#x3D; v_return || &#39;GIB&#39;; WHEN v_compare &#x3D; &#39;5958&#39; THEN v_return :&#x3D; v_return || &#39;GO&#39;; WHEN v_compare BETWEEN &#39;5959&#39; AND &#39;59BA&#39; THEN v_return :&#x3D; v_return || &#39;GONG&#39;; WHEN v_compare BETWEEN &#39;59BD&#39; AND &#39;5A0E&#39; THEN v_return :&#x3D; v_return || &#39;GOU&#39;; WHEN v_compare BETWEEN &#39;5A10&#39; AND &#39;5AB2&#39; THEN v_return :&#x3D; v_return || &#39;GU&#39;; WHEN v_compare BETWEEN &#39;5AB4&#39; AND &#39;5AE8&#39; THEN v_return :&#x3D; v_return || &#39;GUA&#39;; WHEN v_compare BETWEEN &#39;5AE9&#39; AND &#39;5AF8&#39; THEN v_return :&#x3D; v_return || &#39;GUAI&#39;; WHEN v_compare BETWEEN &#39;5AFD&#39; AND &#39;5B5E&#39; THEN v_return :&#x3D; v_return || &#39;GUAN&#39;; WHEN v_compare BETWEEN &#39;5B60&#39; AND &#39;5B8C&#39; THEN v_return :&#x3D; v_return || &#39;GUANG&#39;; WHEN v_compare BETWEEN &#39;5B8D&#39; AND &#39;5C2E&#39; THEN v_return :&#x3D; v_return || &#39;GUI&#39;; WHEN v_compare &#x3D; &#39;5BC8&#39; THEN v_return :&#x3D; v_return || &#39;KWI&#39;; WHEN v_compare BETWEEN &#39;5C30&#39; AND &#39;5C58&#39; THEN v_return :&#x3D; v_return || &#39;GUN&#39;; WHEN v_compare BETWEEN &#39;5C51&#39; AND &#39;5CB6&#39; THEN v_return :&#x3D; v_return || &#39;GUO&#39;; WHEN v_compare BETWEEN &#39;5CB8&#39; AND &#39;5CBD&#39; THEN v_return :&#x3D; v_return || &#39;HA&#39;; WHEN v_compare BETWEEN &#39;5CC6&#39; AND &#39;5CEC&#39; THEN v_return :&#x3D; v_return || &#39;HAI&#39;; WHEN v_compare &#x3D; &#39;5CED&#39; THEN v_return :&#x3D; v_return || &#39;HAL&#39;; WHEN v_compare BETWEEN &#39;5CEE&#39; AND &#39;5D99&#39; THEN v_return :&#x3D; v_return || &#39;HAN&#39;; WHEN v_compare BETWEEN &#39;5D9D&#39; AND &#39;5DBC&#39; THEN v_return :&#x3D; v_return || &#39;HANG&#39;; WHEN v_compare BETWEEN &#39;5DBE&#39; AND &#39;5E20&#39; THEN v_return :&#x3D; v_return || &#39;HAO&#39;; WHEN v_compare &#x3D; &#39;5E02&#39; THEN v_return :&#x3D; v_return || &#39;HO&#39;; WHEN v_compare BETWEEN &#39;5E22&#39; AND &#39;5EC5&#39; THEN v_return :&#x3D; v_return || &#39;HE&#39;; WHEN v_compare BETWEEN &#39;5EC6&#39; AND &#39;5ECE&#39; THEN v_return :&#x3D; v_return || &#39;HEI&#39;; WHEN v_compare BETWEEN &#39;5ED0&#39; AND &#39;5EDC&#39; THEN v_return :&#x3D; v_return || &#39;HEN&#39;; WHEN v_compare BETWEEN &#39;5EDD&#39; AND &#39;5EDC&#39; THEN v_return :&#x3D; v_return || &#39;HENG&#39;; WHEN v_compare &#x3D; &#39;5EF4&#39; THEN v_return :&#x3D; v_return || &#39;HOL&#39;; WHEN v_compare BETWEEN &#39;5F05&#39; AND &#39;5F8D&#39; THEN v_return :&#x3D; v_return || &#39;HONG&#39;; WHEN v_compare BETWEEN &#39;5F8E&#39; AND &#39;5FD2&#39; THEN v_return :&#x3D; v_return || &#39;HOU&#39;; WHEN v_compare BETWEEN &#39;5FD4&#39; AND &#39;60B1&#39; THEN v_return :&#x3D; v_return || &#39;HU&#39;; WHEN v_compare BETWEEN &#39;60B2&#39; AND &#39;6111&#39; THEN v_return :&#x3D; v_return || &#39;HUA&#39;; WHEN v_compare BETWEEN &#39;6112&#39; AND &#39;612D&#39; THEN v_return :&#x3D; v_return || &#39;HUAI&#39;; WHEN v_compare BETWEEN &#39;612E&#39; AND &#39;61C6&#39; THEN v_return :&#x3D; v_return || &#39;HUAN&#39;; WHEN v_compare BETWEEN &#39;61CA&#39; AND &#39;624A&#39; THEN v_return :&#x3D; v_return || &#39;HUANG&#39;; WHEN v_compare BETWEEN &#39;624C&#39; AND &#39;6344&#39; THEN v_return :&#x3D; v_return || &#39;HUI&#39;; WHEN v_compare BETWEEN &#39;6346&#39; AND &#39;6388&#39; THEN v_return :&#x3D; v_return || &#39;HUN&#39;; WHEN v_compare BETWEEN &#39;638C&#39; AND &#39;63FA&#39; THEN v_return :&#x3D; v_return || &#39;HUO&#39;; WHEN v_compare &#x3D; &#39;63FD&#39; THEN v_return :&#x3D; v_return || &#39;HWA&#39;; WHEN v_compare BETWEEN &#39;63FE&#39; AND &#39;6601&#39; THEN v_return :&#x3D; v_return || &#39;JI&#39;; WHEN v_compare BETWEEN &#39;6604&#39; AND &#39;6691&#39; THEN v_return :&#x3D; v_return || &#39;JIA&#39;; WHEN v_compare BETWEEN &#39;6692&#39; AND &#39;67F8&#39; THEN v_return :&#x3D; v_return || &#39;JIAN&#39;; WHEN v_compare BETWEEN &#39;67F9&#39; AND &#39;6860&#39; THEN v_return :&#x3D; v_return || &#39;JIANG&#39;; WHEN v_compare BETWEEN &#39;6862&#39; AND &#39;6930&#39; THEN v_return :&#x3D; v_return || &#39;JIAO&#39;; WHEN v_compare BETWEEN &#39;6931&#39; AND &#39;6A18&#39; THEN v_return :&#x3D; v_return || &#39;JIE&#39;; WHEN v_compare BETWEEN &#39;6A1A&#39; AND &#39;6AC9&#39; THEN v_return :&#x3D; v_return || &#39;JIN&#39;; WHEN v_compare BETWEEN &#39;6ACA&#39; AND &#39;6B65&#39; THEN v_return :&#x3D; v_return || &#39;JING&#39;; WHEN v_compare BETWEEN &#39;6B66&#39; AND &#39;6B9A&#39; THEN v_return :&#x3D; v_return || &#39;JIONG&#39;; WHEN v_compare BETWEEN &#39;6B9C&#39; AND &#39;6C0C&#39; THEN v_return :&#x3D; v_return || &#39;JIU&#39;; WHEN v_compare &#x3D; &#39;6C0D&#39; THEN v_return :&#x3D; v_return || &#39;JOU&#39;; WHEN v_compare BETWEEN &#39;6C0E&#39; AND &#39;6D2A&#39; THEN v_return :&#x3D; v_return || &#39;JU&#39;; WHEN v_compare BETWEEN &#39;6D2D&#39; AND &#39;6D80&#39; THEN v_return :&#x3D; v_return || &#39;JUAN&#39;; WHEN v_compare BETWEEN &#39;6D82&#39; AND &#39;6E28&#39; THEN v_return :&#x3D; v_return || &#39;JUE&#39;; WHEN v_compare BETWEEN &#39;6E2A&#39; AND &#39;6E85&#39; THEN v_return :&#x3D; v_return || &#39;JUN&#39;; WHEN v_compare BETWEEN &#39;6E86&#39; AND &#39;6E92&#39; THEN v_return :&#x3D; v_return || &#39;KA&#39;; WHEN v_compare BETWEEN &#39;6E94&#39; AND &#39;6EC9&#39; THEN v_return :&#x3D; v_return || &#39;KAI&#39;; WHEN v_compare &#x3D; &#39;6ECC&#39; THEN v_return :&#x3D; v_return || &#39;KAL&#39;; WHEN v_compare BETWEEN &#39;6ECD&#39; AND &#39;6F00&#39; THEN v_return :&#x3D; v_return || &#39;KAN&#39;; WHEN v_compare BETWEEN &#39;6F02&#39; AND &#39;6F30&#39; THEN v_return :&#x3D; v_return || &#39;KANG&#39;; WHEN v_compare BETWEEN &#39;6F31&#39; AND &#39;6F4D&#39; THEN v_return :&#x3D; v_return || &#39;KAO&#39;; WHEN v_compare BETWEEN &#39;6F50&#39; AND &#39;6FC8&#39; THEN v_return :&#x3D; v_return || &#39;KE&#39;; WHEN v_compare BETWEEN &#39;6FC9&#39; AND &#39;6FDA&#39; THEN v_return :&#x3D; v_return || &#39;KEN&#39;; WHEN v_compare BETWEEN &#39;6FDC&#39; AND &#39;6FF5&#39; THEN v_return :&#x3D; v_return || &#39;KENG&#39;; WHEN v_compare &#x3D; &#39;6FFC&#39; THEN v_return :&#x3D; v_return || &#39;KI&#39;; WHEN v_compare BETWEEN &#39;6FFD&#39; AND &#39;7016&#39; THEN v_return :&#x3D; v_return || &#39;KONG&#39;; WHEN v_compare &#x3D; &#39;7018&#39; THEN v_return :&#x3D; v_return || &#39;KOS&#39;; WHEN v_compare BETWEEN &#39;7019&#39; AND &#39;703E&#39; THEN v_return :&#x3D; v_return || &#39;KOU&#39;; WHEN v_compare BETWEEN &#39;7041&#39; AND &#39;707A&#39; THEN v_return :&#x3D; v_return || &#39;KU&#39;; WHEN v_compare BETWEEN &#39;707C&#39; AND &#39;7095&#39; THEN v_return :&#x3D; v_return || &#39;KUA&#39;; WHEN v_compare BETWEEN &#39;709A&#39; AND &#39;70C1&#39; THEN v_return :&#x3D; v_return || &#39;KUAI&#39;; WHEN v_compare BETWEEN &#39;70C2&#39; AND &#39;70D4&#39; THEN v_return :&#x3D; v_return || &#39;KUAN&#39;; WHEN v_compare BETWEEN &#39;70D8&#39; AND &#39;7128&#39; THEN v_return :&#x3D; v_return || &#39;KUANG&#39;; WHEN v_compare BETWEEN &#39;7129&#39; AND &#39;71B1&#39; THEN v_return :&#x3D; v_return || &#39;KUI&#39;; WHEN v_compare BETWEEN &#39;71B2&#39; AND &#39;71FE&#39; THEN v_return :&#x3D; v_return || &#39;KUN&#39;; WHEN v_compare BETWEEN &#39;7200&#39; AND &#39;7226&#39; THEN v_return :&#x3D; v_return || &#39;KUO&#39;; WHEN v_compare &#x3D; &#39;7228&#39; THEN v_return :&#x3D; v_return || &#39;KWEOK&#39;; WHEN v_compare BETWEEN &#39;722C&#39; AND &#39;726A&#39; THEN v_return :&#x3D; v_return || &#39;LA&#39;; WHEN v_compare BETWEEN &#39;726C&#39; AND &#39;72B5&#39; THEN v_return :&#x3D; v_return || &#39;LAI&#39;; WHEN v_compare BETWEEN &#39;72B9&#39; AND &#39;733C&#39; THEN v_return :&#x3D; v_return || &#39;LAN&#39;; WHEN v_compare BETWEEN &#39;733D&#39; AND &#39;7388&#39; THEN v_return :&#x3D; v_return || &#39;LANG&#39;; WHEN v_compare BETWEEN &#39;7389&#39; AND &#39;73E5&#39; THEN v_return :&#x3D; v_return || &#39;LAO&#39;; WHEN v_compare BETWEEN &#39;73E8&#39; AND &#39;7402&#39; THEN v_return :&#x3D; v_return || &#39;LE&#39;; WHEN v_compare BETWEEN &#39;7404&#39; AND &#39;7485&#39; THEN v_return :&#x3D; v_return || &#39;LEI&#39;; WHEN v_compare BETWEEN &#39;7488&#39; AND &#39;7499&#39; THEN v_return :&#x3D; v_return || &#39;LENG&#39;; WHEN v_compare BETWEEN &#39;749C&#39; AND &#39;7642&#39; THEN v_return :&#x3D; v_return || &#39;LI&#39;; WHEN v_compare BETWEEN &#39;7644&#39; AND &#39;7645&#39; THEN v_return :&#x3D; v_return || &#39;LIA&#39;; WHEN v_compare BETWEEN &#39;7646&#39; AND &#39;76EC&#39; THEN v_return :&#x3D; v_return || &#39;LIAN&#39;; WHEN v_compare BETWEEN &#39;76ED&#39; AND &#39;7731&#39; THEN v_return :&#x3D; v_return || &#39;LIANG&#39;; WHEN v_compare BETWEEN &#39;7732&#39; AND &#39;7794&#39; THEN v_return :&#x3D; v_return || &#39;LIAO&#39;; WHEN v_compare BETWEEN &#39;7795&#39; AND &#39;77E2&#39; THEN v_return :&#x3D; v_return || &#39;LIE&#39;; WHEN v_compare BETWEEN &#39;77E4&#39; AND &#39;785D&#39; THEN v_return :&#x3D; v_return || &#39;LIN&#39;; WHEN v_compare &#x3D; &#39;77EA&#39; THEN v_return :&#x3D; v_return || &#39;LEN&#39;; WHEN v_compare BETWEEN &#39;7860&#39; AND &#39;7904&#39; THEN v_return :&#x3D; v_return || &#39;LING&#39;; WHEN v_compare BETWEEN &#39;7905&#39; AND &#39;7986&#39; THEN v_return :&#x3D; v_return || &#39;LIU&#39;; WHEN v_compare BETWEEN &#39;7988&#39; AND &#39;7989&#39; THEN v_return :&#x3D; v_return || &#39;LO&#39;; WHEN v_compare BETWEEN &#39;798A&#39; AND &#39;79FD&#39; THEN v_return :&#x3D; v_return || &#39;LONG&#39;; WHEN v_compare BETWEEN &#39;79FE&#39; AND &#39;7A49&#39; THEN v_return :&#x3D; v_return || &#39;LOU&#39;; WHEN v_compare BETWEEN &#39;7A4C&#39; AND &#39;7B4D&#39; THEN v_return :&#x3D; v_return || &#39;LU&#39;; WHEN v_compare BETWEEN &#39;7B4E&#39; AND &#39;7B80&#39; THEN v_return :&#x3D; v_return || &#39;LUAN&#39;; WHEN v_compare BETWEEN &#39;7B81&#39; AND &#39;7BB2&#39; THEN v_return :&#x3D; v_return || &#39;LUN&#39;; WHEN v_compare BETWEEN &#39;7BB5&#39; AND &#39;7C25&#39; THEN v_return :&#x3D; v_return || &#39;LUO&#39;; WHEN v_compare BETWEEN &#39;7C26&#39; AND &#39;7C82&#39; THEN v_return :&#x3D; v_return || &#39;LV&#39;; WHEN v_compare BETWEEN &#39;7C84&#39; AND &#39;7C98&#39; THEN v_return :&#x3D; v_return || &#39;LUE&#39;; WHEN v_compare BETWEEN &#39;7C9C&#39; AND &#39;7CE4&#39; THEN v_return :&#x3D; v_return || &#39;MA&#39;; WHEN v_compare BETWEEN &#39;7CE5&#39; AND &#39;7DOC&#39; THEN v_return :&#x3D; v_return || &#39;MAI&#39;; WHEN v_compare BETWEEN &#39;7D11&#39; AND &#39;7D6E&#39; THEN v_return :&#x3D; v_return || &#39;MAN&#39;; WHEN v_compare BETWEEN &#39;7D70&#39; AND &#39;7DA9&#39; THEN v_return :&#x3D; v_return || &#39;MANG&#39;; WHEN v_compare BETWEEN &#39;7DAC&#39; AND &#39;7E15&#39; THEN v_return :&#x3D; v_return || &#39;MAO&#39;; WHEN v_compare &#x3D; &#39;7E0C&#39; THEN v_return :&#x3D; v_return || &#39;Q&#39;; WHEN v_compare BETWEEN &#39;7E18&#39; AND &#39;7E1E&#39; THEN v_return :&#x3D; v_return || &#39;ME&#39;; WHEN v_compare BETWEEN &#39;7E20&#39; AND &#39;7E9A&#39; THEN v_return :&#x3D; v_return || &#39;MEI&#39;; WHEN v_compare BETWEEN &#39;7E9D&#39; AND &#39;7EC1&#39; THEN v_return :&#x3D; v_return || &#39;MEN&#39;; WHEN v_compare BETWEEN &#39;7EC2&#39; AND &#39;7F36&#39; THEN v_return :&#x3D; v_return || &#39;MENG&#39;; WHEN v_compare &#x3D; &#39;7F38&#39; THEN v_return :&#x3D; v_return || &#39;MEO&#39;; WHEN v_compare BETWEEN &#39;7F39&#39; AND &#39;7FE4&#39; THEN v_return :&#x3D; v_return || &#39;MI&#39;; WHEN v_compare BETWEEN &#39;7FE6&#39; AND &#39;8034&#39; THEN v_return :&#x3D; v_return || &#39;MIAN&#39;; WHEN v_compare BETWEEN &#39;8035&#39; AND &#39;805A&#39; THEN v_return :&#x3D; v_return || &#39;MIAO&#39;; WHEN v_compare BETWEEN &#39;805C&#39; AND &#39;8081&#39; THEN v_return :&#x3D; v_return || &#39;MIE&#39;; WHEN v_compare BETWEEN &#39;8084&#39; AND &#39;80E4&#39; THEN v_return :&#x3D; v_return || &#39;MIN&#39;; WHEN v_compare &#x3D; &#39;8096&#39; THEN v_return :&#x3D; v_return || &#39;LEM&#39;; WHEN v_compare BETWEEN &#39;80E5&#39; AND &#39;8116&#39; THEN v_return :&#x3D; v_return || &#39;MING&#39;; WHEN v_compare BETWEEN &#39;8119&#39; AND &#39;811D&#39; THEN v_return :&#x3D; v_return || &#39;MIU&#39;; WHEN v_compare BETWEEN &#39;811E&#39; AND &#39;81A9&#39; THEN v_return :&#x3D; v_return || &#39;MO&#39;; WHEN v_compare BETWEEN &#39;81AC&#39; AND &#39;81CC&#39; THEN v_return :&#x3D; v_return || &#39;MOU&#39;; WHEN v_compare BETWEEN &#39;81CD&#39; AND &#39;821E&#39; THEN v_return :&#x3D; v_return || &#39;MU&#39;; WHEN v_compare &#x3D; &#39;8220&#39; THEN v_return :&#x3D; v_return || &#39;MYEO&#39;; WHEN v_compare &#x3D; &#39;8221&#39; THEN v_return :&#x3D; v_return || &#39;MYEON&#39;; WHEN v_compare &#x3D; &#39;8222&#39; THEN v_return :&#x3D; v_return || &#39;MYEONG&#39;; WHEN v_compare BETWEEN &#39;8224&#39; AND &#39;8258&#39; THEN v_return :&#x3D; v_return || &#39;NA&#39;; WHEN v_compare BETWEEN &#39;825D&#39; AND &#39;8285&#39; THEN v_return :&#x3D; v_return || &#39;NAI&#39;; WHEN v_compare BETWEEN &#39;8289&#39; AND &#39;82B5&#39; THEN v_return :&#x3D; v_return || &#39;NAN&#39;; WHEN v_compare BETWEEN &#39;82B9&#39; AND &#39;82D0&#39; THEN v_return :&#x3D; v_return || &#39;NANG&#39;; WHEN v_compare BETWEEN &#39;82D1&#39; AND &#39;8311&#39; THEN v_return :&#x3D; v_return || &#39;NAO&#39;; WHEN v_compare BETWEEN &#39;8312&#39; AND &#39;8320&#39; THEN v_return :&#x3D; v_return || &#39;NE&#39;; WHEN v_compare BETWEEN &#39;8322&#39; AND &#39;8331&#39; THEN v_return :&#x3D; v_return || &#39;NEI&#39;; WHEN v_compare &#x3D; &#39;8334&#39; THEN v_return :&#x3D; v_return || &#39;NEM&#39;; WHEN v_compare &#x3D; &#39;8336&#39; THEN v_return :&#x3D; v_return || &#39;NEN&#39;; WHEN v_compare &#x3D; &#39;8339&#39; THEN v_return :&#x3D; v_return || &#39;NENG&#39;; WHEN v_compare &#x3D; &#39;833E&#39; THEN v_return :&#x3D; v_return || &#39;NEUS&#39;; WHEN v_compare &#x3D; &#39;8342&#39; THEN v_return :&#x3D; v_return || &#39;NGAG&#39;; WHEN v_compare &#x3D; &#39;8344&#39; THEN v_return :&#x3D; v_return || &#39;NGAI&#39;; WHEN v_compare &#x3D; &#39;8345&#39; THEN v_return :&#x3D; v_return || &#39;NGAM&#39;; WHEN v_compare BETWEEN &#39;8346&#39; AND &#39;83B9&#39; THEN v_return :&#x3D; v_return || &#39;NI&#39;; WHEN v_compare BETWEEN &#39;83BC&#39; AND &#39;83ED&#39; THEN v_return :&#x3D; v_return || &#39;NIAN&#39;; WHEN v_compare BETWEEN &#39;83EE&#39; AND &#39;83F5&#39; THEN v_return :&#x3D; v_return || &#39;NIANG&#39;; WHEN v_compare BETWEEN &#39;83F8&#39; AND &#39;8414&#39; THEN v_return :&#x3D; v_return || &#39;NIAO&#39;; WHEN v_compare BETWEEN &#39;8415&#39; AND &#39;8478&#39; THEN v_return :&#x3D; v_return || &#39;NIE&#39;; WHEN v_compare BETWEEN &#39;8479&#39; AND &#39;8480&#39; THEN v_return :&#x3D; v_return || &#39;NIN&#39;; WHEN v_compare BETWEEN &#39;8481&#39; AND &#39;84B4&#39; THEN v_return :&#x3D; v_return || &#39;NING&#39;; WHEN v_compare BETWEEN &#39;84B5&#39; AND &#39;84D1&#39; THEN v_return :&#x3D; v_return || &#39;NIU&#39;; WHEN v_compare BETWEEN &#39;84D4&#39; AND &#39;84FA&#39; THEN v_return :&#x3D; v_return || &#39;NONG&#39;; WHEN v_compare &#x3D; &#39;84E8&#39; THEN v_return :&#x3D; v_return || &#39;NUNG&#39;; WHEN v_compare BETWEEN &#39;84FD&#39; AND &#39;850E&#39; THEN v_return :&#x3D; v_return || &#39;NOU&#39;; WHEN v_compare BETWEEN &#39;8511&#39; AND &#39;8522&#39; THEN v_return :&#x3D; v_return || &#39;NU&#39;; WHEN v_compare BETWEEN &#39;8524&#39; AND &#39;852C&#39; THEN v_return :&#x3D; v_return || &#39;NUAN&#39;; WHEN v_compare &#x3D; &#39;852D&#39; THEN v_return :&#x3D; v_return || &#39;NUN&#39;; WHEN v_compare BETWEEN &#39;8530&#39; AND &#39;8559&#39; THEN v_return :&#x3D; v_return || &#39;NUO&#39;; WHEN v_compare BETWEEN &#39;855A&#39; AND &#39;8566&#39; THEN v_return :&#x3D; v_return || &#39;NV&#39;; WHEN v_compare BETWEEN &#39;856D&#39; AND &#39;8574&#39; THEN v_return :&#x3D; v_return || &#39;NUE&#39;; WHEN v_compare &#x3D; &#39;8575&#39; THEN v_return :&#x3D; v_return || &#39;O&#39;; WHEN v_compare &#x3D; &#39;8579&#39; THEN v_return :&#x3D; v_return || &#39;OES&#39;; WHEN v_compare &#x3D; &#39;857A&#39; THEN v_return :&#x3D; v_return || &#39;OL&#39;; WHEN v_compare &#x3D; &#39;857C&#39; THEN v_return :&#x3D; v_return || &#39;ON&#39;; WHEN v_compare BETWEEN &#39;857D&#39; AND &#39;85AE&#39; THEN v_return :&#x3D; v_return || &#39;OU&#39;; WHEN v_compare BETWEEN &#39;85B1&#39; AND &#39;85C9&#39; THEN v_return :&#x3D; v_return || &#39;PA&#39;; WHEN v_compare BETWEEN &#39;85CA&#39; AND &#39;85E4&#39; THEN v_return :&#x3D; v_return || &#39;PAI&#39;; WHEN v_compare &#x3D; &#39;85E5&#39; THEN v_return :&#x3D; v_return || &#39;PAK&#39;; WHEN v_compare BETWEEN &#39;85E8&#39; AND &#39;8625&#39; THEN v_return :&#x3D; v_return || &#39;PAN&#39;; WHEN v_compare BETWEEN &#39;8626&#39; AND &#39;8658&#39; THEN v_return :&#x3D; v_return || &#39;PANG&#39;; WHEN v_compare BETWEEN &#39;8659&#39; AND &#39;8688&#39; THEN v_return :&#x3D; v_return || &#39;PAO&#39;; WHEN v_compare BETWEEN &#39;868A&#39; AND &#39;86C5&#39; THEN v_return :&#x3D; v_return || &#39;PEI&#39;; WHEN v_compare BETWEEN &#39;86C8&#39; AND &#39;86D6&#39; THEN v_return :&#x3D; v_return || &#39;PEN&#39;; WHEN v_compare BETWEEN &#39;86D8&#39; AND &#39;8740&#39; THEN v_return :&#x3D; v_return || &#39;PENG&#39;; WHEN v_compare &#x3D; &#39;8741&#39; THEN v_return :&#x3D; v_return || &#39;PEOL&#39;; WHEN v_compare &#x3D; &#39;8742&#39; THEN v_return :&#x3D; v_return || &#39;PHAS&#39;; WHEN v_compare &#x3D; &#39;8744&#39; THEN v_return :&#x3D; v_return || &#39;PHDENG&#39;; WHEN v_compare &#x3D; &#39;8745&#39; THEN v_return :&#x3D; v_return || &#39;PHOI&#39;; WHEN v_compare &#x3D; &#39;8746&#39; THEN v_return :&#x3D; v_return || &#39;PHOS&#39;; WHEN v_compare BETWEEN &#39;8748&#39; AND &#39;880D&#39; THEN v_return :&#x3D; v_return || &#39;PI&#39;; WHEN v_compare BETWEEN &#39;880E&#39; AND &#39;883A&#39; THEN v_return :&#x3D; v_return || &#39;PIAN&#39;; WHEN v_compare BETWEEN &#39;883C&#39; AND &#39;8869&#39; THEN v_return :&#x3D; v_return || &#39;PIAO&#39;; WHEN v_compare BETWEEN &#39;886D&#39; AND &#39;8879&#39; THEN v_return :&#x3D; v_return || &#39;PIE&#39;; WHEN v_compare BETWEEN &#39;887A&#39; AND &#39;88A0&#39; THEN v_return :&#x3D; v_return || &#39;PIN&#39;; WHEN v_compare BETWEEN &#39;88A1&#39; AND &#39;88EC&#39; THEN v_return :&#x3D; v_return || &#39;PING&#39;; WHEN v_compare BETWEEN &#39;88F0&#39; AND &#39;8938&#39; THEN v_return :&#x3D; v_return || &#39;PO&#39;; WHEN v_compare BETWEEN &#39;893E&#39; AND &#39;8958&#39; THEN v_return :&#x3D; v_return || &#39;POU&#39;; WHEN v_compare BETWEEN &#39;895A&#39; AND &#39;895C&#39; THEN v_return :&#x3D; v_return || &#39;PPUN&#39;; WHEN v_compare BETWEEN &#39;895D&#39; AND &#39;89C4&#39; THEN v_return :&#x3D; v_return || &#39;PU&#39;; WHEN v_compare BETWEEN &#39;89C5&#39; AND &#39;8B3E&#39; THEN v_return :&#x3D; v_return || &#39;QI&#39;; WHEN v_compare BETWEEN &#39;8B41&#39; AND &#39;8B61&#39; THEN v_return :&#x3D; v_return || &#39;QIA&#39;; WHEN v_compare BETWEEN &#39;8B62&#39; AND &#39;8C54&#39; THEN v_return :&#x3D; v_return || &#39;QIAN&#39;; WHEN v_compare BETWEEN &#39;8C5A&#39; AND &#39;8CB4&#39; THEN v_return :&#x3D; v_return || &#39;QIANG&#39;; WHEN v_compare BETWEEN &#39;8CB8&#39; AND &#39;8D3D&#39; THEN v_return :&#x3D; v_return || &#39;QIAO&#39;; WHEN v_compare BETWEEN &#39;8D40&#39; AND &#39;8D7E&#39; THEN v_return :&#x3D; v_return || &#39;QIE&#39;; WHEN v_compare BETWEEN &#39;8D81&#39; AND &#39;8DFA&#39; THEN v_return :&#x3D; v_return || &#39;QIN&#39;; WHEN v_compare BETWEEN &#39;8DFC&#39; AND &#39;8E5D&#39; THEN v_return :&#x3D; v_return || &#39;QING&#39;; WHEN v_compare BETWEEN &#39;8E5E&#39; AND &#39;8E98&#39; THEN v_return :&#x3D; v_return || &#39;QIONG&#39;; WHEN v_compare BETWEEN &#39;8E9A&#39; AND &#39;8F2A&#39; THEN v_return :&#x3D; v_return || &#39;QIU&#39;; WHEN v_compare BETWEEN &#39;8F2E&#39; AND &#39;8FE9&#39; THEN v_return :&#x3D; v_return || &#39;QU&#39;; WHEN v_compare BETWEEN &#39;8FEA&#39; AND &#39;905D&#39; THEN v_return :&#x3D; v_return || &#39;QUAN&#39;; WHEN v_compare BETWEEN &#39;905E&#39; AND &#39;9099&#39; THEN v_return :&#x3D; v_return || &#39;QUE&#39;; WHEN v_compare BETWEEN &#39;909A&#39; AND &#39;90AA&#39; THEN v_return :&#x3D; v_return || &#39;QUN&#39;; WHEN v_compare BETWEEN &#39;90B0&#39; AND &#39;90B1&#39; THEN v_return :&#x3D; v_return || &#39;RA&#39;; WHEN v_compare &#x3D; &#39;90B2&#39; THEN v_return :&#x3D; v_return || &#39;RAM&#39;; WHEN v_compare BETWEEN &#39;90B4&#39; AND &#39;90E5&#39; THEN v_return :&#x3D; v_return || &#39;RAN&#39;; WHEN v_compare BETWEEN &#39;90E6&#39; AND &#39;9104&#39; THEN v_return :&#x3D; v_return || &#39;RANG&#39;; WHEN v_compare BETWEEN &#39;9105&#39; AND &#39;911C&#39; THEN v_return :&#x3D; v_return || &#39;RAO&#39;; WHEN v_compare BETWEEN &#39;911D&#39; AND &#39;9120&#39; THEN v_return :&#x3D; v_return || &#39;RE&#39;; WHEN v_compare BETWEEN &#39;9121&#39; AND &#39;9180&#39; THEN v_return :&#x3D; v_return || &#39;REN&#39;; WHEN v_compare BETWEEN &#39;9181&#39; AND &#39;918D&#39; THEN v_return :&#x3D; v_return || &#39;RENG&#39;; WHEN v_compare BETWEEN &#39;918E&#39; AND &#39;9196&#39; THEN v_return :&#x3D; v_return || &#39;RI&#39;; WHEN v_compare BETWEEN &#39;9189&#39; AND &#39;91F1&#39; THEN v_return :&#x3D; v_return || &#39;RONG&#39;; WHEN v_compare BETWEEN &#39;91F2&#39; AND &#39;9218&#39; THEN v_return :&#x3D; v_return || &#39;ROU&#39;; WHEN v_compare BETWEEN &#39;9219&#39; AND &#39;9269&#39; THEN v_return :&#x3D; v_return || &#39;RU&#39;; WHEN v_compare BETWEEN &#39;926C&#39; AND &#39;9292&#39; THEN v_return :&#x3D; v_return || &#39;RUAN&#39;; WHEN v_compare BETWEEN &#39;9294&#39; AND &#39;92BD&#39; THEN v_return :&#x3D; v_return || &#39;RUI&#39;; WHEN v_compare BETWEEN &#39;92BE&#39; AND &#39;92C9&#39; THEN v_return :&#x3D; v_return || &#39;RUN&#39;; WHEN v_compare &#x3D; &#39;92CA&#39; THEN v_return :&#x3D; v_return || &#39;RUA&#39;; WHEN v_compare BETWEEN &#39;92CA&#39; AND &#39;92E4&#39; THEN v_return :&#x3D; v_return || &#39;RUO&#39;; WHEN v_compare BETWEEN &#39;92E5&#39; AND &#39;9309&#39; THEN v_return :&#x3D; v_return || &#39;SA&#39;; WHEN v_compare &#x3D; &#39;930A&#39; THEN v_return :&#x3D; v_return || &#39;SAENG&#39;; WHEN v_compare BETWEEN &#39;930C&#39; AND &#39;9325&#39; THEN v_return :&#x3D; v_return || &#39;SAI&#39;; WHEN v_compare &#x3D; &#39;9328&#39; THEN v_return :&#x3D; v_return || &#39;SAL&#39;; WHEN v_compare BETWEEN &#39;9329&#39; AND &#39;9355&#39; THEN v_return :&#x3D; v_return || &#39;SAN&#39;; WHEN v_compare BETWEEN &#39;9358&#39; AND &#39;936A&#39; THEN v_return :&#x3D; v_return || &#39;SANG&#39;; WHEN v_compare BETWEEN &#39;936C&#39; AND &#39;9391&#39; THEN v_return :&#x3D; v_return || &#39;SAO&#39;; WHEN v_compare BETWEEN &#39;9392&#39; AND &#39;93C5&#39; THEN v_return :&#x3D; v_return || &#39;SE&#39;; WHEN v_compare &#x3D; &#39;93C6&#39; THEN v_return :&#x3D; v_return || &#39;SED&#39;; WHEN v_compare BETWEEN &#39;93C8&#39; AND &#39;93CC&#39; THEN v_return :&#x3D; v_return || &#39;SEN&#39;; WHEN v_compare BETWEEN &#39;93CD&#39; AND &#39;93D0&#39; THEN v_return :&#x3D; v_return || &#39;SENG&#39;; WHEN v_compare &#x3D; &#39;93D1&#39; THEN v_return :&#x3D; v_return || &#39;SEO&#39;; WHEN v_compare &#x3D; &#39;93D2&#39; THEN v_return :&#x3D; v_return || &#39;SEON&#39;; WHEN v_compare BETWEEN &#39;93D4&#39; AND &#39;941A&#39; THEN v_return :&#x3D; v_return || &#39;SHA&#39;; WHEN v_compare BETWEEN &#39;941D&#39; AND &#39;9428&#39; THEN v_return :&#x3D; v_return || &#39;SHAI&#39;; WHEN v_compare BETWEEN &#39;9429&#39; AND &#39;94C1&#39; THEN v_return :&#x3D; v_return || &#39;SHAN&#39;; WHEN v_compare BETWEEN &#39;94C2&#39; AND &#39;94EE&#39; THEN v_return :&#x3D; v_return || &#39;SHANG&#39;; WHEN v_compare BETWEEN &#39;94F1&#39; AND &#39;952D&#39; THEN v_return :&#x3D; v_return || &#39;SHAO&#39;; WHEN v_compare BETWEEN &#39;952E&#39; AND &#39;9571&#39; THEN v_return :&#x3D; v_return || &#39;SHE&#39;; WHEN v_compare BETWEEN &#39;9574&#39; AND &#39;9602&#39; THEN v_return :&#x3D; v_return || &#39;SHEN&#39;; WHEN v_compare BETWEEN &#39;9604&#39; AND &#39;965C&#39; THEN v_return :&#x3D; v_return || &#39;SHENG&#39;; WHEN v_compare BETWEEN &#39;965E&#39; AND &#39;9786&#39; THEN v_return :&#x3D; v_return || &#39;SHI&#39;; WHEN v_compare BETWEEN &#39;9788&#39; AND &#39;97AE&#39; THEN v_return :&#x3D; v_return || &#39;SHOU&#39;; WHEN v_compare BETWEEN &#39;97B0&#39; AND &#39;9878&#39; THEN v_return :&#x3D; v_return || &#39;SHU&#39;; WHEN v_compare BETWEEN &#39;987A&#39; AND &#39;987E&#39; THEN v_return :&#x3D; v_return || &#39;SHUA&#39;; WHEN v_compare BETWEEN &#39;9880&#39; AND &#39;988A&#39; THEN v_return :&#x3D; v_return || &#39;SHUAI&#39;; WHEN v_compare BETWEEN &#39;988C&#39; AND &#39;9894&#39; THEN v_return :&#x3D; v_return || &#39;SHUAN&#39;; WHEN v_compare BETWEEN &#39;9895&#39; AND &#39;98BE&#39; THEN v_return :&#x3D; v_return || &#39;SHUANG&#39;; WHEN v_compare BETWEEN &#39;98C0&#39; AND &#39;98D6&#39; THEN v_return :&#x3D; v_return || &#39;SHUI&#39;; WHEN v_compare BETWEEN &#39;98DC&#39; AND &#39;98EE&#39; THEN v_return :&#x3D; v_return || &#39;SHUN&#39;; WHEN v_compare BETWEEN &#39;98F1&#39; AND &#39;9911&#39; THEN v_return :&#x3D; v_return || &#39;SHUO&#39;; WHEN v_compare BETWEEN &#39;9912&#39; AND &#39;99AD&#39; THEN v_return :&#x3D; v_return || &#39;SI&#39;; WHEN v_compare &#x3D; &#39;99AE&#39; THEN v_return :&#x3D; v_return || &#39;SO&#39;; WHEN v_compare &#x3D; &#39;99B0&#39; THEN v_return :&#x3D; v_return || &#39;SOL&#39;; WHEN v_compare BETWEEN &#39;99B1&#39; AND &#39;99F6&#39; THEN v_return :&#x3D; v_return || &#39;SONG&#39;; WHEN v_compare BETWEEN &#39;99F8&#39; AND &#39;9A36&#39; THEN v_return :&#x3D; v_return || &#39;SOU&#39;; WHEN v_compare BETWEEN &#39;9A38&#39; AND &#39;9AB6&#39; THEN v_return :&#x3D; v_return || &#39;SU&#39;; WHEN v_compare BETWEEN &#39;9AB8&#39; AND &#39;9AC4&#39; THEN v_return :&#x3D; v_return || &#39;SUAN&#39;; WHEN v_compare BETWEEN &#39;9AC5&#39; AND &#39;9B3A&#39; THEN v_return :&#x3D; v_return || &#39;SUI&#39;; WHEN v_compare &#x3D; &#39;9AF0&#39; THEN v_return :&#x3D; v_return || &#39;WIE&#39;; WHEN v_compare BETWEEN &#39;9B3C&#39; AND &#39;9B62&#39; THEN v_return :&#x3D; v_return || &#39;SUN&#39;; WHEN v_compare BETWEEN &#39;9B65&#39; AND &#39;9BA9&#39; THEN v_return :&#x3D; v_return || &#39;SUO&#39;; WHEN v_compare BETWEEN &#39;9BAA&#39; AND &#39;9C10&#39; THEN v_return :&#x3D; v_return || &#39;TA&#39;; WHEN v_compare &#x3D; &#39;9C11&#39; THEN v_return :&#x3D; v_return || &#39;TAE&#39;; WHEN v_compare BETWEEN &#39;9C12&#39; AND &#39;9C59&#39; THEN v_return :&#x3D; v_return || &#39;TAI&#39;; WHEN v_compare BETWEEN &#39;9C5A&#39; AND &#39;9CE0&#39; THEN v_return :&#x3D; v_return || &#39;TAN&#39;; WHEN v_compare BETWEEN &#39;9CE2&#39; AND &#39;9D55&#39; THEN v_return :&#x3D; v_return || &#39;TANG&#39;; WHEN v_compare BETWEEN &#39;9D56&#39; AND &#39;9DB4&#39; THEN v_return :&#x3D; v_return || &#39;TAO&#39;; WHEN v_compare &#x3D; &#39;9DB6&#39; THEN v_return :&#x3D; v_return || &#39;TAP&#39;; WHEN v_compare BETWEEN &#39;9DB8&#39; AND &#39;9DC6&#39; THEN v_return :&#x3D; v_return || &#39;TE&#39;; WHEN v_compare BETWEEN &#39;9DC8&#39; AND &#39;9DED&#39; THEN v_return :&#x3D; v_return || &#39;TENG&#39;; WHEN v_compare &#x3D; &#39;9DEE&#39; THEN v_return :&#x3D; v_return || &#39;TEO&#39;; WHEN v_compare &#x3D; &#39;9DF0&#39; THEN v_return :&#x3D; v_return || &#39;TEUL&#39;; WHEN v_compare BETWEEN &#39;9DF1&#39; AND &#39;9E82&#39; THEN v_return :&#x3D; v_return || &#39;TI&#39;; WHEN v_compare BETWEEN &#39;9E85&#39; AND &#39;9EED&#39; THEN v_return :&#x3D; v_return || &#39;TIAN&#39;; WHEN v_compare BETWEEN &#39;9EEE&#39; AND &#39;9F38&#39; THEN v_return :&#x3D; v_return || &#39;TIAO&#39;; WHEN v_compare BETWEEN &#39;9F39&#39; AND &#39;9F56&#39; THEN v_return :&#x3D; v_return || &#39;TIE&#39;; WHEN v_compare BETWEEN &#39;9F59&#39; AND &#39;9FAE&#39; THEN v_return :&#x3D; v_return || &#39;TING&#39;; WHEN v_compare &#x3D; &#39;9FB0&#39; THEN v_return :&#x3D; v_return || &#39;TOL&#39;; WHEN v_compare BETWEEN &#39;9FB1&#39; AND &#39;A015&#39; THEN v_return :&#x3D; v_return || &#39;TONG&#39;; WHEN v_compare BETWEEN &#39;A016&#39; AND &#39;A03A&#39; THEN v_return :&#x3D; v_return || &#39;TOU&#39;; WHEN v_compare BETWEEN &#39;A040&#39; AND &#39;A0A9&#39; THEN v_return :&#x3D; v_return || &#39;TU&#39;; WHEN v_compare BETWEEN &#39;A0AA&#39; AND &#39;A0D5&#39; THEN v_return :&#x3D; v_return || &#39;TUAN&#39;; WHEN v_compare BETWEEN &#39;A0D6&#39; AND &#39;A106&#39; THEN v_return :&#x3D; v_return || &#39;TUI&#39;; WHEN v_compare BETWEEN &#39;A108&#39; AND &#39;A131&#39; THEN v_return :&#x3D; v_return || &#39;TUN&#39;; WHEN v_compare BETWEEN &#39;A134&#39; AND &#39;A1AE&#39; THEN v_return :&#x3D; v_return || &#39;TUO&#39;; WHEN v_compare BETWEEN &#39;A1B0&#39; AND &#39;A1E8&#39; THEN v_return :&#x3D; v_return || &#39;WA&#39;; WHEN v_compare BETWEEN &#39;A1E9&#39; AND &#39;A1F5&#39; THEN v_return :&#x3D; v_return || &#39;WAI&#39;; WHEN v_compare BETWEEN &#39;A1F8&#39; AND &#39;A279&#39; THEN v_return :&#x3D; v_return || &#39;WAN&#39;; WHEN v_compare BETWEEN &#39;A27A&#39; AND &#39;A2B9&#39; THEN v_return :&#x3D; v_return || &#39;WANG&#39;; WHEN v_compare BETWEEN &#39;A2BC&#39; AND &#39;A408&#39; THEN v_return :&#x3D; v_return || &#39;WEI&#39;; WHEN v_compare BETWEEN &#39;A40D&#39; AND &#39;A47C&#39; THEN v_return :&#x3D; v_return || &#39;WEN&#39;; WHEN v_compare BETWEEN &#39;A47D&#39; AND &#39;A4A2&#39; THEN v_return :&#x3D; v_return || &#39;WENG&#39;; WHEN v_compare BETWEEN &#39;A4A4&#39; AND &#39;A4EA&#39; THEN v_return :&#x3D; v_return || &#39;WO&#39;; WHEN v_compare BETWEEN &#39;A4EC&#39; AND &#39;A5D4&#39; THEN v_return :&#x3D; v_return || &#39;WU&#39;; WHEN v_compare BETWEEN &#39;A5D6&#39; AND &#39;A784&#39; THEN v_return :&#x3D; v_return || &#39;XI&#39;; WHEN v_compare BETWEEN &#39;A785&#39; AND &#39;A7FA&#39; THEN v_return :&#x3D; v_return || &#39;XIA&#39;; WHEN v_compare BETWEEN &#39;A7FD&#39; AND &#39;A951&#39; THEN v_return :&#x3D; v_return || &#39;XIAN&#39;; WHEN v_compare BETWEEN &#39;A954&#39; AND &#39;A9CE&#39; THEN v_return :&#x3D; v_return || &#39;XIANG&#39;; WHEN v_compare BETWEEN &#39;A9D0&#39; AND &#39;AA8A&#39; THEN v_return :&#x3D; v_return || &#39;XIAO&#39;; WHEN v_compare BETWEEN &#39;AA8D&#39; AND &#39;AB7E&#39; THEN v_return :&#x3D; v_return || &#39;XIE&#39;; WHEN v_compare BETWEEN &#39;AB80&#39; AND &#39;ABEE&#39; THEN v_return :&#x3D; v_return || &#39;XIN&#39;; WHEN v_compare BETWEEN &#39;ABF0&#39; AND &#39;AC41&#39; THEN v_return :&#x3D; v_return || &#39;XING&#39;; WHEN v_compare BETWEEN &#39;AC42&#39; AND &#39;AC64&#39; THEN v_return :&#x3D; v_return || &#39;XIONG&#39;; WHEN v_compare BETWEEN &#39;AC65&#39; AND &#39;ACBA&#39; THEN v_return :&#x3D; v_return || &#39;XIU&#39;; WHEN v_compare BETWEEN &#39;ACBC&#39; AND &#39;AD90&#39; THEN v_return :&#x3D; v_return || &#39;XU&#39;; WHEN v_compare &#x3D; &#39;ACD9&#39; THEN v_return :&#x3D; v_return || &#39;CHUA&#39;; WHEN v_compare BETWEEN &#39;AD91&#39; AND &#39;AE32&#39; THEN v_return :&#x3D; v_return || &#39;XUAN&#39;; WHEN v_compare BETWEEN &#39;AE34&#39; AND &#39;AE89&#39; THEN v_return :&#x3D; v_return || &#39;XUE&#39;; WHEN v_compare BETWEEN &#39;AE8C&#39; AND &#39;AF1E&#39; THEN v_return :&#x3D; v_return || &#39;XUN&#39;; WHEN v_compare BETWEEN &#39;AF20&#39; AND &#39;AF96&#39; THEN v_return :&#x3D; v_return || &#39;YA&#39;; WHEN v_compare BETWEEN &#39;AF98&#39; AND &#39;B118&#39; THEN v_return :&#x3D; v_return || &#39;YAN&#39;; WHEN v_compare &#x3D; &#39;B030&#39; THEN v_return :&#x3D; v_return || &#39;EOM&#39;; WHEN v_compare BETWEEN &#39;B11A&#39; AND &#39;B1A8&#39; THEN v_return :&#x3D; v_return || &#39;YANG&#39;; WHEN v_compare BETWEEN &#39;B1AD&#39; AND &#39;B275&#39; THEN v_return :&#x3D; v_return || &#39;YAO&#39;; WHEN v_compare BETWEEN &#39;B276&#39; AND &#39;B30A&#39; THEN v_return :&#x3D; v_return || &#39;YE&#39;; WHEN v_compare BETWEEN &#39;B30D&#39; AND &#39;B30E&#39; THEN v_return :&#x3D; v_return || &#39;YEN&#39;; WHEN v_compare BETWEEN &#39;B310&#39; AND &#39;B594&#39; THEN v_return :&#x3D; v_return || &#39;YI&#39;; WHEN v_compare &#x3D; &#39;B359&#39; THEN v_return :&#x3D; v_return || &#39;I&#39;; WHEN v_compare BETWEEN &#39;B596&#39; AND &#39;B684&#39; THEN v_return :&#x3D; v_return || &#39;YIN&#39;; WHEN v_compare BETWEEN &#39;B685&#39; AND &#39;B768&#39; THEN v_return :&#x3D; v_return || &#39;YING&#39;; WHEN v_compare BETWEEN &#39;B76C&#39; AND &#39;B76E&#39; THEN v_return :&#x3D; v_return || &#39;YO&#39;; WHEN v_compare BETWEEN &#39;B770&#39; AND &#39;B7EA&#39; THEN v_return :&#x3D; v_return || &#39;YONG&#39;; WHEN v_compare BETWEEN &#39;B7EC&#39; AND &#39;B8B2&#39; THEN v_return :&#x3D; v_return || &#39;YOU&#39;; WHEN v_compare BETWEEN &#39;B8B5&#39; AND &#39;BA98&#39; THEN v_return :&#x3D; v_return || &#39;YU&#39;; WHEN v_compare BETWEEN &#39;BA99&#39; AND &#39;BB58&#39; THEN v_return :&#x3D; v_return || &#39;YUAN&#39;; WHEN v_compare BETWEEN &#39;BB59&#39; AND &#39;BBBE&#39; THEN v_return :&#x3D; v_return || &#39;YUE&#39;; WHEN v_compare BETWEEN &#39;BBC1&#39; AND &#39;BC58&#39; THEN v_return :&#x3D; v_return || &#39;YUN&#39;; WHEN v_compare BETWEEN &#39;BC59&#39; AND &#39;BC7E&#39; THEN v_return :&#x3D; v_return || &#39;ZA&#39;; WHEN v_compare BETWEEN &#39;BC81&#39; AND &#39;BCA8&#39; THEN v_return :&#x3D; v_return || &#39;ZAI&#39;; WHEN v_compare BETWEEN &#39;BCAA&#39; AND &#39;BCEA&#39; THEN v_return :&#x3D; v_return || &#39;ZAN&#39;; WHEN v_compare BETWEEN &#39;BCEE&#39; AND &#39;BD0A&#39; THEN v_return :&#x3D; v_return || &#39;ZANG&#39;; WHEN v_compare BETWEEN &#39;BD0C&#39; AND &#39;BD46&#39; THEN v_return :&#x3D; v_return || &#39;ZAO&#39;; WHEN v_compare BETWEEN &#39;BD48&#39; AND &#39;BD99&#39; THEN v_return :&#x3D; v_return || &#39;ZE&#39;; WHEN v_compare BETWEEN &#39;BD9A&#39; AND &#39;BDA2&#39; THEN v_return :&#x3D; v_return || &#39;ZEI&#39;; WHEN v_compare BETWEEN &#39;BDA5&#39; AND &#39;BDAC&#39; THEN v_return :&#x3D; v_return || &#39;ZEN&#39;; WHEN v_compare BETWEEN &#39;BDAD&#39; AND &#39;BDCC&#39; THEN v_return :&#x3D; v_return || &#39;ZENG&#39;; WHEN v_compare BETWEEN &#39;BDCE&#39; AND &#39;BE40&#39; THEN v_return :&#x3D; v_return || &#39;ZHA&#39;; WHEN v_compare &#x3D; &#39;BDF8&#39; THEN v_return :&#x3D; v_return || &#39;GAD&#39;; WHEN v_compare BETWEEN &#39;BE41&#39; AND &#39;BE62&#39; THEN v_return :&#x3D; v_return || &#39;ZHAI&#39;; WHEN v_compare BETWEEN &#39;BE65&#39; AND &#39;BEF4&#39; THEN v_return :&#x3D; v_return || &#39;ZHAN&#39;; WHEN v_compare BETWEEN &#39;BEF6&#39; AND &#39;BF3E&#39; THEN v_return :&#x3D; v_return || &#39;ZHANG&#39;; WHEN v_compare BETWEEN &#39;BF40&#39; AND &#39;BF8C&#39; THEN v_return :&#x3D; v_return || &#39;ZHAO&#39;; WHEN v_compare BETWEEN &#39;BF8E&#39; AND &#39;BFF8&#39; THEN v_return :&#x3D; v_return || &#39;ZHE&#39;; WHEN v_compare BETWEEN &#39;BFF9&#39; AND &#39;C0B2&#39; THEN v_return :&#x3D; v_return || &#39;ZHEN&#39;; WHEN v_compare BETWEEN &#39;C0B4&#39; AND &#39;C11E&#39; THEN v_return :&#x3D; v_return || &#39;ZHENG&#39;; WHEN v_compare BETWEEN &#39;C122&#39; AND &#39;C2C4&#39; THEN v_return :&#x3D; v_return || &#39;ZHI&#39;; WHEN v_compare BETWEEN &#39;C2C5&#39; AND &#39;C31A&#39; THEN v_return :&#x3D; v_return || &#39;ZHONG&#39;; WHEN v_compare BETWEEN &#39;C31D&#39; AND &#39;C39A&#39; THEN v_return :&#x3D; v_return || &#39;ZHOU&#39;; WHEN v_compare BETWEEN &#39;C39C&#39; AND &#39;C47C&#39; THEN v_return :&#x3D; v_return || &#39;ZHU&#39;; WHEN v_compare BETWEEN &#39;C47D&#39; AND &#39;C484&#39; THEN v_return :&#x3D; v_return || &#39;ZHUA&#39;; WHEN v_compare BETWEEN &#39;C485&#39; AND &#39;C486&#39; THEN v_return :&#x3D; v_return || &#39;ZHUAI&#39;; WHEN v_compare BETWEEN &#39;C488&#39; AND &#39;C4C0&#39; THEN v_return :&#x3D; v_return || &#39;ZHUAN&#39;; WHEN v_compare BETWEEN &#39;C4C2&#39; AND &#39;C4E5&#39; THEN v_return :&#x3D; v_return || &#39;ZHUANG&#39;; WHEN v_compare BETWEEN &#39;C4E6&#39; AND &#39;C51C&#39; THEN v_return :&#x3D; v_return || &#39;ZHUI&#39;; WHEN v_compare BETWEEN &#39;C51D&#39; AND &#39;C530&#39; THEN v_return :&#x3D; v_return || &#39;ZHUN&#39;; WHEN v_compare BETWEEN &#39;C534&#39; AND &#39;C5A5&#39; THEN v_return :&#x3D; v_return || &#39;ZHUO&#39;; WHEN v_compare BETWEEN &#39;C5A8&#39; AND &#39;C648&#39; THEN v_return :&#x3D; v_return || &#39;ZI&#39;; WHEN v_compare &#x3D; &#39;C64A&#39; THEN v_return :&#x3D; v_return || &#39;ZO&#39;; WHEN v_compare BETWEEN &#39;C64C&#39; AND &#39;C6B5&#39; THEN v_return :&#x3D; v_return || &#39;ZONG&#39;; WHEN v_compare BETWEEN &#39;C6B6&#39; AND &#39;C6D6&#39; THEN v_return :&#x3D; v_return || &#39;ZOU&#39;; WHEN v_compare BETWEEN &#39;C6E1&#39; AND &#39;C714&#39; THEN v_return :&#x3D; v_return || &#39;ZU&#39;; WHEN v_compare BETWEEN &#39;C715&#39; AND &#39;C72D&#39; THEN v_return :&#x3D; v_return || &#39;ZUAN&#39;; WHEN v_compare BETWEEN &#39;C72E&#39; AND &#39;C75E&#39; THEN v_return :&#x3D; v_return || &#39;ZUI&#39;; WHEN v_compare BETWEEN &#39;C760&#39; AND &#39;C776&#39; THEN v_return :&#x3D; v_return || &#39;ZUN&#39;; WHEN v_compare BETWEEN &#39;C77A&#39; AND &#39;C7B4&#39; THEN v_return :&#x3D; v_return || &#39;ZUO&#39;; ELSE v_return :&#x3D; v_return || v_substr; END CASE; END LOOP; WHEN 2 THEN --全拼首字母大写 FOR i IN 1 .. v_length LOOP v_substr :&#x3D; SUBSTR (p_str, i, 1); v_compare :&#x3D; fn_nlssort (v_substr); CASE WHEN v_compare BETWEEN &#39;3B29&#39; AND &#39;3B30&#39; THEN v_return :&#x3D; v_return || &#39;A&#39;; WHEN v_compare &#x3D; &#39;3B31&#39; THEN v_return :&#x3D; v_return || &#39;Aes&#39;; WHEN v_compare BETWEEN &#39;3B32&#39; AND &#39;3B9E&#39; THEN v_return :&#x3D; v_return || &#39;Ai&#39;; WHEN v_compare BETWEEN &#39;3BA0&#39; AND &#39;3BFE&#39; THEN v_return :&#x3D; v_return || &#39;An&#39;; WHEN v_compare BETWEEN &#39;3C01&#39; AND &#39;3C14&#39; THEN v_return :&#x3D; v_return || &#39;Ang&#39;; WHEN v_compare BETWEEN &#39;3C15&#39; AND &#39;3C82&#39; THEN v_return :&#x3D; v_return || &#39;Ao&#39;; WHEN v_compare BETWEEN &#39;3C84&#39; AND &#39;3CE9&#39; THEN v_return :&#x3D; v_return || &#39;Ba&#39;; WHEN v_compare BETWEEN &#39;3CED&#39; AND &#39;3D1D&#39; THEN v_return :&#x3D; v_return || &#39;Bai&#39;; WHEN v_compare BETWEEN &#39;3D20&#39; AND &#39;3D64&#39; THEN v_return :&#x3D; v_return || &#39;Ban&#39;; WHEN v_compare BETWEEN &#39;3D66&#39; AND &#39;3DA2&#39; THEN v_return :&#x3D; v_return || &#39;Bang&#39;; WHEN v_compare BETWEEN &#39;3DA4&#39; AND &#39;3E10&#39; THEN v_return :&#x3D; v_return || &#39;Bao&#39;; WHEN v_compare &#x3D; &#39;3E11&#39; THEN v_return :&#x3D; v_return || &#39;Be&#39;; WHEN v_compare BETWEEN &#39;3E12&#39; AND &#39;3E7A&#39; THEN v_return :&#x3D; v_return || &#39;Bei&#39;; WHEN v_compare BETWEEN &#39;3E7C&#39; AND &#39;3EA0&#39; THEN v_return :&#x3D; v_return || &#39;Ben&#39;; WHEN v_compare BETWEEN &#39;3EA1&#39; AND &#39;3ED5&#39; THEN v_return :&#x3D; v_return || &#39;Beng&#39;; WHEN v_compare BETWEEN &#39;3ED8&#39; AND &#39;3FE9&#39; THEN v_return :&#x3D; v_return || &#39;Bi&#39;; WHEN v_compare BETWEEN &#39;3FEA&#39; AND &#39;4055&#39; THEN v_return :&#x3D; v_return || &#39;Bian&#39;; WHEN v_compare BETWEEN &#39;4058&#39; AND &#39;40AE&#39; THEN v_return :&#x3D; v_return || &#39;Biao&#39;; WHEN v_compare &#x3D; &#39;4060&#39; THEN v_return :&#x3D; v_return || &#39;Bia&#39;; WHEN v_compare BETWEEN &#39;40B4&#39; AND &#39;40D4&#39; THEN v_return :&#x3D; v_return || &#39;Bie&#39;; WHEN v_compare BETWEEN &#39;40D6&#39; AND &#39;4116&#39; THEN v_return :&#x3D; v_return || &#39;Bin&#39;; WHEN v_compare BETWEEN &#39;4118&#39; AND &#39;4160&#39; THEN v_return :&#x3D; v_return || &#39;Bing&#39;; WHEN v_compare BETWEEN &#39;4161&#39; AND &#39;4224&#39; THEN v_return :&#x3D; v_return || &#39;Bo&#39;; WHEN v_compare BETWEEN &#39;4225&#39; AND &#39;427C&#39; THEN v_return :&#x3D; v_return || &#39;Bu&#39;; WHEN v_compare BETWEEN &#39;427D&#39; AND &#39;4289&#39; THEN v_return :&#x3D; v_return || &#39;Ca&#39;; WHEN v_compare BETWEEN &#39;428C&#39; AND &#39;42B5&#39; THEN v_return :&#x3D; v_return || &#39;Cai&#39;; WHEN v_compare BETWEEN &#39;42B9&#39; AND &#39;430C&#39; THEN v_return :&#x3D; v_return || &#39;Can&#39;; WHEN v_compare BETWEEN &#39;430D&#39; AND &#39;4334&#39; THEN v_return :&#x3D; v_return || &#39;Cang&#39;; WHEN v_compare BETWEEN &#39;4335&#39; AND &#39;435C&#39; THEN v_return :&#x3D; v_return || &#39;Cao&#39;; WHEN v_compare BETWEEN &#39;435D&#39; AND &#39;438C&#39; THEN v_return :&#x3D; v_return || &#39;Ce&#39;; WHEN v_compare BETWEEN &#39;4390&#39; AND &#39;4398&#39; THEN v_return :&#x3D; v_return || &#39;Cen&#39;; WHEN v_compare BETWEEN &#39;439D&#39; AND &#39;43AA&#39; THEN v_return :&#x3D; v_return || &#39;Ceng&#39;; WHEN v_compare &#x3D; &#39;43AC&#39; THEN v_return :&#x3D; v_return || &#39;Ceok&#39;; WHEN v_compare &#x3D; &#39;43AE&#39; THEN v_return :&#x3D; v_return || &#39;Ceom&#39;; WHEN v_compare &#x3D; &#39;43B0&#39; THEN v_return :&#x3D; v_return || &#39;Ceon&#39;; WHEN v_compare &#x3D; &#39;43B1&#39; THEN v_return :&#x3D; v_return || &#39;Ceor&#39;; WHEN v_compare BETWEEN &#39;43B2&#39; AND &#39;440A&#39; THEN v_return :&#x3D; v_return || &#39;Cha&#39;; WHEN v_compare BETWEEN &#39;440E&#39; AND &#39;442D&#39; THEN v_return :&#x3D; v_return || &#39;Chai&#39;; WHEN v_compare BETWEEN &#39;4431&#39; AND &#39;44E1&#39; THEN v_return :&#x3D; v_return || &#39;Chan&#39;; WHEN v_compare BETWEEN &#39;44E4&#39; AND &#39;4552&#39; THEN v_return :&#x3D; v_return || &#39;Chang&#39;; WHEN v_compare BETWEEN &#39;4554&#39; AND &#39;458E&#39; THEN v_return :&#x3D; v_return || &#39;Chao&#39;; WHEN v_compare BETWEEN &#39;4590&#39; AND &#39;45C8&#39; THEN v_return :&#x3D; v_return || &#39;Che&#39;; WHEN v_compare BETWEEN &#39;45C9&#39; AND &#39;463D&#39; THEN v_return :&#x3D; v_return || &#39;Chen&#39;; WHEN v_compare BETWEEN &#39;463E&#39; AND &#39;46CD&#39; THEN v_return :&#x3D; v_return || &#39;Cheng&#39;; WHEN v_compare BETWEEN &#39;46CE&#39; AND &#39;47A6&#39; THEN v_return :&#x3D; v_return || &#39;Chi&#39;; WHEN v_compare BETWEEN &#39;47A8&#39; AND &#39;47EC&#39; THEN v_return :&#x3D; v_return || &#39;Chong&#39;; WHEN v_compare BETWEEN &#39;47ED&#39; AND &#39;484C&#39; THEN v_return :&#x3D; v_return || &#39;Chou&#39;; WHEN v_compare BETWEEN &#39;484D&#39; AND &#39;48E2&#39; THEN v_return :&#x3D; v_return || &#39;Chu&#39;; WHEN v_compare BETWEEN &#39;48E9&#39; AND &#39;48F4&#39; THEN v_return :&#x3D; v_return || &#39;Chuai&#39;; WHEN v_compare BETWEEN &#39;48F6&#39; AND &#39;4924&#39; THEN v_return :&#x3D; v_return || &#39;Chuan&#39;; WHEN v_compare BETWEEN &#39;4925&#39; AND &#39;4951&#39; THEN v_return :&#x3D; v_return || &#39;Chuang&#39;; WHEN v_compare BETWEEN &#39;4954&#39; AND &#39;496E&#39; THEN v_return :&#x3D; v_return || &#39;Chui&#39;; WHEN v_compare BETWEEN &#39;4971&#39; AND &#39;49C6&#39; THEN v_return :&#x3D; v_return || &#39;Chun&#39;; WHEN v_compare BETWEEN &#39;49C8&#39; AND &#39;49EA&#39; THEN v_return :&#x3D; v_return || &#39;Chuo&#39;; WHEN v_compare BETWEEN &#39;49EC&#39; AND &#39;4A4A&#39; THEN v_return :&#x3D; v_return || &#39;Ci&#39;; WHEN v_compare &#x3D; &#39;4A50&#39; THEN v_return :&#x3D; v_return || &#39;Cis&#39;; WHEN v_compare BETWEEN &#39;4A51&#39; AND &#39;4AB2&#39; THEN v_return :&#x3D; v_return || &#39;Cong&#39;; WHEN v_compare BETWEEN &#39;4AB4&#39; AND &#39;4ABA&#39; THEN v_return :&#x3D; v_return || &#39;Cou&#39;; WHEN v_compare BETWEEN &#39;4ABC&#39; AND &#39;4AEA&#39; THEN v_return :&#x3D; v_return || &#39;Cu&#39;; WHEN v_compare BETWEEN &#39;4AEE&#39; AND &#39;4B0C&#39; THEN v_return :&#x3D; v_return || &#39;Cuan&#39;; WHEN v_compare BETWEEN &#39;4B0D&#39; AND &#39;4B56&#39; THEN v_return :&#x3D; v_return || &#39;Cui&#39;; WHEN v_compare BETWEEN &#39;4B59&#39; AND &#39;4B6C&#39; THEN v_return :&#x3D; v_return || &#39;Cun&#39;; WHEN v_compare BETWEEN &#39;4B70&#39; AND &#39;4BA9&#39; THEN v_return :&#x3D; v_return || &#39;Cuo&#39;; WHEN v_compare BETWEEN &#39;4BAD&#39; AND &#39;4BFE&#39; THEN v_return :&#x3D; v_return || &#39;Da&#39;; WHEN v_compare BETWEEN &#39;4C00&#39; AND &#39;4C4E&#39; THEN v_return :&#x3D; v_return || &#39;Dai&#39;; WHEN v_compare BETWEEN &#39;4C50&#39; AND &#39;4CDC&#39; THEN v_return :&#x3D; v_return || &#39;Dan&#39;; WHEN v_compare BETWEEN &#39;4CDE&#39; AND &#39;4D26&#39; THEN v_return :&#x3D; v_return || &#39;Dang&#39;; WHEN v_compare BETWEEN &#39;4D28&#39; AND &#39;4D76&#39; THEN v_return :&#x3D; v_return || &#39;Dao&#39;; WHEN v_compare BETWEEN &#39;4D7E&#39; AND &#39;4D8D&#39; THEN v_return :&#x3D; v_return || &#39;De&#39;; WHEN v_compare &#x3D; &#39;4D8E&#39; THEN v_return :&#x3D; v_return || &#39;Dem&#39;; WHEN v_compare BETWEEN &#39;4D90&#39; AND &#39;4D91&#39; THEN v_return :&#x3D; v_return || &#39;Den&#39;; WHEN v_compare BETWEEN &#39;4D94&#39; AND &#39;4DC0&#39; THEN v_return :&#x3D; v_return || &#39;Deng&#39;; WHEN v_compare BETWEEN &#39;4DC4&#39; AND &#39;4E8A&#39; THEN v_return :&#x3D; v_return || &#39;Di&#39;; WHEN v_compare &#x3D; &#39;4E8C&#39; THEN v_return :&#x3D; v_return || &#39;Dia&#39;; WHEN v_compare BETWEEN &#39;4E8D&#39; AND &#39;4EE8&#39; THEN v_return :&#x3D; v_return || &#39;Dian&#39;; WHEN v_compare BETWEEN &#39;4EE9&#39; AND &#39;4F38&#39; THEN v_return :&#x3D; v_return || &#39;Diao&#39;; WHEN v_compare BETWEEN &#39;4F39&#39; AND &#39;4F90&#39; THEN v_return :&#x3D; v_return || &#39;Die&#39;; WHEN v_compare &#x3D; &#39;4F8D&#39; THEN v_return :&#x3D; v_return || &#39;Dei&#39;; WHEN v_compare &#x3D; &#39;4F91&#39; THEN v_return :&#x3D; v_return || &#39;Dim&#39;; WHEN v_compare BETWEEN &#39;4F92&#39; AND &#39;4FCD&#39; THEN v_return :&#x3D; v_return || &#39;Ding&#39;; WHEN v_compare BETWEEN &#39;4FCD&#39; AND &#39;4FD4&#39; THEN v_return :&#x3D; v_return || &#39;Diu&#39;; WHEN v_compare BETWEEN &#39;4FD5&#39; AND &#39;5032&#39; THEN v_return :&#x3D; v_return || &#39;Dong&#39;; WHEN v_compare BETWEEN &#39;5034&#39; AND &#39;507C&#39; THEN v_return :&#x3D; v_return || &#39;Dou&#39;; WHEN v_compare &#x3D; &#39;5044&#39; THEN v_return :&#x3D; v_return || &#39;Dul&#39;; WHEN v_compare BETWEEN &#39;507E&#39; AND &#39;50E9&#39; THEN v_return :&#x3D; v_return || &#39;Du&#39;; WHEN v_compare BETWEEN &#39;50EA&#39; AND &#39;5110&#39; THEN v_return :&#x3D; v_return || &#39;Duan&#39;; WHEN v_compare BETWEEN &#39;5114&#39; AND &#39;514E&#39; THEN v_return :&#x3D; v_return || &#39;Dui&#39;; WHEN v_compare BETWEEN &#39;5152&#39; AND &#39;518D&#39; THEN v_return :&#x3D; v_return || &#39;Dun&#39;; WHEN v_compare &#x3D; &#39;5160&#39; THEN v_return :&#x3D; v_return || &#39;Ton&#39;; WHEN v_compare BETWEEN &#39;518E&#39; AND &#39;5200&#39; THEN v_return :&#x3D; v_return || &#39;Duo&#39;; WHEN v_compare BETWEEN &#39;5205&#39; AND &#39;52C2&#39; THEN v_return :&#x3D; v_return || &#39;E&#39;; WHEN v_compare BETWEEN &#39;52C4&#39; AND &#39;52CD&#39; THEN v_return :&#x3D; v_return || &#39;En&#39;; WHEN v_compare &#x3D; &#39;52D4&#39; THEN v_return :&#x3D; v_return || &#39;Eng&#39;; WHEN v_compare &#x3D; &#39;52D5&#39; THEN v_return :&#x3D; v_return || &#39;Eo&#39;; WHEN v_compare &#x3D; &#39;52D6&#39; THEN v_return :&#x3D; v_return || &#39;Eol&#39;; WHEN v_compare &#x3D; &#39;52D8&#39; THEN v_return :&#x3D; v_return || &#39;Eos&#39;; WHEN v_compare BETWEEN &#39;52D9&#39; AND &#39;5332&#39; THEN v_return :&#x3D; v_return || &#39;Er&#39;; WHEN v_compare BETWEEN &#39;5334&#39; AND &#39;5366&#39; THEN v_return :&#x3D; v_return || &#39;Fa&#39;; WHEN v_compare BETWEEN &#39;536A&#39; AND &#39;53FA&#39; THEN v_return :&#x3D; v_return || &#39;Fan&#39;; WHEN v_compare BETWEEN &#39;53FD&#39; AND &#39;5438&#39; THEN v_return :&#x3D; v_return || &#39;Fang&#39;; WHEN v_compare BETWEEN &#39;5439&#39; AND &#39;54B2&#39; THEN v_return :&#x3D; v_return || &#39;Fei&#39;; WHEN v_compare BETWEEN &#39;54B4&#39; AND &#39;5528&#39; THEN v_return :&#x3D; v_return || &#39;Fen&#39;; WHEN v_compare BETWEEN &#39;5529&#39; AND &#39;55A9&#39; THEN v_return :&#x3D; v_return || &#39;Feng&#39;; WHEN v_compare BETWEEN &#39;55AA&#39; AND &#39;55AE&#39; THEN v_return :&#x3D; v_return || &#39;Fo&#39;; WHEN v_compare BETWEEN &#39;55B1&#39; AND &#39;55BC&#39; THEN v_return :&#x3D; v_return || &#39;Fou&#39;; WHEN v_compare BETWEEN &#39;55BD&#39; AND &#39;5739&#39; THEN v_return :&#x3D; v_return || &#39;Fu&#39;; WHEN v_compare &#x3D; &#39;569D&#39; THEN v_return :&#x3D; v_return || &#39;M&#39;; WHEN v_compare BETWEEN &#39;573C&#39; AND &#39;574C&#39; THEN v_return :&#x3D; v_return || &#39;Ga&#39;; WHEN v_compare BETWEEN &#39;574D&#39; AND &#39;578C&#39; THEN v_return :&#x3D; v_return || &#39;Gai&#39;; WHEN v_compare BETWEEN &#39;578D&#39; AND &#39;57F0&#39; THEN v_return :&#x3D; v_return || &#39;Gan&#39;; WHEN v_compare BETWEEN &#39;57F1&#39; AND &#39;582C&#39; THEN v_return :&#x3D; v_return || &#39;Gang&#39;; WHEN v_compare BETWEEN &#39;582E&#39; AND &#39;5884&#39; THEN v_return :&#x3D; v_return || &#39;Gao&#39;; WHEN v_compare BETWEEN &#39;5885&#39; AND &#39;5905&#39; THEN v_return :&#x3D; v_return || &#39;Ge&#39;; WHEN v_compare &#x3D; &#39;5906&#39; THEN v_return :&#x3D; v_return || &#39;Gei&#39;; WHEN v_compare BETWEEN &#39;5909&#39; AND &#39;5915&#39; THEN v_return :&#x3D; v_return || &#39;Gen&#39;; WHEN v_compare BETWEEN &#39;5918&#39; AND &#39;594E&#39; THEN v_return :&#x3D; v_return || &#39;Geng&#39;; WHEN v_compare &#x3D; &#39;5956&#39; THEN v_return :&#x3D; v_return || &#39;Gib&#39;; WHEN v_compare &#x3D; &#39;5958&#39; THEN v_return :&#x3D; v_return || &#39;Go&#39;; WHEN v_compare BETWEEN &#39;5959&#39; AND &#39;59BA&#39; THEN v_return :&#x3D; v_return || &#39;Gong&#39;; WHEN v_compare BETWEEN &#39;59BD&#39; AND &#39;5A0E&#39; THEN v_return :&#x3D; v_return || &#39;Gou&#39;; WHEN v_compare BETWEEN &#39;5A10&#39; AND &#39;5AB2&#39; THEN v_return :&#x3D; v_return || &#39;Gu&#39;; WHEN v_compare BETWEEN &#39;5AB4&#39; AND &#39;5AE8&#39; THEN v_return :&#x3D; v_return || &#39;Gua&#39;; WHEN v_compare BETWEEN &#39;5AE9&#39; AND &#39;5AF8&#39; THEN v_return :&#x3D; v_return || &#39;Guai&#39;; WHEN v_compare BETWEEN &#39;5AFD&#39; AND &#39;5B5E&#39; THEN v_return :&#x3D; v_return || &#39;Guan&#39;; WHEN v_compare BETWEEN &#39;5B60&#39; AND &#39;5B8C&#39; THEN v_return :&#x3D; v_return || &#39;Guang&#39;; WHEN v_compare BETWEEN &#39;5B8D&#39; AND &#39;5C2E&#39; THEN v_return :&#x3D; v_return || &#39;Gui&#39;; WHEN v_compare &#x3D; &#39;5BC8&#39; THEN v_return :&#x3D; v_return || &#39;Kwi&#39;; WHEN v_compare BETWEEN &#39;5C30&#39; AND &#39;5C58&#39; THEN v_return :&#x3D; v_return || &#39;Gun&#39;; WHEN v_compare BETWEEN &#39;5C51&#39; AND &#39;5CB6&#39; THEN v_return :&#x3D; v_return || &#39;Guo&#39;; WHEN v_compare BETWEEN &#39;5CB8&#39; AND &#39;5CBD&#39; THEN v_return :&#x3D; v_return || &#39;Ha&#39;; WHEN v_compare BETWEEN &#39;5CC6&#39; AND &#39;5CEC&#39; THEN v_return :&#x3D; v_return || &#39;Hai&#39;; WHEN v_compare &#x3D; &#39;5CED&#39; THEN v_return :&#x3D; v_return || &#39;Hal&#39;; WHEN v_compare BETWEEN &#39;5CEE&#39; AND &#39;5D99&#39; THEN v_return :&#x3D; v_return || &#39;Han&#39;; WHEN v_compare BETWEEN &#39;5D9D&#39; AND &#39;5DBC&#39; THEN v_return :&#x3D; v_return || &#39;Hang&#39;; WHEN v_compare BETWEEN &#39;5DBE&#39; AND &#39;5E20&#39; THEN v_return :&#x3D; v_return || &#39;Hao&#39;; WHEN v_compare &#x3D; &#39;5E02&#39; THEN v_return :&#x3D; v_return || &#39;Ho&#39;; WHEN v_compare BETWEEN &#39;5E22&#39; AND &#39;5EC5&#39; THEN v_return :&#x3D; v_return || &#39;He&#39;; WHEN v_compare BETWEEN &#39;5EC6&#39; AND &#39;5ECE&#39; THEN v_return :&#x3D; v_return || &#39;Hei&#39;; WHEN v_compare BETWEEN &#39;5ED0&#39; AND &#39;5EDC&#39; THEN v_return :&#x3D; v_return || &#39;Hen&#39;; WHEN v_compare BETWEEN &#39;5EDD&#39; AND &#39;5EDC&#39; THEN v_return :&#x3D; v_return || &#39;Heng&#39;; WHEN v_compare &#x3D; &#39;5EF4&#39; THEN v_return :&#x3D; v_return || &#39;Hol&#39;; WHEN v_compare BETWEEN &#39;5F05&#39; AND &#39;5F8D&#39; THEN v_return :&#x3D; v_return || &#39;Hong&#39;; WHEN v_compare BETWEEN &#39;5F8E&#39; AND &#39;5FD2&#39; THEN v_return :&#x3D; v_return || &#39;Hou&#39;; WHEN v_compare BETWEEN &#39;5FD4&#39; AND &#39;60B1&#39; THEN v_return :&#x3D; v_return || &#39;Hu&#39;; WHEN v_compare BETWEEN &#39;60B2&#39; AND &#39;6111&#39; THEN v_return :&#x3D; v_return || &#39;Hua&#39;; WHEN v_compare BETWEEN &#39;6112&#39; AND &#39;612D&#39; THEN v_return :&#x3D; v_return || &#39;Huai&#39;; WHEN v_compare BETWEEN &#39;612E&#39; AND &#39;61C6&#39; THEN v_return :&#x3D; v_return || &#39;Huan&#39;; WHEN v_compare BETWEEN &#39;61CA&#39; AND &#39;624A&#39; THEN v_return :&#x3D; v_return || &#39;Huang&#39;; WHEN v_compare BETWEEN &#39;624C&#39; AND &#39;6344&#39; THEN v_return :&#x3D; v_return || &#39;Hui&#39;; WHEN v_compare BETWEEN &#39;6346&#39; AND &#39;6388&#39; THEN v_return :&#x3D; v_return || &#39;Hun&#39;; WHEN v_compare BETWEEN &#39;638C&#39; AND &#39;63FA&#39; THEN v_return :&#x3D; v_return || &#39;Huo&#39;; WHEN v_compare &#x3D; &#39;63FD&#39; THEN v_return :&#x3D; v_return || &#39;Hwa&#39;; WHEN v_compare BETWEEN &#39;63FE&#39; AND &#39;6601&#39; THEN v_return :&#x3D; v_return || &#39;Ji&#39;; WHEN v_compare BETWEEN &#39;6604&#39; AND &#39;6691&#39; THEN v_return :&#x3D; v_return || &#39;Jia&#39;; WHEN v_compare BETWEEN &#39;6692&#39; AND &#39;67F8&#39; THEN v_return :&#x3D; v_return || &#39;Jian&#39;; WHEN v_compare BETWEEN &#39;67F9&#39; AND &#39;6860&#39; THEN v_return :&#x3D; v_return || &#39;Jiang&#39;; WHEN v_compare BETWEEN &#39;6862&#39; AND &#39;6930&#39; THEN v_return :&#x3D; v_return || &#39;Jiao&#39;; WHEN v_compare BETWEEN &#39;6931&#39; AND &#39;6A18&#39; THEN v_return :&#x3D; v_return || &#39;Jie&#39;; WHEN v_compare BETWEEN &#39;6A1A&#39; AND &#39;6AC9&#39; THEN v_return :&#x3D; v_return || &#39;Jin&#39;; WHEN v_compare BETWEEN &#39;6ACA&#39; AND &#39;6B65&#39; THEN v_return :&#x3D; v_return || &#39;Jing&#39;; WHEN v_compare BETWEEN &#39;6B66&#39; AND &#39;6B9A&#39; THEN v_return :&#x3D; v_return || &#39;Jiong&#39;; WHEN v_compare BETWEEN &#39;6B9C&#39; AND &#39;6C0C&#39; THEN v_return :&#x3D; v_return || &#39;Jiu&#39;; WHEN v_compare &#x3D; &#39;6C0D&#39; THEN v_return :&#x3D; v_return || &#39;Jou&#39;; WHEN v_compare BETWEEN &#39;6C0E&#39; AND &#39;6D2A&#39; THEN v_return :&#x3D; v_return || &#39;Ju&#39;; WHEN v_compare BETWEEN &#39;6D2D&#39; AND &#39;6D80&#39; THEN v_return :&#x3D; v_return || &#39;Juan&#39;; WHEN v_compare BETWEEN &#39;6D82&#39; AND &#39;6E28&#39; THEN v_return :&#x3D; v_return || &#39;Jue&#39;; WHEN v_compare BETWEEN &#39;6E2A&#39; AND &#39;6E85&#39; THEN v_return :&#x3D; v_return || &#39;Jun&#39;; WHEN v_compare BETWEEN &#39;6E86&#39; AND &#39;6E92&#39; THEN v_return :&#x3D; v_return || &#39;Ka&#39;; WHEN v_compare BETWEEN &#39;6E94&#39; AND &#39;6EC9&#39; THEN v_return :&#x3D; v_return || &#39;Kai&#39;; WHEN v_compare &#x3D; &#39;6ECC&#39; THEN v_return :&#x3D; v_return || &#39;Kal&#39;; WHEN v_compare BETWEEN &#39;6ECD&#39; AND &#39;6F00&#39; THEN v_return :&#x3D; v_return || &#39;Kan&#39;; WHEN v_compare BETWEEN &#39;6F02&#39; AND &#39;6F30&#39; THEN v_return :&#x3D; v_return || &#39;Kang&#39;; WHEN v_compare BETWEEN &#39;6F31&#39; AND &#39;6F4D&#39; THEN v_return :&#x3D; v_return || &#39;Kao&#39;; WHEN v_compare BETWEEN &#39;6F50&#39; AND &#39;6FC8&#39; THEN v_return :&#x3D; v_return || &#39;Ke&#39;; WHEN v_compare BETWEEN &#39;6FC9&#39; AND &#39;6FDA&#39; THEN v_return :&#x3D; v_return || &#39;Ken&#39;; WHEN v_compare BETWEEN &#39;6FDC&#39; AND &#39;6FF5&#39; THEN v_return :&#x3D; v_return || &#39;Keng&#39;; WHEN v_compare &#x3D; &#39;6FFC&#39; THEN v_return :&#x3D; v_return || &#39;Ki&#39;; WHEN v_compare BETWEEN &#39;6FFD&#39; AND &#39;7016&#39; THEN v_return :&#x3D; v_return || &#39;Kong&#39;; WHEN v_compare &#x3D; &#39;7018&#39; THEN v_return :&#x3D; v_return || &#39;Kos&#39;; WHEN v_compare BETWEEN &#39;7019&#39; AND &#39;703E&#39; THEN v_return :&#x3D; v_return || &#39;Kou&#39;; WHEN v_compare BETWEEN &#39;7041&#39; AND &#39;707A&#39; THEN v_return :&#x3D; v_return || &#39;Ku&#39;; WHEN v_compare BETWEEN &#39;707C&#39; AND &#39;7095&#39; THEN v_return :&#x3D; v_return || &#39;Kua&#39;; WHEN v_compare BETWEEN &#39;709A&#39; AND &#39;70C1&#39; THEN v_return :&#x3D; v_return || &#39;Kuai&#39;; WHEN v_compare BETWEEN &#39;70C2&#39; AND &#39;70D4&#39; THEN v_return :&#x3D; v_return || &#39;Kuan&#39;; WHEN v_compare BETWEEN &#39;70D8&#39; AND &#39;7128&#39; THEN v_return :&#x3D; v_return || &#39;Kuang&#39;; WHEN v_compare BETWEEN &#39;7129&#39; AND &#39;71B1&#39; THEN v_return :&#x3D; v_return || &#39;Kui&#39;; WHEN v_compare BETWEEN &#39;71B2&#39; AND &#39;71FE&#39; THEN v_return :&#x3D; v_return || &#39;Kun&#39;; WHEN v_compare BETWEEN &#39;7200&#39; AND &#39;7226&#39; THEN v_return :&#x3D; v_return || &#39;Kuo&#39;; WHEN v_compare &#x3D; &#39;7228&#39; THEN v_return :&#x3D; v_return || &#39;Kweok&#39;; WHEN v_compare BETWEEN &#39;722C&#39; AND &#39;726A&#39; THEN v_return :&#x3D; v_return || &#39;La&#39;; WHEN v_compare BETWEEN &#39;726C&#39; AND &#39;72B5&#39; THEN v_return :&#x3D; v_return || &#39;Lai&#39;; WHEN v_compare BETWEEN &#39;72B9&#39; AND &#39;733C&#39; THEN v_return :&#x3D; v_return || &#39;Lan&#39;; WHEN v_compare BETWEEN &#39;733D&#39; AND &#39;7388&#39; THEN v_return :&#x3D; v_return || &#39;Lang&#39;; WHEN v_compare BETWEEN &#39;7389&#39; AND &#39;73E5&#39; THEN v_return :&#x3D; v_return || &#39;Lao&#39;; WHEN v_compare BETWEEN &#39;73E8&#39; AND &#39;7402&#39; THEN v_return :&#x3D; v_return || &#39;Le&#39;; WHEN v_compare BETWEEN &#39;7404&#39; AND &#39;7485&#39; THEN v_return :&#x3D; v_return || &#39;Lei&#39;; WHEN v_compare BETWEEN &#39;7488&#39; AND &#39;7499&#39; THEN v_return :&#x3D; v_return || &#39;Leng&#39;; WHEN v_compare BETWEEN &#39;749C&#39; AND &#39;7642&#39; THEN v_return :&#x3D; v_return || &#39;Li&#39;; WHEN v_compare BETWEEN &#39;7644&#39; AND &#39;7645&#39; THEN v_return :&#x3D; v_return || &#39;Lia&#39;; WHEN v_compare BETWEEN &#39;7646&#39; AND &#39;76EC&#39; THEN v_return :&#x3D; v_return || &#39;Lian&#39;; WHEN v_compare BETWEEN &#39;76ED&#39; AND &#39;7731&#39; THEN v_return :&#x3D; v_return || &#39;Liang&#39;; WHEN v_compare BETWEEN &#39;7732&#39; AND &#39;7794&#39; THEN v_return :&#x3D; v_return || &#39;Liao&#39;; WHEN v_compare BETWEEN &#39;7795&#39; AND &#39;77E2&#39; THEN v_return :&#x3D; v_return || &#39;Lie&#39;; WHEN v_compare BETWEEN &#39;77E4&#39; AND &#39;785D&#39; THEN v_return :&#x3D; v_return || &#39;Lin&#39;; WHEN v_compare &#x3D; &#39;77EA&#39; THEN v_return :&#x3D; v_return || &#39;Len&#39;; WHEN v_compare BETWEEN &#39;7860&#39; AND &#39;7904&#39; THEN v_return :&#x3D; v_return || &#39;Ling&#39;; WHEN v_compare BETWEEN &#39;7905&#39; AND &#39;7986&#39; THEN v_return :&#x3D; v_return || &#39;Liu&#39;; WHEN v_compare BETWEEN &#39;7988&#39; AND &#39;7989&#39; THEN v_return :&#x3D; v_return || &#39;Lo&#39;; WHEN v_compare BETWEEN &#39;798A&#39; AND &#39;79FD&#39; THEN v_return :&#x3D; v_return || &#39;Long&#39;; WHEN v_compare BETWEEN &#39;79FE&#39; AND &#39;7A49&#39; THEN v_return :&#x3D; v_return || &#39;Lou&#39;; WHEN v_compare BETWEEN &#39;7A4C&#39; AND &#39;7B4D&#39; THEN v_return :&#x3D; v_return || &#39;Lu&#39;; WHEN v_compare BETWEEN &#39;7B4E&#39; AND &#39;7B80&#39; THEN v_return :&#x3D; v_return || &#39;Luan&#39;; WHEN v_compare BETWEEN &#39;7B81&#39; AND &#39;7BB2&#39; THEN v_return :&#x3D; v_return || &#39;Lun&#39;; WHEN v_compare BETWEEN &#39;7BB5&#39; AND &#39;7C25&#39; THEN v_return :&#x3D; v_return || &#39;Luo&#39;; WHEN v_compare BETWEEN &#39;7C26&#39; AND &#39;7C82&#39; THEN v_return :&#x3D; v_return || &#39;Lv&#39;; WHEN v_compare BETWEEN &#39;7C84&#39; AND &#39;7C98&#39; THEN v_return :&#x3D; v_return || &#39;Lue&#39;; WHEN v_compare BETWEEN &#39;7C9C&#39; AND &#39;7CE4&#39; THEN v_return :&#x3D; v_return || &#39;Ma&#39;; WHEN v_compare BETWEEN &#39;7CE5&#39; AND &#39;7DOC&#39; THEN v_return :&#x3D; v_return || &#39;Mai&#39;; WHEN v_compare BETWEEN &#39;7D11&#39; AND &#39;7D6E&#39; THEN v_return :&#x3D; v_return || &#39;Man&#39;; WHEN v_compare BETWEEN &#39;7D70&#39; AND &#39;7DA9&#39; THEN v_return :&#x3D; v_return || &#39;Mang&#39;; WHEN v_compare BETWEEN &#39;7DAC&#39; AND &#39;7E15&#39; THEN v_return :&#x3D; v_return || &#39;Mao&#39;; WHEN v_compare &#x3D; &#39;7E0C&#39; THEN v_return :&#x3D; v_return || &#39;Q&#39;; WHEN v_compare BETWEEN &#39;7E18&#39; AND &#39;7E1E&#39; THEN v_return :&#x3D; v_return || &#39;Me&#39;; WHEN v_compare BETWEEN &#39;7E20&#39; AND &#39;7E9A&#39; THEN v_return :&#x3D; v_return || &#39;Mei&#39;; WHEN v_compare BETWEEN &#39;7E9D&#39; AND &#39;7EC1&#39; THEN v_return :&#x3D; v_return || &#39;Men&#39;; WHEN v_compare BETWEEN &#39;7EC2&#39; AND &#39;7F36&#39; THEN v_return :&#x3D; v_return || &#39;Meng&#39;; WHEN v_compare &#x3D; &#39;7F38&#39; THEN v_return :&#x3D; v_return || &#39;Meo&#39;; WHEN v_compare BETWEEN &#39;7F39&#39; AND &#39;7FE4&#39; THEN v_return :&#x3D; v_return || &#39;Mi&#39;; WHEN v_compare BETWEEN &#39;7FE6&#39; AND &#39;8034&#39; THEN v_return :&#x3D; v_return || &#39;Mian&#39;; WHEN v_compare BETWEEN &#39;8035&#39; AND &#39;805A&#39; THEN v_return :&#x3D; v_return || &#39;Miao&#39;; WHEN v_compare BETWEEN &#39;805C&#39; AND &#39;8081&#39; THEN v_return :&#x3D; v_return || &#39;Mie&#39;; WHEN v_compare BETWEEN &#39;8084&#39; AND &#39;80E4&#39; THEN v_return :&#x3D; v_return || &#39;Min&#39;; WHEN v_compare &#x3D; &#39;8096&#39; THEN v_return :&#x3D; v_return || &#39;Lem&#39;; WHEN v_compare BETWEEN &#39;80E5&#39; AND &#39;8116&#39; THEN v_return :&#x3D; v_return || &#39;Ming&#39;; WHEN v_compare BETWEEN &#39;8119&#39; AND &#39;811D&#39; THEN v_return :&#x3D; v_return || &#39;Miu&#39;; WHEN v_compare BETWEEN &#39;811E&#39; AND &#39;81A9&#39; THEN v_return :&#x3D; v_return || &#39;Mo&#39;; WHEN v_compare BETWEEN &#39;81AC&#39; AND &#39;81CC&#39; THEN v_return :&#x3D; v_return || &#39;Mou&#39;; WHEN v_compare BETWEEN &#39;81CD&#39; AND &#39;821E&#39; THEN v_return :&#x3D; v_return || &#39;Mu&#39;; WHEN v_compare &#x3D; &#39;8220&#39; THEN v_return :&#x3D; v_return || &#39;Myeo&#39;; WHEN v_compare &#x3D; &#39;8221&#39; THEN v_return :&#x3D; v_return || &#39;Myeon&#39;; WHEN v_compare &#x3D; &#39;8222&#39; THEN v_return :&#x3D; v_return || &#39;Myeong&#39;; WHEN v_compare BETWEEN &#39;8224&#39; AND &#39;8258&#39; THEN v_return :&#x3D; v_return || &#39;Na&#39;; WHEN v_compare BETWEEN &#39;825D&#39; AND &#39;8285&#39; THEN v_return :&#x3D; v_return || &#39;Nai&#39;; WHEN v_compare BETWEEN &#39;8289&#39; AND &#39;82B5&#39; THEN v_return :&#x3D; v_return || &#39;Nan&#39;; WHEN v_compare BETWEEN &#39;82B9&#39; AND &#39;82D0&#39; THEN v_return :&#x3D; v_return || &#39;Nang&#39;; WHEN v_compare BETWEEN &#39;82D1&#39; AND &#39;8311&#39; THEN v_return :&#x3D; v_return || &#39;Nao&#39;; WHEN v_compare BETWEEN &#39;8312&#39; AND &#39;8320&#39; THEN v_return :&#x3D; v_return || &#39;Ne&#39;; WHEN v_compare BETWEEN &#39;8322&#39; AND &#39;8331&#39; THEN v_return :&#x3D; v_return || &#39;Nei&#39;; WHEN v_compare &#x3D; &#39;8334&#39; THEN v_return :&#x3D; v_return || &#39;Nem&#39;; WHEN v_compare &#x3D; &#39;8336&#39; THEN v_return :&#x3D; v_return || &#39;Nen&#39;; WHEN v_compare &#x3D; &#39;8339&#39; THEN v_return :&#x3D; v_return || &#39;Neng&#39;; WHEN v_compare &#x3D; &#39;833E&#39; THEN v_return :&#x3D; v_return || &#39;Neus&#39;; WHEN v_compare &#x3D; &#39;8342&#39; THEN v_return :&#x3D; v_return || &#39;Ngag&#39;; WHEN v_compare &#x3D; &#39;8344&#39; THEN v_return :&#x3D; v_return || &#39;Ngai&#39;; WHEN v_compare &#x3D; &#39;8345&#39; THEN v_return :&#x3D; v_return || &#39;Ngam&#39;; WHEN v_compare BETWEEN &#39;8346&#39; AND &#39;83B9&#39; THEN v_return :&#x3D; v_return || &#39;Ni&#39;; WHEN v_compare BETWEEN &#39;83BC&#39; AND &#39;83ED&#39; THEN v_return :&#x3D; v_return || &#39;Nian&#39;; WHEN v_compare BETWEEN &#39;83EE&#39; AND &#39;83F5&#39; THEN v_return :&#x3D; v_return || &#39;Niang&#39;; WHEN v_compare BETWEEN &#39;83F8&#39; AND &#39;8414&#39; THEN v_return :&#x3D; v_return || &#39;Niao&#39;; WHEN v_compare BETWEEN &#39;8415&#39; AND &#39;8478&#39; THEN v_return :&#x3D; v_return || &#39;Nie&#39;; WHEN v_compare BETWEEN &#39;8479&#39; AND &#39;8480&#39; THEN v_return :&#x3D; v_return || &#39;Nin&#39;; WHEN v_compare BETWEEN &#39;8481&#39; AND &#39;84B4&#39; THEN v_return :&#x3D; v_return || &#39;Ning&#39;; WHEN v_compare BETWEEN &#39;84B5&#39; AND &#39;84D1&#39; THEN v_return :&#x3D; v_return || &#39;Niu&#39;; WHEN v_compare BETWEEN &#39;84D4&#39; AND &#39;84FA&#39; THEN v_return :&#x3D; v_return || &#39;Nong&#39;; WHEN v_compare &#x3D; &#39;84E8&#39; THEN v_return :&#x3D; v_return || &#39;Nung&#39;; WHEN v_compare BETWEEN &#39;84FD&#39; AND &#39;850E&#39; THEN v_return :&#x3D; v_return || &#39;Nou&#39;; WHEN v_compare BETWEEN &#39;8511&#39; AND &#39;8522&#39; THEN v_return :&#x3D; v_return || &#39;Nu&#39;; WHEN v_compare BETWEEN &#39;8524&#39; AND &#39;852C&#39; THEN v_return :&#x3D; v_return || &#39;Nuan&#39;; WHEN v_compare &#x3D; &#39;852D&#39; THEN v_return :&#x3D; v_return || &#39;Nun&#39;; WHEN v_compare BETWEEN &#39;8530&#39; AND &#39;8559&#39; THEN v_return :&#x3D; v_return || &#39;Nuo&#39;; WHEN v_compare BETWEEN &#39;855A&#39; AND &#39;8566&#39; THEN v_return :&#x3D; v_return || &#39;Nv&#39;; WHEN v_compare BETWEEN &#39;856D&#39; AND &#39;8574&#39; THEN v_return :&#x3D; v_return || &#39;Nue&#39;; WHEN v_compare &#x3D; &#39;8575&#39; THEN v_return :&#x3D; v_return || &#39;O&#39;; WHEN v_compare &#x3D; &#39;8579&#39; THEN v_return :&#x3D; v_return || &#39;Oes&#39;; WHEN v_compare &#x3D; &#39;857A&#39; THEN v_return :&#x3D; v_return || &#39;Ol&#39;; WHEN v_compare &#x3D; &#39;857C&#39; THEN v_return :&#x3D; v_return || &#39;On&#39;; WHEN v_compare BETWEEN &#39;857D&#39; AND &#39;85AE&#39; THEN v_return :&#x3D; v_return || &#39;Ou&#39;; WHEN v_compare BETWEEN &#39;85B1&#39; AND &#39;85C9&#39; THEN v_return :&#x3D; v_return || &#39;Pa&#39;; WHEN v_compare BETWEEN &#39;85CA&#39; AND &#39;85E4&#39; THEN v_return :&#x3D; v_return || &#39;Pai&#39;; WHEN v_compare &#x3D; &#39;85E5&#39; THEN v_return :&#x3D; v_return || &#39;Pak&#39;; WHEN v_compare BETWEEN &#39;85E8&#39; AND &#39;8625&#39; THEN v_return :&#x3D; v_return || &#39;Pan&#39;; WHEN v_compare BETWEEN &#39;8626&#39; AND &#39;8658&#39; THEN v_return :&#x3D; v_return || &#39;Pang&#39;; WHEN v_compare BETWEEN &#39;8659&#39; AND &#39;8688&#39; THEN v_return :&#x3D; v_return || &#39;Pao&#39;; WHEN v_compare BETWEEN &#39;868A&#39; AND &#39;86C5&#39; THEN v_return :&#x3D; v_return || &#39;Pei&#39;; WHEN v_compare BETWEEN &#39;86C8&#39; AND &#39;86D6&#39; THEN v_return :&#x3D; v_return || &#39;Pen&#39;; WHEN v_compare BETWEEN &#39;86D8&#39; AND &#39;8740&#39; THEN v_return :&#x3D; v_return || &#39;Peng&#39;; WHEN v_compare &#x3D; &#39;8741&#39; THEN v_return :&#x3D; v_return || &#39;Peol&#39;; WHEN v_compare &#x3D; &#39;8742&#39; THEN v_return :&#x3D; v_return || &#39;Phas&#39;; WHEN v_compare &#x3D; &#39;8744&#39; THEN v_return :&#x3D; v_return || &#39;Phdeng&#39;; WHEN v_compare &#x3D; &#39;8745&#39; THEN v_return :&#x3D; v_return || &#39;Phoi&#39;; WHEN v_compare &#x3D; &#39;8746&#39; THEN v_return :&#x3D; v_return || &#39;Phos&#39;; WHEN v_compare BETWEEN &#39;8748&#39; AND &#39;880D&#39; THEN v_return :&#x3D; v_return || &#39;Pi&#39;; WHEN v_compare BETWEEN &#39;880E&#39; AND &#39;883A&#39; THEN v_return :&#x3D; v_return || &#39;Pian&#39;; WHEN v_compare BETWEEN &#39;883C&#39; AND &#39;8869&#39; THEN v_return :&#x3D; v_return || &#39;Piao&#39;; WHEN v_compare BETWEEN &#39;886D&#39; AND &#39;8879&#39; THEN v_return :&#x3D; v_return || &#39;Pie&#39;; WHEN v_compare BETWEEN &#39;887A&#39; AND &#39;88A0&#39; THEN v_return :&#x3D; v_return || &#39;Pin&#39;; WHEN v_compare BETWEEN &#39;88A1&#39; AND &#39;88EC&#39; THEN v_return :&#x3D; v_return || &#39;Ping&#39;; WHEN v_compare BETWEEN &#39;88F0&#39; AND &#39;8938&#39; THEN v_return :&#x3D; v_return || &#39;Po&#39;; WHEN v_compare BETWEEN &#39;893E&#39; AND &#39;8958&#39; THEN v_return :&#x3D; v_return || &#39;Pou&#39;; WHEN v_compare BETWEEN &#39;895A&#39; AND &#39;895C&#39; THEN v_return :&#x3D; v_return || &#39;Ppun&#39;; WHEN v_compare BETWEEN &#39;895D&#39; AND &#39;89C4&#39; THEN v_return :&#x3D; v_return || &#39;Pu&#39;; WHEN v_compare BETWEEN &#39;89C5&#39; AND &#39;8B3E&#39; THEN v_return :&#x3D; v_return || &#39;Qi&#39;; WHEN v_compare BETWEEN &#39;8B41&#39; AND &#39;8B61&#39; THEN v_return :&#x3D; v_return || &#39;Qia&#39;; WHEN v_compare BETWEEN &#39;8B62&#39; AND &#39;8C54&#39; THEN v_return :&#x3D; v_return || &#39;Qian&#39;; WHEN v_compare BETWEEN &#39;8C5A&#39; AND &#39;8CB4&#39; THEN v_return :&#x3D; v_return || &#39;Qiang&#39;; WHEN v_compare BETWEEN &#39;8CB8&#39; AND &#39;8D3D&#39; THEN v_return :&#x3D; v_return || &#39;Qiao&#39;; WHEN v_compare BETWEEN &#39;8D40&#39; AND &#39;8D7E&#39; THEN v_return :&#x3D; v_return || &#39;Qie&#39;; WHEN v_compare BETWEEN &#39;8D81&#39; AND &#39;8DFA&#39; THEN v_return :&#x3D; v_return || &#39;Qin&#39;; WHEN v_compare BETWEEN &#39;8DFC&#39; AND &#39;8E5D&#39; THEN v_return :&#x3D; v_return || &#39;Qing&#39;; WHEN v_compare BETWEEN &#39;8E5E&#39; AND &#39;8E98&#39; THEN v_return :&#x3D; v_return || &#39;Qiong&#39;; WHEN v_compare BETWEEN &#39;8E9A&#39; AND &#39;8F2A&#39; THEN v_return :&#x3D; v_return || &#39;Qiu&#39;; WHEN v_compare BETWEEN &#39;8F2E&#39; AND &#39;8FE9&#39; THEN v_return :&#x3D; v_return || &#39;Qu&#39;; WHEN v_compare BETWEEN &#39;8FEA&#39; AND &#39;905D&#39; THEN v_return :&#x3D; v_return || &#39;Quan&#39;; WHEN v_compare BETWEEN &#39;905E&#39; AND &#39;9099&#39; THEN v_return :&#x3D; v_return || &#39;Que&#39;; WHEN v_compare BETWEEN &#39;909A&#39; AND &#39;90AA&#39; THEN v_return :&#x3D; v_return || &#39;Qun&#39;; WHEN v_compare BETWEEN &#39;90B0&#39; AND &#39;90B1&#39; THEN v_return :&#x3D; v_return || &#39;Ra&#39;; WHEN v_compare &#x3D; &#39;90B2&#39; THEN v_return :&#x3D; v_return || &#39;Ram&#39;; WHEN v_compare BETWEEN &#39;90B4&#39; AND &#39;90E5&#39; THEN v_return :&#x3D; v_return || &#39;Ran&#39;; WHEN v_compare BETWEEN &#39;90E6&#39; AND &#39;9104&#39; THEN v_return :&#x3D; v_return || &#39;Rang&#39;; WHEN v_compare BETWEEN &#39;9105&#39; AND &#39;911C&#39; THEN v_return :&#x3D; v_return || &#39;Rao&#39;; WHEN v_compare BETWEEN &#39;911D&#39; AND &#39;9120&#39; THEN v_return :&#x3D; v_return || &#39;Re&#39;; WHEN v_compare BETWEEN &#39;9121&#39; AND &#39;9180&#39; THEN v_return :&#x3D; v_return || &#39;Ren&#39;; WHEN v_compare BETWEEN &#39;9181&#39; AND &#39;918D&#39; THEN v_return :&#x3D; v_return || &#39;Reng&#39;; WHEN v_compare BETWEEN &#39;918E&#39; AND &#39;9196&#39; THEN v_return :&#x3D; v_return || &#39;Ri&#39;; WHEN v_compare BETWEEN &#39;9189&#39; AND &#39;91F1&#39; THEN v_return :&#x3D; v_return || &#39;Rong&#39;; WHEN v_compare BETWEEN &#39;91F2&#39; AND &#39;9218&#39; THEN v_return :&#x3D; v_return || &#39;Rou&#39;; WHEN v_compare BETWEEN &#39;9219&#39; AND &#39;9269&#39; THEN v_return :&#x3D; v_return || &#39;Ru&#39;; WHEN v_compare BETWEEN &#39;926C&#39; AND &#39;9292&#39; THEN v_return :&#x3D; v_return || &#39;Ruan&#39;; WHEN v_compare BETWEEN &#39;9294&#39; AND &#39;92BD&#39; THEN v_return :&#x3D; v_return || &#39;Rui&#39;; WHEN v_compare BETWEEN &#39;92BE&#39; AND &#39;92C9&#39; THEN v_return :&#x3D; v_return || &#39;Run&#39;; WHEN v_compare &#x3D; &#39;92CA&#39; THEN v_return :&#x3D; v_return || &#39;Rua&#39;; WHEN v_compare BETWEEN &#39;92CA&#39; AND &#39;92E4&#39; THEN v_return :&#x3D; v_return || &#39;Ruo&#39;; WHEN v_compare BETWEEN &#39;92E5&#39; AND &#39;9309&#39; THEN v_return :&#x3D; v_return || &#39;Sa&#39;; WHEN v_compare &#x3D; &#39;930A&#39; THEN v_return :&#x3D; v_return || &#39;Saeng&#39;; WHEN v_compare BETWEEN &#39;930C&#39; AND &#39;9325&#39; THEN v_return :&#x3D; v_return || &#39;Sai&#39;; WHEN v_compare &#x3D; &#39;9328&#39; THEN v_return :&#x3D; v_return || &#39;Sal&#39;; WHEN v_compare BETWEEN &#39;9329&#39; AND &#39;9355&#39; THEN v_return :&#x3D; v_return || &#39;San&#39;; WHEN v_compare BETWEEN &#39;9358&#39; AND &#39;936A&#39; THEN v_return :&#x3D; v_return || &#39;Sang&#39;; WHEN v_compare BETWEEN &#39;936C&#39; AND &#39;9391&#39; THEN v_return :&#x3D; v_return || &#39;Sao&#39;; WHEN v_compare BETWEEN &#39;9392&#39; AND &#39;93C5&#39; THEN v_return :&#x3D; v_return || &#39;Se&#39;; WHEN v_compare &#x3D; &#39;93C6&#39; THEN v_return :&#x3D; v_return || &#39;Sed&#39;; WHEN v_compare BETWEEN &#39;93C8&#39; AND &#39;93CC&#39; THEN v_return :&#x3D; v_return || &#39;Sen&#39;; WHEN v_compare BETWEEN &#39;93CD&#39; AND &#39;93D0&#39; THEN v_return :&#x3D; v_return || &#39;Seng&#39;; WHEN v_compare &#x3D; &#39;93D1&#39; THEN v_return :&#x3D; v_return || &#39;Seo&#39;; WHEN v_compare &#x3D; &#39;93D2&#39; THEN v_return :&#x3D; v_return || &#39;Seon&#39;; WHEN v_compare BETWEEN &#39;93D4&#39; AND &#39;941A&#39; THEN v_return :&#x3D; v_return || &#39;Sha&#39;; WHEN v_compare BETWEEN &#39;941D&#39; AND &#39;9428&#39; THEN v_return :&#x3D; v_return || &#39;Shai&#39;; WHEN v_compare BETWEEN &#39;9429&#39; AND &#39;94C1&#39; THEN v_return :&#x3D; v_return || &#39;Shan&#39;; WHEN v_compare BETWEEN &#39;94C2&#39; AND &#39;94EE&#39; THEN v_return :&#x3D; v_return || &#39;Shang&#39;; WHEN v_compare BETWEEN &#39;94F1&#39; AND &#39;952D&#39; THEN v_return :&#x3D; v_return || &#39;Shao&#39;; WHEN v_compare BETWEEN &#39;952E&#39; AND &#39;9571&#39; THEN v_return :&#x3D; v_return || &#39;She&#39;; WHEN v_compare BETWEEN &#39;9574&#39; AND &#39;9602&#39; THEN v_return :&#x3D; v_return || &#39;Shen&#39;; WHEN v_compare BETWEEN &#39;9604&#39; AND &#39;965C&#39; THEN v_return :&#x3D; v_return || &#39;Sheng&#39;; WHEN v_compare BETWEEN &#39;965E&#39; AND &#39;9786&#39; THEN v_return :&#x3D; v_return || &#39;Shi&#39;; WHEN v_compare BETWEEN &#39;9788&#39; AND &#39;97AE&#39; THEN v_return :&#x3D; v_return || &#39;Shou&#39;; WHEN v_compare BETWEEN &#39;97B0&#39; AND &#39;9878&#39; THEN v_return :&#x3D; v_return || &#39;Shu&#39;; WHEN v_compare BETWEEN &#39;987A&#39; AND &#39;987E&#39; THEN v_return :&#x3D; v_return || &#39;Shua&#39;; WHEN v_compare BETWEEN &#39;9880&#39; AND &#39;988A&#39; THEN v_return :&#x3D; v_return || &#39;Shuai&#39;; WHEN v_compare BETWEEN &#39;988C&#39; AND &#39;9894&#39; THEN v_return :&#x3D; v_return || &#39;Shuan&#39;; WHEN v_compare BETWEEN &#39;9895&#39; AND &#39;98BE&#39; THEN v_return :&#x3D; v_return || &#39;Shuang&#39;; WHEN v_compare BETWEEN &#39;98C0&#39; AND &#39;98D6&#39; THEN v_return :&#x3D; v_return || &#39;Shui&#39;; WHEN v_compare BETWEEN &#39;98DC&#39; AND &#39;98EE&#39; THEN v_return :&#x3D; v_return || &#39;Shun&#39;; WHEN v_compare BETWEEN &#39;98F1&#39; AND &#39;9911&#39; THEN v_return :&#x3D; v_return || &#39;Shuo&#39;; WHEN v_compare BETWEEN &#39;9912&#39; AND &#39;99AD&#39; THEN v_return :&#x3D; v_return || &#39;Si&#39;; WHEN v_compare &#x3D; &#39;99AE&#39; THEN v_return :&#x3D; v_return || &#39;So&#39;; WHEN v_compare &#x3D; &#39;99B0&#39; THEN v_return :&#x3D; v_return || &#39;Sol&#39;; WHEN v_compare BETWEEN &#39;99B1&#39; AND &#39;99F6&#39; THEN v_return :&#x3D; v_return || &#39;Song&#39;; WHEN v_compare BETWEEN &#39;99F8&#39; AND &#39;9A36&#39; THEN v_return :&#x3D; v_return || &#39;Sou&#39;; WHEN v_compare BETWEEN &#39;9A38&#39; AND &#39;9AB6&#39; THEN v_return :&#x3D; v_return || &#39;Su&#39;; WHEN v_compare BETWEEN &#39;9AB8&#39; AND &#39;9AC4&#39; THEN v_return :&#x3D; v_return || &#39;Suan&#39;; WHEN v_compare BETWEEN &#39;9AC5&#39; AND &#39;9B3A&#39; THEN v_return :&#x3D; v_return || &#39;Sui&#39;; WHEN v_compare &#x3D; &#39;9AF0&#39; THEN v_return :&#x3D; v_return || &#39;Wie&#39;; WHEN v_compare BETWEEN &#39;9B3C&#39; AND &#39;9B62&#39; THEN v_return :&#x3D; v_return || &#39;Sun&#39;; WHEN v_compare BETWEEN &#39;9B65&#39; AND &#39;9BA9&#39; THEN v_return :&#x3D; v_return || &#39;Suo&#39;; WHEN v_compare BETWEEN &#39;9BAA&#39; AND &#39;9C10&#39; THEN v_return :&#x3D; v_return || &#39;Ta&#39;; WHEN v_compare &#x3D; &#39;9C11&#39; THEN v_return :&#x3D; v_return || &#39;Tae&#39;; WHEN v_compare BETWEEN &#39;9C12&#39; AND &#39;9C59&#39; THEN v_return :&#x3D; v_return || &#39;Tai&#39;; WHEN v_compare BETWEEN &#39;9C5A&#39; AND &#39;9CE0&#39; THEN v_return :&#x3D; v_return || &#39;Tan&#39;; WHEN v_compare BETWEEN &#39;9CE2&#39; AND &#39;9D55&#39; THEN v_return :&#x3D; v_return || &#39;Tang&#39;; WHEN v_compare BETWEEN &#39;9D56&#39; AND &#39;9DB4&#39; THEN v_return :&#x3D; v_return || &#39;Tao&#39;; WHEN v_compare &#x3D; &#39;9DB6&#39; THEN v_return :&#x3D; v_return || &#39;Tap&#39;; WHEN v_compare BETWEEN &#39;9DB8&#39; AND &#39;9DC6&#39; THEN v_return :&#x3D; v_return || &#39;Te&#39;; WHEN v_compare BETWEEN &#39;9DC8&#39; AND &#39;9DED&#39; THEN v_return :&#x3D; v_return || &#39;Teng&#39;; WHEN v_compare &#x3D; &#39;9DEE&#39; THEN v_return :&#x3D; v_return || &#39;Teo&#39;; WHEN v_compare &#x3D; &#39;9DF0&#39; THEN v_return :&#x3D; v_return || &#39;Teul&#39;; WHEN v_compare BETWEEN &#39;9DF1&#39; AND &#39;9E82&#39; THEN v_return :&#x3D; v_return || &#39;Ti&#39;; WHEN v_compare BETWEEN &#39;9E85&#39; AND &#39;9EED&#39; THEN v_return :&#x3D; v_return || &#39;Tian&#39;; WHEN v_compare BETWEEN &#39;9EEE&#39; AND &#39;9F38&#39; THEN v_return :&#x3D; v_return || &#39;Tiao&#39;; WHEN v_compare BETWEEN &#39;9F39&#39; AND &#39;9F56&#39; THEN v_return :&#x3D; v_return || &#39;Tie&#39;; WHEN v_compare BETWEEN &#39;9F59&#39; AND &#39;9FAE&#39; THEN v_return :&#x3D; v_return || &#39;Ting&#39;; WHEN v_compare &#x3D; &#39;9FB0&#39; THEN v_return :&#x3D; v_return || &#39;Tol&#39;; WHEN v_compare BETWEEN &#39;9FB1&#39; AND &#39;A015&#39; THEN v_return :&#x3D; v_return || &#39;Tong&#39;; WHEN v_compare BETWEEN &#39;A016&#39; AND &#39;A03A&#39; THEN v_return :&#x3D; v_return || &#39;Tou&#39;; WHEN v_compare BETWEEN &#39;A040&#39; AND &#39;A0A9&#39; THEN v_return :&#x3D; v_return || &#39;Tu&#39;; WHEN v_compare BETWEEN &#39;A0AA&#39; AND &#39;A0D5&#39; THEN v_return :&#x3D; v_return || &#39;Tuan&#39;; WHEN v_compare BETWEEN &#39;A0D6&#39; AND &#39;A106&#39; THEN v_return :&#x3D; v_return || &#39;Tui&#39;; WHEN v_compare BETWEEN &#39;A108&#39; AND &#39;A131&#39; THEN v_return :&#x3D; v_return || &#39;Tun&#39;; WHEN v_compare BETWEEN &#39;A134&#39; AND &#39;A1AE&#39; THEN v_return :&#x3D; v_return || &#39;Tuo&#39;; WHEN v_compare BETWEEN &#39;A1B0&#39; AND &#39;A1E8&#39; THEN v_return :&#x3D; v_return || &#39;Wa&#39;; WHEN v_compare BETWEEN &#39;A1E9&#39; AND &#39;A1F5&#39; THEN v_return :&#x3D; v_return || &#39;Wai&#39;; WHEN v_compare BETWEEN &#39;A1F8&#39; AND &#39;A279&#39; THEN v_return :&#x3D; v_return || &#39;Wan&#39;; WHEN v_compare BETWEEN &#39;A27A&#39; AND &#39;A2B9&#39; THEN v_return :&#x3D; v_return || &#39;Wang&#39;; WHEN v_compare BETWEEN &#39;A2BC&#39; AND &#39;A408&#39; THEN v_return :&#x3D; v_return || &#39;Wei&#39;; WHEN v_compare BETWEEN &#39;A40D&#39; AND &#39;A47C&#39; THEN v_return :&#x3D; v_return || &#39;Wen&#39;; WHEN v_compare BETWEEN &#39;A47D&#39; AND &#39;A4A2&#39; THEN v_return :&#x3D; v_return || &#39;Weng&#39;; WHEN v_compare BETWEEN &#39;A4A4&#39; AND &#39;A4EA&#39; THEN v_return :&#x3D; v_return || &#39;Wo&#39;; WHEN v_compare BETWEEN &#39;A4EC&#39; AND &#39;A5D4&#39; THEN v_return :&#x3D; v_return || &#39;Wu&#39;; WHEN v_compare BETWEEN &#39;A5D6&#39; AND &#39;A784&#39; THEN v_return :&#x3D; v_return || &#39;Xi&#39;; WHEN v_compare BETWEEN &#39;A785&#39; AND &#39;A7FA&#39; THEN v_return :&#x3D; v_return || &#39;Xia&#39;; WHEN v_compare BETWEEN &#39;A7FD&#39; AND &#39;A951&#39; THEN v_return :&#x3D; v_return || &#39;Xian&#39;; WHEN v_compare BETWEEN &#39;A954&#39; AND &#39;A9CE&#39; THEN v_return :&#x3D; v_return || &#39;Xiang&#39;; WHEN v_compare BETWEEN &#39;A9D0&#39; AND &#39;AA8A&#39; THEN v_return :&#x3D; v_return || &#39;Xiao&#39;; WHEN v_compare BETWEEN &#39;AA8D&#39; AND &#39;AB7E&#39; THEN v_return :&#x3D; v_return || &#39;Xie&#39;; WHEN v_compare BETWEEN &#39;AB80&#39; AND &#39;ABEE&#39; THEN v_return :&#x3D; v_return || &#39;Xin&#39;; WHEN v_compare BETWEEN &#39;ABF0&#39; AND &#39;AC41&#39; THEN v_return :&#x3D; v_return || &#39;Xing&#39;; WHEN v_compare BETWEEN &#39;AC42&#39; AND &#39;AC64&#39; THEN v_return :&#x3D; v_return || &#39;Xiong&#39;; WHEN v_compare BETWEEN &#39;AC65&#39; AND &#39;ACBA&#39; THEN v_return :&#x3D; v_return || &#39;Xiu&#39;; WHEN v_compare BETWEEN &#39;ACBC&#39; AND &#39;AD90&#39; THEN v_return :&#x3D; v_return || &#39;Xu&#39;; WHEN v_compare &#x3D; &#39;ACD9&#39; THEN v_return :&#x3D; v_return || &#39;Chua&#39;; WHEN v_compare BETWEEN &#39;AD91&#39; AND &#39;AE32&#39; THEN v_return :&#x3D; v_return || &#39;Xuan&#39;; WHEN v_compare BETWEEN &#39;AE34&#39; AND &#39;AE89&#39; THEN v_return :&#x3D; v_return || &#39;Xue&#39;; WHEN v_compare BETWEEN &#39;AE8C&#39; AND &#39;AF1E&#39; THEN v_return :&#x3D; v_return || &#39;Xun&#39;; WHEN v_compare BETWEEN &#39;AF20&#39; AND &#39;AF96&#39; THEN v_return :&#x3D; v_return || &#39;Ya&#39;; WHEN v_compare BETWEEN &#39;AF98&#39; AND &#39;B118&#39; THEN v_return :&#x3D; v_return || &#39;Yan&#39;; WHEN v_compare &#x3D; &#39;B030&#39; THEN v_return :&#x3D; v_return || &#39;Eom&#39;; WHEN v_compare BETWEEN &#39;B11A&#39; AND &#39;B1A8&#39; THEN v_return :&#x3D; v_return || &#39;Yang&#39;; WHEN v_compare BETWEEN &#39;B1AD&#39; AND &#39;B275&#39; THEN v_return :&#x3D; v_return || &#39;Yao&#39;; WHEN v_compare BETWEEN &#39;B276&#39; AND &#39;B30A&#39; THEN v_return :&#x3D; v_return || &#39;Ye&#39;; WHEN v_compare BETWEEN &#39;B30D&#39; AND &#39;B30E&#39; THEN v_return :&#x3D; v_return || &#39;Yen&#39;; WHEN v_compare BETWEEN &#39;B310&#39; AND &#39;B594&#39; THEN v_return :&#x3D; v_return || &#39;Yi&#39;; WHEN v_compare &#x3D; &#39;B359&#39; THEN v_return :&#x3D; v_return || &#39;I&#39;; WHEN v_compare BETWEEN &#39;B596&#39; AND &#39;B684&#39; THEN v_return :&#x3D; v_return || &#39;Yin&#39;; WHEN v_compare BETWEEN &#39;B685&#39; AND &#39;B768&#39; THEN v_return :&#x3D; v_return || &#39;Ying&#39;; WHEN v_compare BETWEEN &#39;B76C&#39; AND &#39;B76E&#39; THEN v_return :&#x3D; v_return || &#39;Yo&#39;; WHEN v_compare BETWEEN &#39;B770&#39; AND &#39;B7EA&#39; THEN v_return :&#x3D; v_return || &#39;Yong&#39;; WHEN v_compare BETWEEN &#39;B7EC&#39; AND &#39;B8B2&#39; THEN v_return :&#x3D; v_return || &#39;You&#39;; WHEN v_compare BETWEEN &#39;B8B5&#39; AND &#39;BA98&#39; THEN v_return :&#x3D; v_return || &#39;Yu&#39;; WHEN v_compare BETWEEN &#39;BA99&#39; AND &#39;BB58&#39; THEN v_return :&#x3D; v_return || &#39;Yuan&#39;; WHEN v_compare BETWEEN &#39;BB59&#39; AND &#39;BBBE&#39; THEN v_return :&#x3D; v_return || &#39;Yue&#39;; WHEN v_compare BETWEEN &#39;BBC1&#39; AND &#39;BC58&#39; THEN v_return :&#x3D; v_return || &#39;Yun&#39;; WHEN v_compare BETWEEN &#39;BC59&#39; AND &#39;BC7E&#39; THEN v_return :&#x3D; v_return || &#39;Za&#39;; WHEN v_compare BETWEEN &#39;BC81&#39; AND &#39;BCA8&#39; THEN v_return :&#x3D; v_return || &#39;Zai&#39;; WHEN v_compare BETWEEN &#39;BCAA&#39; AND &#39;BCEA&#39; THEN v_return :&#x3D; v_return || &#39;Zan&#39;; WHEN v_compare BETWEEN &#39;BCEE&#39; AND &#39;BD0A&#39; THEN v_return :&#x3D; v_return || &#39;Zang&#39;; WHEN v_compare BETWEEN &#39;BD0C&#39; AND &#39;BD46&#39; THEN v_return :&#x3D; v_return || &#39;Zao&#39;; WHEN v_compare BETWEEN &#39;BD48&#39; AND &#39;BD99&#39; THEN v_return :&#x3D; v_return || &#39;Ze&#39;; WHEN v_compare BETWEEN &#39;BD9A&#39; AND &#39;BDA2&#39; THEN v_return :&#x3D; v_return || &#39;Zei&#39;; WHEN v_compare BETWEEN &#39;BDA5&#39; AND &#39;BDAC&#39; THEN v_return :&#x3D; v_return || &#39;Zen&#39;; WHEN v_compare BETWEEN &#39;BDAD&#39; AND &#39;BDCC&#39; THEN v_return :&#x3D; v_return || &#39;Zeng&#39;; WHEN v_compare BETWEEN &#39;BDCE&#39; AND &#39;BE40&#39; THEN v_return :&#x3D; v_return || &#39;Zha&#39;; WHEN v_compare &#x3D; &#39;BDF8&#39; THEN v_return :&#x3D; v_return || &#39;Gad&#39;; WHEN v_compare BETWEEN &#39;BE41&#39; AND &#39;BE62&#39; THEN v_return :&#x3D; v_return || &#39;Zhai&#39;; WHEN v_compare BETWEEN &#39;BE65&#39; AND &#39;BEF4&#39; THEN v_return :&#x3D; v_return || &#39;Zhan&#39;; WHEN v_compare BETWEEN &#39;BEF6&#39; AND &#39;BF3E&#39; THEN v_return :&#x3D; v_return || &#39;Zhang&#39;; WHEN v_compare BETWEEN &#39;BF40&#39; AND &#39;BF8C&#39; THEN v_return :&#x3D; v_return || &#39;Zhao&#39;; WHEN v_compare BETWEEN &#39;BF8E&#39; AND &#39;BFF8&#39; THEN v_return :&#x3D; v_return || &#39;Zhe&#39;; WHEN v_compare BETWEEN &#39;BFF9&#39; AND &#39;C0B2&#39; THEN v_return :&#x3D; v_return || &#39;Zhen&#39;; WHEN v_compare BETWEEN &#39;C0B4&#39; AND &#39;C11E&#39; THEN v_return :&#x3D; v_return || &#39;Zheng&#39;; WHEN v_compare BETWEEN &#39;C122&#39; AND &#39;C2C4&#39; THEN v_return :&#x3D; v_return || &#39;Zhi&#39;; WHEN v_compare BETWEEN &#39;C2C5&#39; AND &#39;C31A&#39; THEN v_return :&#x3D; v_return || &#39;Zhong&#39;; WHEN v_compare BETWEEN &#39;C31D&#39; AND &#39;C39A&#39; THEN v_return :&#x3D; v_return || &#39;Zhou&#39;; WHEN v_compare BETWEEN &#39;C39C&#39; AND &#39;C47C&#39; THEN v_return :&#x3D; v_return || &#39;Zhu&#39;; WHEN v_compare BETWEEN &#39;C47D&#39; AND &#39;C484&#39; THEN v_return :&#x3D; v_return || &#39;Zhua&#39;; WHEN v_compare BETWEEN &#39;C485&#39; AND &#39;C486&#39; THEN v_return :&#x3D; v_return || &#39;Zhuai&#39;; WHEN v_compare BETWEEN &#39;C488&#39; AND &#39;C4C0&#39; THEN v_return :&#x3D; v_return || &#39;Zhuan&#39;; WHEN v_compare BETWEEN &#39;C4C2&#39; AND &#39;C4E5&#39; THEN v_return :&#x3D; v_return || &#39;Zhuang&#39;; WHEN v_compare BETWEEN &#39;C4E6&#39; AND &#39;C51C&#39; THEN v_return :&#x3D; v_return || &#39;Zhui&#39;; WHEN v_compare BETWEEN &#39;C51D&#39; AND &#39;C530&#39; THEN v_return :&#x3D; v_return || &#39;Zhun&#39;; WHEN v_compare BETWEEN &#39;C534&#39; AND &#39;C5A5&#39; THEN v_return :&#x3D; v_return || &#39;Zhuo&#39;; WHEN v_compare BETWEEN &#39;C5A8&#39; AND &#39;C648&#39; THEN v_return :&#x3D; v_return || &#39;Zi&#39;; WHEN v_compare &#x3D; &#39;C64A&#39; THEN v_return :&#x3D; v_return || &#39;Zo&#39;; WHEN v_compare BETWEEN &#39;C64C&#39; AND &#39;C6B5&#39; THEN v_return :&#x3D; v_return || &#39;Zong&#39;; WHEN v_compare BETWEEN &#39;C6B6&#39; AND &#39;C6D6&#39; THEN v_return :&#x3D; v_return || &#39;Zou&#39;; WHEN v_compare BETWEEN &#39;C6E1&#39; AND &#39;C714&#39; THEN v_return :&#x3D; v_return || &#39;Zu&#39;; WHEN v_compare BETWEEN &#39;C715&#39; AND &#39;C72D&#39; THEN v_return :&#x3D; v_return || &#39;Zuan&#39;; WHEN v_compare BETWEEN &#39;C72E&#39; AND &#39;C75E&#39; THEN v_return :&#x3D; v_return || &#39;Zui&#39;; WHEN v_compare BETWEEN &#39;C760&#39; AND &#39;C776&#39; THEN v_return :&#x3D; v_return || &#39;Zun&#39;; WHEN v_compare BETWEEN &#39;C77A&#39; AND &#39;C7B4&#39; THEN v_return :&#x3D; v_return || &#39;Zuo&#39;; ELSE v_return :&#x3D; v_return || v_substr; END CASE; END LOOP; WHEN 3 THEN --首字母小写 FOR i IN 1 .. v_length LOOP v_substr :&#x3D; SUBSTR (p_str, i, 1); v_compare :&#x3D; fn_nlssort (v_substr); CASE WHEN v_compare BETWEEN &#39;3B29&#39; AND &#39;3C82&#39; THEN v_return :&#x3D; v_return || &#39;a&#39;; WHEN v_compare BETWEEN &#39;3C84&#39; AND &#39;427C&#39; THEN v_return :&#x3D; v_return || &#39;b&#39;; WHEN v_compare BETWEEN &#39;427D&#39; AND &#39;4BA9&#39; THEN v_return :&#x3D; v_return || &#39;c&#39;; WHEN v_compare BETWEEN &#39;4BAD&#39; AND &#39;5200&#39; THEN v_return :&#x3D; v_return || &#39;d&#39;; WHEN v_compare BETWEEN &#39;5205&#39; AND &#39;5332&#39; THEN v_return :&#x3D; v_return || &#39;e&#39;; WHEN v_compare BETWEEN &#39;5334&#39; AND &#39;5739&#39; THEN v_return :&#x3D; v_return || &#39;f&#39;; WHEN v_compare BETWEEN &#39;573C&#39; AND &#39;5CB6&#39; THEN v_return :&#x3D; v_return || &#39;g&#39;; WHEN v_compare BETWEEN &#39;5CB8&#39; AND &#39;63FA&#39; THEN v_return :&#x3D; v_return || &#39;h&#39;; WHEN v_compare &#x3D; &#39;B359&#39; THEN v_return :&#x3D; v_return || &#39;i&#39;; WHEN v_compare BETWEEN &#39;63FE&#39; AND &#39;6E85&#39; THEN v_return :&#x3D; v_return || &#39;j&#39;; WHEN v_compare BETWEEN &#39;5BC8&#39; AND &#39;7226&#39; THEN v_return :&#x3D; v_return || &#39;k&#39;; WHEN v_compare BETWEEN &#39;722C&#39; AND &#39;7C98&#39; THEN v_return :&#x3D; v_return || &#39;l&#39;; WHEN v_compare BETWEEN &#39;569D&#39; AND &#39;821E&#39; THEN v_return :&#x3D; v_return || &#39;m&#39;; WHEN v_compare BETWEEN &#39;8224&#39; AND &#39;8574&#39; THEN v_return :&#x3D; v_return || &#39;n&#39;; WHEN v_compare BETWEEN &#39;8575&#39; AND &#39;85AE&#39; THEN v_return :&#x3D; v_return || &#39;o&#39;; WHEN v_compare BETWEEN &#39;85B1&#39; AND &#39;89C4&#39; THEN v_return :&#x3D; v_return || &#39;p&#39;; WHEN v_compare BETWEEN &#39;7E0C&#39; AND &#39;90AA&#39; THEN v_return :&#x3D; v_return || &#39;q&#39;; WHEN v_compare BETWEEN &#39;90B0&#39; AND &#39;92E4&#39; THEN v_return :&#x3D; v_return || &#39;r&#39;; WHEN v_compare BETWEEN &#39;92E5&#39; AND &#39;9BA9&#39; THEN v_return :&#x3D; v_return || &#39;s&#39;; WHEN v_compare BETWEEN &#39;5160&#39; AND &#39;A1AE&#39; THEN v_return :&#x3D; v_return || &#39;t&#39;; WHEN v_compare BETWEEN &#39;9AF0&#39; AND &#39;A5D4&#39; THEN v_return :&#x3D; v_return || &#39;w&#39;; WHEN v_compare BETWEEN &#39;A5D6&#39; AND &#39;AF1E&#39; THEN v_return :&#x3D; v_return || &#39;x&#39;; WHEN v_compare BETWEEN &#39;AF20&#39; AND &#39;BC58&#39; THEN v_return :&#x3D; v_return || &#39;y&#39;; WHEN v_compare BETWEEN &#39;BC59&#39; AND &#39;C7B4&#39; THEN v_return :&#x3D; v_return || &#39;z&#39;; ELSE v_return :&#x3D; v_return || v_substr; END CASE; END LOOP; WHEN 4 THEN --首字母大写 FOR i IN 1 .. v_length LOOP v_substr :&#x3D; SUBSTR (p_str, i, 1); v_compare :&#x3D; fn_nlssort (v_substr); CASE WHEN v_compare BETWEEN &#39;3B29&#39; AND &#39;3C82&#39; THEN v_return :&#x3D; v_return || &#39;A&#39;; WHEN v_compare BETWEEN &#39;3C84&#39; AND &#39;427C&#39; THEN v_return :&#x3D; v_return || &#39;B&#39;; WHEN v_compare BETWEEN &#39;427D&#39; AND &#39;4BA9&#39; THEN v_return :&#x3D; v_return || &#39;C&#39;; WHEN v_compare BETWEEN &#39;4BAD&#39; AND &#39;5200&#39; THEN v_return :&#x3D; v_return || &#39;D&#39;; WHEN v_compare BETWEEN &#39;5205&#39; AND &#39;5332&#39; THEN v_return :&#x3D; v_return || &#39;E&#39;; WHEN v_compare BETWEEN &#39;5334&#39; AND &#39;5739&#39; THEN v_return :&#x3D; v_return || &#39;F&#39;; WHEN v_compare BETWEEN &#39;573C&#39; AND &#39;5CB6&#39; THEN v_return :&#x3D; v_return || &#39;G&#39;; WHEN v_compare BETWEEN &#39;5CB8&#39; AND &#39;63FA&#39; THEN v_return :&#x3D; v_return || &#39;H&#39;; WHEN v_compare &#x3D; &#39;B359&#39; THEN v_return :&#x3D; v_return || &#39;I&#39;; WHEN v_compare BETWEEN &#39;63FE&#39; AND &#39;6E85&#39; THEN v_return :&#x3D; v_return || &#39;J&#39;; WHEN v_compare BETWEEN &#39;5BC8&#39; AND &#39;7226&#39; THEN v_return :&#x3D; v_return || &#39;K&#39;; WHEN v_compare BETWEEN &#39;722C&#39; AND &#39;7C98&#39; THEN v_return :&#x3D; v_return || &#39;L&#39;; WHEN v_compare BETWEEN &#39;569D&#39; AND &#39;821E&#39; THEN v_return :&#x3D; v_return || &#39;M&#39;; WHEN v_compare BETWEEN &#39;8224&#39; AND &#39;8574&#39; THEN v_return :&#x3D; v_return || &#39;N&#39;; WHEN v_compare BETWEEN &#39;8575&#39; AND &#39;85AE&#39; THEN v_return :&#x3D; v_return || &#39;O&#39;; WHEN v_compare BETWEEN &#39;85B1&#39; AND &#39;89C4&#39; THEN v_return :&#x3D; v_return || &#39;P&#39;; WHEN v_compare BETWEEN &#39;7E0C&#39; AND &#39;90AA&#39; THEN v_return :&#x3D; v_return || &#39;Q&#39;; WHEN v_compare BETWEEN &#39;90B0&#39; AND &#39;92E4&#39; THEN v_return :&#x3D; v_return || &#39;R&#39;; WHEN v_compare BETWEEN &#39;92E5&#39; AND &#39;9BA9&#39; THEN v_return :&#x3D; v_return || &#39;S&#39;; WHEN v_compare BETWEEN &#39;5160&#39; AND &#39;A1AE&#39; THEN v_return :&#x3D; v_return || &#39;T&#39;; WHEN v_compare BETWEEN &#39;9AF0&#39; AND &#39;A5D4&#39; THEN v_return :&#x3D; v_return || &#39;W&#39;; WHEN v_compare BETWEEN &#39;A5D6&#39; AND &#39;AF1E&#39; THEN v_return :&#x3D; v_return || &#39;X&#39;; WHEN v_compare BETWEEN &#39;AF20&#39; AND &#39;BC58&#39; THEN v_return :&#x3D; v_return || &#39;Y&#39;; WHEN v_compare BETWEEN &#39;BC59&#39; AND &#39;C7B4&#39; THEN v_return :&#x3D; v_return || &#39;Z&#39;; ELSE v_return :&#x3D; v_return || v_substr; END CASE; END LOOP; ELSE --全拼小写 FOR i IN 1 .. v_length LOOP v_substr :&#x3D; SUBSTR (p_str, i, 1); v_compare :&#x3D; fn_nlssort (v_substr); CASE WHEN v_compare BETWEEN &#39;3B29&#39; AND &#39;3B30&#39; THEN v_return :&#x3D; v_return || &#39;a&#39;; WHEN v_compare &#x3D; &#39;3B31&#39; THEN v_return :&#x3D; v_return || &#39;aes&#39;; WHEN v_compare BETWEEN &#39;3B32&#39; AND &#39;3B9E&#39; THEN v_return :&#x3D; v_return || &#39;ai&#39;; WHEN v_compare BETWEEN &#39;3BA0&#39; AND &#39;3BFE&#39; THEN v_return :&#x3D; v_return || &#39;an&#39;; WHEN v_compare BETWEEN &#39;3C01&#39; AND &#39;3C14&#39; THEN v_return :&#x3D; v_return || &#39;ang&#39;; WHEN v_compare BETWEEN &#39;3C15&#39; AND &#39;3C82&#39; THEN v_return :&#x3D; v_return || &#39;ao&#39;; WHEN v_compare BETWEEN &#39;3C84&#39; AND &#39;3CE9&#39; THEN v_return :&#x3D; v_return || &#39;ba&#39;; WHEN v_compare BETWEEN &#39;3CED&#39; AND &#39;3D1D&#39; THEN v_return :&#x3D; v_return || &#39;bai&#39;; WHEN v_compare BETWEEN &#39;3D20&#39; AND &#39;3D64&#39; THEN v_return :&#x3D; v_return || &#39;ban&#39;; WHEN v_compare BETWEEN &#39;3D66&#39; AND &#39;3DA2&#39; THEN v_return :&#x3D; v_return || &#39;bang&#39;; WHEN v_compare BETWEEN &#39;3DA4&#39; AND &#39;3E10&#39; THEN v_return :&#x3D; v_return || &#39;bao&#39;; WHEN v_compare &#x3D; &#39;3E11&#39; THEN v_return :&#x3D; v_return || &#39;be&#39;; WHEN v_compare BETWEEN &#39;3E12&#39; AND &#39;3E7A&#39; THEN v_return :&#x3D; v_return || &#39;bei&#39;; WHEN v_compare BETWEEN &#39;3E7C&#39; AND &#39;3EA0&#39; THEN v_return :&#x3D; v_return || &#39;ben&#39;; WHEN v_compare BETWEEN &#39;3EA1&#39; AND &#39;3ED5&#39; THEN v_return :&#x3D; v_return || &#39;beng&#39;; WHEN v_compare BETWEEN &#39;3ED8&#39; AND &#39;3FE9&#39; THEN v_return :&#x3D; v_return || &#39;bi&#39;; WHEN v_compare BETWEEN &#39;3FEA&#39; AND &#39;4055&#39; THEN v_return :&#x3D; v_return || &#39;bian&#39;; WHEN v_compare BETWEEN &#39;4058&#39; AND &#39;40AE&#39; THEN v_return :&#x3D; v_return || &#39;biao&#39;; WHEN v_compare &#x3D; &#39;4060&#39; THEN v_return :&#x3D; v_return || &#39;bia&#39;; WHEN v_compare BETWEEN &#39;40B4&#39; AND &#39;40D4&#39; THEN v_return :&#x3D; v_return || &#39;bie&#39;; WHEN v_compare BETWEEN &#39;40D6&#39; AND &#39;4116&#39; THEN v_return :&#x3D; v_return || &#39;bin&#39;; WHEN v_compare BETWEEN &#39;4118&#39; AND &#39;4160&#39; THEN v_return :&#x3D; v_return || &#39;bing&#39;; WHEN v_compare BETWEEN &#39;4161&#39; AND &#39;4224&#39; THEN v_return :&#x3D; v_return || &#39;bo&#39;; WHEN v_compare BETWEEN &#39;4225&#39; AND &#39;427C&#39; THEN v_return :&#x3D; v_return || &#39;bu&#39;; WHEN v_compare BETWEEN &#39;427D&#39; AND &#39;4289&#39; THEN v_return :&#x3D; v_return || &#39;ca&#39;; WHEN v_compare BETWEEN &#39;428C&#39; AND &#39;42B5&#39; THEN v_return :&#x3D; v_return || &#39;cai&#39;; WHEN v_compare BETWEEN &#39;42B9&#39; AND &#39;430C&#39; THEN v_return :&#x3D; v_return || &#39;can&#39;; WHEN v_compare BETWEEN &#39;430D&#39; AND &#39;4334&#39; THEN v_return :&#x3D; v_return || &#39;cang&#39;; WHEN v_compare BETWEEN &#39;4335&#39; AND &#39;435C&#39; THEN v_return :&#x3D; v_return || &#39;cao&#39;; WHEN v_compare BETWEEN &#39;435D&#39; AND &#39;438C&#39; THEN v_return :&#x3D; v_return || &#39;ce&#39;; WHEN v_compare BETWEEN &#39;4390&#39; AND &#39;4398&#39; THEN v_return :&#x3D; v_return || &#39;cen&#39;; WHEN v_compare BETWEEN &#39;439D&#39; AND &#39;43AA&#39; THEN v_return :&#x3D; v_return || &#39;ceng&#39;; WHEN v_compare &#x3D; &#39;43AC&#39; THEN v_return :&#x3D; v_return || &#39;ceok&#39;; WHEN v_compare &#x3D; &#39;43AE&#39; THEN v_return :&#x3D; v_return || &#39;ceom&#39;; WHEN v_compare &#x3D; &#39;43B0&#39; THEN v_return :&#x3D; v_return || &#39;ceon&#39;; WHEN v_compare &#x3D; &#39;43B1&#39; THEN v_return :&#x3D; v_return || &#39;ceor&#39;; WHEN v_compare BETWEEN &#39;43B2&#39; AND &#39;440A&#39; THEN v_return :&#x3D; v_return || &#39;cha&#39;; WHEN v_compare BETWEEN &#39;440E&#39; AND &#39;442D&#39; THEN v_return :&#x3D; v_return || &#39;chai&#39;; WHEN v_compare BETWEEN &#39;4431&#39; AND &#39;44E1&#39; THEN v_return :&#x3D; v_return || &#39;chan&#39;; WHEN v_compare BETWEEN &#39;44E4&#39; AND &#39;4552&#39; THEN v_return :&#x3D; v_return || &#39;chang&#39;; WHEN v_compare BETWEEN &#39;4554&#39; AND &#39;458E&#39; THEN v_return :&#x3D; v_return || &#39;chao&#39;; WHEN v_compare BETWEEN &#39;4590&#39; AND &#39;45C8&#39; THEN v_return :&#x3D; v_return || &#39;che&#39;; WHEN v_compare BETWEEN &#39;45C9&#39; AND &#39;463D&#39; THEN v_return :&#x3D; v_return || &#39;chen&#39;; WHEN v_compare BETWEEN &#39;463E&#39; AND &#39;46CD&#39; THEN v_return :&#x3D; v_return || &#39;cheng&#39;; WHEN v_compare BETWEEN &#39;46CE&#39; AND &#39;47A6&#39; THEN v_return :&#x3D; v_return || &#39;chi&#39;; WHEN v_compare BETWEEN &#39;47A8&#39; AND &#39;47EC&#39; THEN v_return :&#x3D; v_return || &#39;chong&#39;; WHEN v_compare BETWEEN &#39;47ED&#39; AND &#39;484C&#39; THEN v_return :&#x3D; v_return || &#39;chou&#39;; WHEN v_compare BETWEEN &#39;484D&#39; AND &#39;48E2&#39; THEN v_return :&#x3D; v_return || &#39;chu&#39;; WHEN v_compare BETWEEN &#39;48E9&#39; AND &#39;48F4&#39; THEN v_return :&#x3D; v_return || &#39;chuai&#39;; WHEN v_compare BETWEEN &#39;48F6&#39; AND &#39;4924&#39; THEN v_return :&#x3D; v_return || &#39;chuan&#39;; WHEN v_compare BETWEEN &#39;4925&#39; AND &#39;4951&#39; THEN v_return :&#x3D; v_return || &#39;chuang&#39;; WHEN v_compare BETWEEN &#39;4954&#39; AND &#39;496E&#39; THEN v_return :&#x3D; v_return || &#39;chui&#39;; WHEN v_compare BETWEEN &#39;4971&#39; AND &#39;49C6&#39; THEN v_return :&#x3D; v_return || &#39;chun&#39;; WHEN v_compare BETWEEN &#39;49C8&#39; AND &#39;49EA&#39; THEN v_return :&#x3D; v_return || &#39;chuo&#39;; WHEN v_compare BETWEEN &#39;49EC&#39; AND &#39;4A4A&#39; THEN v_return :&#x3D; v_return || &#39;ci&#39;; WHEN v_compare &#x3D; &#39;4A50&#39; THEN v_return :&#x3D; v_return || &#39;cis&#39;; WHEN v_compare BETWEEN &#39;4A51&#39; AND &#39;4AB2&#39; THEN v_return :&#x3D; v_return || &#39;cong&#39;; WHEN v_compare BETWEEN &#39;4AB4&#39; AND &#39;4ABA&#39; THEN v_return :&#x3D; v_return || &#39;cou&#39;; WHEN v_compare BETWEEN &#39;4ABC&#39; AND &#39;4AEA&#39; THEN v_return :&#x3D; v_return || &#39;cu&#39;; WHEN v_compare BETWEEN &#39;4AEE&#39; AND &#39;4B0C&#39; THEN v_return :&#x3D; v_return || &#39;cuan&#39;; WHEN v_compare BETWEEN &#39;4B0D&#39; AND &#39;4B56&#39; THEN v_return :&#x3D; v_return || &#39;cui&#39;; WHEN v_compare BETWEEN &#39;4B59&#39; AND &#39;4B6C&#39; THEN v_return :&#x3D; v_return || &#39;cun&#39;; WHEN v_compare BETWEEN &#39;4B70&#39; AND &#39;4BA9&#39; THEN v_return :&#x3D; v_return || &#39;cuo&#39;; WHEN v_compare BETWEEN &#39;4BAD&#39; AND &#39;4BFE&#39; THEN v_return :&#x3D; v_return || &#39;da&#39;; WHEN v_compare BETWEEN &#39;4C00&#39; AND &#39;4C4E&#39; THEN v_return :&#x3D; v_return || &#39;dai&#39;; WHEN v_compare BETWEEN &#39;4C50&#39; AND &#39;4CDC&#39; THEN v_return :&#x3D; v_return || &#39;dan&#39;; WHEN v_compare BETWEEN &#39;4CDE&#39; AND &#39;4D26&#39; THEN v_return :&#x3D; v_return || &#39;dang&#39;; WHEN v_compare BETWEEN &#39;4D28&#39; AND &#39;4D76&#39; THEN v_return :&#x3D; v_return || &#39;dao&#39;; WHEN v_compare BETWEEN &#39;4D7E&#39; AND &#39;4D8D&#39; THEN v_return :&#x3D; v_return || &#39;de&#39;; WHEN v_compare &#x3D; &#39;4D8E&#39; THEN v_return :&#x3D; v_return || &#39;dem&#39;; WHEN v_compare BETWEEN &#39;4D90&#39; AND &#39;4D91&#39; THEN v_return :&#x3D; v_return || &#39;den&#39;; WHEN v_compare BETWEEN &#39;4D94&#39; AND &#39;4DC0&#39; THEN v_return :&#x3D; v_return || &#39;deng&#39;; WHEN v_compare BETWEEN &#39;4DC4&#39; AND &#39;4E8A&#39; THEN v_return :&#x3D; v_return || &#39;di&#39;; WHEN v_compare &#x3D; &#39;4E8C&#39; THEN v_return :&#x3D; v_return || &#39;dia&#39;; WHEN v_compare BETWEEN &#39;4E8D&#39; AND &#39;4EE8&#39; THEN v_return :&#x3D; v_return || &#39;dian&#39;; WHEN v_compare BETWEEN &#39;4EE9&#39; AND &#39;4F38&#39; THEN v_return :&#x3D; v_return || &#39;diao&#39;; WHEN v_compare BETWEEN &#39;4F39&#39; AND &#39;4F90&#39; THEN v_return :&#x3D; v_return || &#39;die&#39;; WHEN v_compare &#x3D; &#39;4F8D&#39; THEN v_return :&#x3D; v_return || &#39;dei&#39;; WHEN v_compare &#x3D; &#39;4F91&#39; THEN v_return :&#x3D; v_return || &#39;dim&#39;; WHEN v_compare BETWEEN &#39;4F92&#39; AND &#39;4FCD&#39; THEN v_return :&#x3D; v_return || &#39;ding&#39;; WHEN v_compare BETWEEN &#39;4FCD&#39; AND &#39;4FD4&#39; THEN v_return :&#x3D; v_return || &#39;diu&#39;; WHEN v_compare BETWEEN &#39;4FD5&#39; AND &#39;5032&#39; THEN v_return :&#x3D; v_return || &#39;dong&#39;; WHEN v_compare BETWEEN &#39;5034&#39; AND &#39;507C&#39; THEN v_return :&#x3D; v_return || &#39;dou&#39;; WHEN v_compare &#x3D; &#39;5044&#39; THEN v_return :&#x3D; v_return || &#39;dul&#39;; WHEN v_compare BETWEEN &#39;507E&#39; AND &#39;50E9&#39; THEN v_return :&#x3D; v_return || &#39;du&#39;; WHEN v_compare BETWEEN &#39;50EA&#39; AND &#39;5110&#39; THEN v_return :&#x3D; v_return || &#39;duan&#39;; WHEN v_compare BETWEEN &#39;5114&#39; AND &#39;514E&#39; THEN v_return :&#x3D; v_return || &#39;dui&#39;; WHEN v_compare BETWEEN &#39;5152&#39; AND &#39;518D&#39; THEN v_return :&#x3D; v_return || &#39;dun&#39;; WHEN v_compare &#x3D; &#39;5160&#39; THEN v_return :&#x3D; v_return || &#39;ton&#39;; WHEN v_compare BETWEEN &#39;518E&#39; AND &#39;5200&#39; THEN v_return :&#x3D; v_return || &#39;duo&#39;; WHEN v_compare BETWEEN &#39;5205&#39; AND &#39;52C2&#39; THEN v_return :&#x3D; v_return || &#39;e&#39;; WHEN v_compare BETWEEN &#39;52C4&#39; AND &#39;52CD&#39; THEN v_return :&#x3D; v_return || &#39;en&#39;; WHEN v_compare &#x3D; &#39;52D4&#39; THEN v_return :&#x3D; v_return || &#39;eng&#39;; WHEN v_compare &#x3D; &#39;52D5&#39; THEN v_return :&#x3D; v_return || &#39;eo&#39;; WHEN v_compare &#x3D; &#39;52D6&#39; THEN v_return :&#x3D; v_return || &#39;eol&#39;; WHEN v_compare &#x3D; &#39;52D8&#39; THEN v_return :&#x3D; v_return || &#39;eos&#39;; WHEN v_compare BETWEEN &#39;52D9&#39; AND &#39;5332&#39; THEN v_return :&#x3D; v_return || &#39;er&#39;; WHEN v_compare BETWEEN &#39;5334&#39; AND &#39;5366&#39; THEN v_return :&#x3D; v_return || &#39;fa&#39;; WHEN v_compare BETWEEN &#39;536A&#39; AND &#39;53FA&#39; THEN v_return :&#x3D; v_return || &#39;fan&#39;; WHEN v_compare BETWEEN &#39;53FD&#39; AND &#39;5438&#39; THEN v_return :&#x3D; v_return || &#39;fang&#39;; WHEN v_compare BETWEEN &#39;5439&#39; AND &#39;54B2&#39; THEN v_return :&#x3D; v_return || &#39;fei&#39;; WHEN v_compare BETWEEN &#39;54B4&#39; AND &#39;5528&#39; THEN v_return :&#x3D; v_return || &#39;fen&#39;; WHEN v_compare BETWEEN &#39;5529&#39; AND &#39;55A9&#39; THEN v_return :&#x3D; v_return || &#39;feng&#39;; WHEN v_compare BETWEEN &#39;55AA&#39; AND &#39;55AE&#39; THEN v_return :&#x3D; v_return || &#39;fo&#39;; WHEN v_compare BETWEEN &#39;55B1&#39; AND &#39;55BC&#39; THEN v_return :&#x3D; v_return || &#39;fou&#39;; WHEN v_compare BETWEEN &#39;55BD&#39; AND &#39;5739&#39; THEN v_return :&#x3D; v_return || &#39;fu&#39;; WHEN v_compare &#x3D; &#39;569D&#39; THEN v_return :&#x3D; v_return || &#39;m&#39;; WHEN v_compare BETWEEN &#39;573C&#39; AND &#39;574C&#39; THEN v_return :&#x3D; v_return || &#39;ga&#39;; WHEN v_compare BETWEEN &#39;574D&#39; AND &#39;578C&#39; THEN v_return :&#x3D; v_return || &#39;gai&#39;; WHEN v_compare BETWEEN &#39;578D&#39; AND &#39;57F0&#39; THEN v_return :&#x3D; v_return || &#39;gan&#39;; WHEN v_compare BETWEEN &#39;57F1&#39; AND &#39;582C&#39; THEN v_return :&#x3D; v_return || &#39;gang&#39;; WHEN v_compare BETWEEN &#39;582E&#39; AND &#39;5884&#39; THEN v_return :&#x3D; v_return || &#39;gao&#39;; WHEN v_compare BETWEEN &#39;5885&#39; AND &#39;5905&#39; THEN v_return :&#x3D; v_return || &#39;ge&#39;; WHEN v_compare &#x3D; &#39;5906&#39; THEN v_return :&#x3D; v_return || &#39;gei&#39;; WHEN v_compare BETWEEN &#39;5909&#39; AND &#39;5915&#39; THEN v_return :&#x3D; v_return || &#39;gen&#39;; WHEN v_compare BETWEEN &#39;5918&#39; AND &#39;594E&#39; THEN v_return :&#x3D; v_return || &#39;geng&#39;; WHEN v_compare &#x3D; &#39;5956&#39; THEN v_return :&#x3D; v_return || &#39;gib&#39;; WHEN v_compare &#x3D; &#39;5958&#39; THEN v_return :&#x3D; v_return || &#39;go&#39;; WHEN v_compare BETWEEN &#39;5959&#39; AND &#39;59BA&#39; THEN v_return :&#x3D; v_return || &#39;gong&#39;; WHEN v_compare BETWEEN &#39;59BD&#39; AND &#39;5A0E&#39; THEN v_return :&#x3D; v_return || &#39;gou&#39;; WHEN v_compare BETWEEN &#39;5A10&#39; AND &#39;5AB2&#39; THEN v_return :&#x3D; v_return || &#39;gu&#39;; WHEN v_compare BETWEEN &#39;5AB4&#39; AND &#39;5AE8&#39; THEN v_return :&#x3D; v_return || &#39;gua&#39;; WHEN v_compare BETWEEN &#39;5AE9&#39; AND &#39;5AF8&#39; THEN v_return :&#x3D; v_return || &#39;guai&#39;; WHEN v_compare BETWEEN &#39;5AFD&#39; AND &#39;5B5E&#39; THEN v_return :&#x3D; v_return || &#39;guan&#39;; WHEN v_compare BETWEEN &#39;5B60&#39; AND &#39;5B8C&#39; THEN v_return :&#x3D; v_return || &#39;guang&#39;; WHEN v_compare BETWEEN &#39;5B8D&#39; AND &#39;5C2E&#39; THEN v_return :&#x3D; v_return || &#39;gui&#39;; WHEN v_compare &#x3D; &#39;5BC8&#39; THEN v_return :&#x3D; v_return || &#39;kwi&#39;; WHEN v_compare BETWEEN &#39;5C30&#39; AND &#39;5C58&#39; THEN v_return :&#x3D; v_return || &#39;gun&#39;; WHEN v_compare BETWEEN &#39;5C51&#39; AND &#39;5CB6&#39; THEN v_return :&#x3D; v_return || &#39;guo&#39;; WHEN v_compare BETWEEN &#39;5CB8&#39; AND &#39;5CBD&#39; THEN v_return :&#x3D; v_return || &#39;ha&#39;; WHEN v_compare BETWEEN &#39;5CC6&#39; AND &#39;5CEC&#39; THEN v_return :&#x3D; v_return || &#39;hai&#39;; WHEN v_compare &#x3D; &#39;5CED&#39; THEN v_return :&#x3D; v_return || &#39;hal&#39;; WHEN v_compare BETWEEN &#39;5CEE&#39; AND &#39;5D99&#39; THEN v_return :&#x3D; v_return || &#39;han&#39;; WHEN v_compare BETWEEN &#39;5D9D&#39; AND &#39;5DBC&#39; THEN v_return :&#x3D; v_return || &#39;hang&#39;; WHEN v_compare BETWEEN &#39;5DBE&#39; AND &#39;5E20&#39; THEN v_return :&#x3D; v_return || &#39;hao&#39;; WHEN v_compare &#x3D; &#39;5E02&#39; THEN v_return :&#x3D; v_return || &#39;ho&#39;; WHEN v_compare BETWEEN &#39;5E22&#39; AND &#39;5EC5&#39; THEN v_return :&#x3D; v_return || &#39;he&#39;; WHEN v_compare BETWEEN &#39;5EC6&#39; AND &#39;5ECE&#39; THEN v_return :&#x3D; v_return || &#39;hei&#39;; WHEN v_compare BETWEEN &#39;5ED0&#39; AND &#39;5EDC&#39; THEN v_return :&#x3D; v_return || &#39;hen&#39;; WHEN v_compare BETWEEN &#39;5EDD&#39; AND &#39;5EDC&#39; THEN v_return :&#x3D; v_return || &#39;heng&#39;; WHEN v_compare &#x3D; &#39;5EF4&#39; THEN v_return :&#x3D; v_return || &#39;hol&#39;; WHEN v_compare BETWEEN &#39;5F05&#39; AND &#39;5F8D&#39; THEN v_return :&#x3D; v_return || &#39;hong&#39;; WHEN v_compare BETWEEN &#39;5F8E&#39; AND &#39;5FD2&#39; THEN v_return :&#x3D; v_return || &#39;hou&#39;; WHEN v_compare BETWEEN &#39;5FD4&#39; AND &#39;60B1&#39; THEN v_return :&#x3D; v_return || &#39;hu&#39;; WHEN v_compare BETWEEN &#39;60B2&#39; AND &#39;6111&#39; THEN v_return :&#x3D; v_return || &#39;hua&#39;; WHEN v_compare BETWEEN &#39;6112&#39; AND &#39;612D&#39; THEN v_return :&#x3D; v_return || &#39;huai&#39;; WHEN v_compare BETWEEN &#39;612E&#39; AND &#39;61C6&#39; THEN v_return :&#x3D; v_return || &#39;huan&#39;; WHEN v_compare BETWEEN &#39;61CA&#39; AND &#39;624A&#39; THEN v_return :&#x3D; v_return || &#39;huang&#39;; WHEN v_compare BETWEEN &#39;624C&#39; AND &#39;6344&#39; THEN v_return :&#x3D; v_return || &#39;hui&#39;; WHEN v_compare BETWEEN &#39;6346&#39; AND &#39;6388&#39; THEN v_return :&#x3D; v_return || &#39;hun&#39;; WHEN v_compare BETWEEN &#39;638C&#39; AND &#39;63FA&#39; THEN v_return :&#x3D; v_return || &#39;huo&#39;; WHEN v_compare &#x3D; &#39;63FD&#39; THEN v_return :&#x3D; v_return || &#39;hwa&#39;; WHEN v_compare BETWEEN &#39;63FE&#39; AND &#39;6601&#39; THEN v_return :&#x3D; v_return || &#39;ji&#39;; WHEN v_compare BETWEEN &#39;6604&#39; AND &#39;6691&#39; THEN v_return :&#x3D; v_return || &#39;jia&#39;; WHEN v_compare BETWEEN &#39;6692&#39; AND &#39;67F8&#39; THEN v_return :&#x3D; v_return || &#39;jian&#39;; WHEN v_compare BETWEEN &#39;67F9&#39; AND &#39;6860&#39; THEN v_return :&#x3D; v_return || &#39;jiang&#39;; WHEN v_compare BETWEEN &#39;6862&#39; AND &#39;6930&#39; THEN v_return :&#x3D; v_return || &#39;jiao&#39;; WHEN v_compare BETWEEN &#39;6931&#39; AND &#39;6A18&#39; THEN v_return :&#x3D; v_return || &#39;jie&#39;; WHEN v_compare BETWEEN &#39;6A1A&#39; AND &#39;6AC9&#39; THEN v_return :&#x3D; v_return || &#39;jin&#39;; WHEN v_compare BETWEEN &#39;6ACA&#39; AND &#39;6B65&#39; THEN v_return :&#x3D; v_return || &#39;jing&#39;; WHEN v_compare BETWEEN &#39;6B66&#39; AND &#39;6B9A&#39; THEN v_return :&#x3D; v_return || &#39;jiong&#39;; WHEN v_compare BETWEEN &#39;6B9C&#39; AND &#39;6C0C&#39; THEN v_return :&#x3D; v_return || &#39;jiu&#39;; WHEN v_compare &#x3D; &#39;6C0D&#39; THEN v_return :&#x3D; v_return || &#39;jou&#39;; WHEN v_compare BETWEEN &#39;6C0E&#39; AND &#39;6D2A&#39; THEN v_return :&#x3D; v_return || &#39;ju&#39;; WHEN v_compare BETWEEN &#39;6D2D&#39; AND &#39;6D80&#39; THEN v_return :&#x3D; v_return || &#39;juan&#39;; WHEN v_compare BETWEEN &#39;6D82&#39; AND &#39;6E28&#39; THEN v_return :&#x3D; v_return || &#39;jue&#39;; WHEN v_compare BETWEEN &#39;6E2A&#39; AND &#39;6E85&#39; THEN v_return :&#x3D; v_return || &#39;jun&#39;; WHEN v_compare BETWEEN &#39;6E86&#39; AND &#39;6E92&#39; THEN v_return :&#x3D; v_return || &#39;ka&#39;; WHEN v_compare BETWEEN &#39;6E94&#39; AND &#39;6EC9&#39; THEN v_return :&#x3D; v_return || &#39;kai&#39;; WHEN v_compare &#x3D; &#39;6ECC&#39; THEN v_return :&#x3D; v_return || &#39;kal&#39;; WHEN v_compare BETWEEN &#39;6ECD&#39; AND &#39;6F00&#39; THEN v_return :&#x3D; v_return || &#39;kan&#39;; WHEN v_compare BETWEEN &#39;6F02&#39; AND &#39;6F30&#39; THEN v_return :&#x3D; v_return || &#39;kang&#39;; WHEN v_compare BETWEEN &#39;6F31&#39; AND &#39;6F4D&#39; THEN v_return :&#x3D; v_return || &#39;kao&#39;; WHEN v_compare BETWEEN &#39;6F50&#39; AND &#39;6FC8&#39; THEN v_return :&#x3D; v_return || &#39;ke&#39;; WHEN v_compare BETWEEN &#39;6FC9&#39; AND &#39;6FDA&#39; THEN v_return :&#x3D; v_return || &#39;ken&#39;; WHEN v_compare BETWEEN &#39;6FDC&#39; AND &#39;6FF5&#39; THEN v_return :&#x3D; v_return || &#39;keng&#39;; WHEN v_compare &#x3D; &#39;6FFC&#39; THEN v_return :&#x3D; v_return || &#39;ki&#39;; WHEN v_compare BETWEEN &#39;6FFD&#39; AND &#39;7016&#39; THEN v_return :&#x3D; v_return || &#39;kong&#39;; WHEN v_compare &#x3D; &#39;7018&#39; THEN v_return :&#x3D; v_return || &#39;kos&#39;; WHEN v_compare BETWEEN &#39;7019&#39; AND &#39;703E&#39; THEN v_return :&#x3D; v_return || &#39;kou&#39;; WHEN v_compare BETWEEN &#39;7041&#39; AND &#39;707A&#39; THEN v_return :&#x3D; v_return || &#39;ku&#39;; WHEN v_compare BETWEEN &#39;707C&#39; AND &#39;7095&#39; THEN v_return :&#x3D; v_return || &#39;kua&#39;; WHEN v_compare BETWEEN &#39;709A&#39; AND &#39;70C1&#39; THEN v_return :&#x3D; v_return || &#39;kuai&#39;; WHEN v_compare BETWEEN &#39;70C2&#39; AND &#39;70D4&#39; THEN v_return :&#x3D; v_return || &#39;kuan&#39;; WHEN v_compare BETWEEN &#39;70D8&#39; AND &#39;7128&#39; THEN v_return :&#x3D; v_return || &#39;kuang&#39;; WHEN v_compare BETWEEN &#39;7129&#39; AND &#39;71B1&#39; THEN v_return :&#x3D; v_return || &#39;kui&#39;; WHEN v_compare BETWEEN &#39;71B2&#39; AND &#39;71FE&#39; THEN v_return :&#x3D; v_return || &#39;kun&#39;; WHEN v_compare BETWEEN &#39;7200&#39; AND &#39;7226&#39; THEN v_return :&#x3D; v_return || &#39;kuo&#39;; WHEN v_compare &#x3D; &#39;7228&#39; THEN v_return :&#x3D; v_return || &#39;kweok&#39;; WHEN v_compare BETWEEN &#39;722C&#39; AND &#39;726A&#39; THEN v_return :&#x3D; v_return || &#39;la&#39;; WHEN v_compare BETWEEN &#39;726C&#39; AND &#39;72B5&#39; THEN v_return :&#x3D; v_return || &#39;lai&#39;; WHEN v_compare BETWEEN &#39;72B9&#39; AND &#39;733C&#39; THEN v_return :&#x3D; v_return || &#39;lan&#39;; WHEN v_compare BETWEEN &#39;733D&#39; AND &#39;7388&#39; THEN v_return :&#x3D; v_return || &#39;lang&#39;; WHEN v_compare BETWEEN &#39;7389&#39; AND &#39;73E5&#39; THEN v_return :&#x3D; v_return || &#39;lao&#39;; WHEN v_compare BETWEEN &#39;73E8&#39; AND &#39;7402&#39; THEN v_return :&#x3D; v_return || &#39;le&#39;; WHEN v_compare BETWEEN &#39;7404&#39; AND &#39;7485&#39; THEN v_return :&#x3D; v_return || &#39;lei&#39;; WHEN v_compare BETWEEN &#39;7488&#39; AND &#39;7499&#39; THEN v_return :&#x3D; v_return || &#39;leng&#39;; WHEN v_compare BETWEEN &#39;749C&#39; AND &#39;7642&#39; THEN v_return :&#x3D; v_return || &#39;li&#39;; WHEN v_compare BETWEEN &#39;7644&#39; AND &#39;7645&#39; THEN v_return :&#x3D; v_return || &#39;lia&#39;; WHEN v_compare BETWEEN &#39;7646&#39; AND &#39;76EC&#39; THEN v_return :&#x3D; v_return || &#39;lian&#39;; WHEN v_compare BETWEEN &#39;76ED&#39; AND &#39;7731&#39; THEN v_return :&#x3D; v_return || &#39;liang&#39;; WHEN v_compare BETWEEN &#39;7732&#39; AND &#39;7794&#39; THEN v_return :&#x3D; v_return || &#39;liao&#39;; WHEN v_compare BETWEEN &#39;7795&#39; AND &#39;77E2&#39; THEN v_return :&#x3D; v_return || &#39;lie&#39;; WHEN v_compare BETWEEN &#39;77E4&#39; AND &#39;785D&#39; THEN v_return :&#x3D; v_return || &#39;lin&#39;; WHEN v_compare &#x3D; &#39;77EA&#39; THEN v_return :&#x3D; v_return || &#39;len&#39;; WHEN v_compare BETWEEN &#39;7860&#39; AND &#39;7904&#39; THEN v_return :&#x3D; v_return || &#39;ling&#39;; WHEN v_compare BETWEEN &#39;7905&#39; AND &#39;7986&#39; THEN v_return :&#x3D; v_return || &#39;liu&#39;; WHEN v_compare BETWEEN &#39;7988&#39; AND &#39;7989&#39; THEN v_return :&#x3D; v_return || &#39;lo&#39;; WHEN v_compare BETWEEN &#39;798A&#39; AND &#39;79FD&#39; THEN v_return :&#x3D; v_return || &#39;long&#39;; WHEN v_compare BETWEEN &#39;79FE&#39; AND &#39;7A49&#39; THEN v_return :&#x3D; v_return || &#39;lou&#39;; WHEN v_compare BETWEEN &#39;7A4C&#39; AND &#39;7B4D&#39; THEN v_return :&#x3D; v_return || &#39;lu&#39;; WHEN v_compare BETWEEN &#39;7B4E&#39; AND &#39;7B80&#39; THEN v_return :&#x3D; v_return || &#39;luan&#39;; WHEN v_compare BETWEEN &#39;7B81&#39; AND &#39;7BB2&#39; THEN v_return :&#x3D; v_return || &#39;lun&#39;; WHEN v_compare BETWEEN &#39;7BB5&#39; AND &#39;7C25&#39; THEN v_return :&#x3D; v_return || &#39;luo&#39;; WHEN v_compare BETWEEN &#39;7C26&#39; AND &#39;7C82&#39; THEN v_return :&#x3D; v_return || &#39;lv&#39;; WHEN v_compare BETWEEN &#39;7C84&#39; AND &#39;7C98&#39; THEN v_return :&#x3D; v_return || &#39;lue&#39;; WHEN v_compare BETWEEN &#39;7C9C&#39; AND &#39;7CE4&#39; THEN v_return :&#x3D; v_return || &#39;ma&#39;; WHEN v_compare BETWEEN &#39;7CE5&#39; AND &#39;7DOC&#39; THEN v_return :&#x3D; v_return || &#39;mai&#39;; WHEN v_compare BETWEEN &#39;7D11&#39; AND &#39;7D6E&#39; THEN v_return :&#x3D; v_return || &#39;man&#39;; WHEN v_compare BETWEEN &#39;7D70&#39; AND &#39;7DA9&#39; THEN v_return :&#x3D; v_return || &#39;mang&#39;; WHEN v_compare BETWEEN &#39;7DAC&#39; AND &#39;7E15&#39; THEN v_return :&#x3D; v_return || &#39;mao&#39;; WHEN v_compare &#x3D; &#39;7E0C&#39; THEN v_return :&#x3D; v_return || &#39;q&#39;; WHEN v_compare BETWEEN &#39;7E18&#39; AND &#39;7E1E&#39; THEN v_return :&#x3D; v_return || &#39;me&#39;; WHEN v_compare BETWEEN &#39;7E20&#39; AND &#39;7E9A&#39; THEN v_return :&#x3D; v_return || &#39;mei&#39;; WHEN v_compare BETWEEN &#39;7E9D&#39; AND &#39;7EC1&#39; THEN v_return :&#x3D; v_return || &#39;men&#39;; WHEN v_compare BETWEEN &#39;7EC2&#39; AND &#39;7F36&#39; THEN v_return :&#x3D; v_return || &#39;meng&#39;; WHEN v_compare &#x3D; &#39;7F38&#39; THEN v_return :&#x3D; v_return || &#39;meo&#39;; WHEN v_compare BETWEEN &#39;7F39&#39; AND &#39;7FE4&#39; THEN v_return :&#x3D; v_return || &#39;mi&#39;; WHEN v_compare BETWEEN &#39;7FE6&#39; AND &#39;8034&#39; THEN v_return :&#x3D; v_return || &#39;mian&#39;; WHEN v_compare BETWEEN &#39;8035&#39; AND &#39;805A&#39; THEN v_return :&#x3D; v_return || &#39;miao&#39;; WHEN v_compare BETWEEN &#39;805C&#39; AND &#39;8081&#39; THEN v_return :&#x3D; v_return || &#39;mie&#39;; WHEN v_compare BETWEEN &#39;8084&#39; AND &#39;80E4&#39; THEN v_return :&#x3D; v_return || &#39;min&#39;; WHEN v_compare &#x3D; &#39;8096&#39; THEN v_return :&#x3D; v_return || &#39;lem&#39;; WHEN v_compare BETWEEN &#39;80E5&#39; AND &#39;8116&#39; THEN v_return :&#x3D; v_return || &#39;ming&#39;; WHEN v_compare BETWEEN &#39;8119&#39; AND &#39;811D&#39; THEN v_return :&#x3D; v_return || &#39;miu&#39;; WHEN v_compare BETWEEN &#39;811E&#39; AND &#39;81A9&#39; THEN v_return :&#x3D; v_return || &#39;mo&#39;; WHEN v_compare BETWEEN &#39;81AC&#39; AND &#39;81CC&#39; THEN v_return :&#x3D; v_return || &#39;mou&#39;; WHEN v_compare BETWEEN &#39;81CD&#39; AND &#39;821E&#39; THEN v_return :&#x3D; v_return || &#39;mu&#39;; WHEN v_compare &#x3D; &#39;8220&#39; THEN v_return :&#x3D; v_return || &#39;myeo&#39;; WHEN v_compare &#x3D; &#39;8221&#39; THEN v_return :&#x3D; v_return || &#39;myeon&#39;; WHEN v_compare &#x3D; &#39;8222&#39; THEN v_return :&#x3D; v_return || &#39;myeong&#39;; WHEN v_compare BETWEEN &#39;8224&#39; AND &#39;8258&#39; THEN v_return :&#x3D; v_return || &#39;na&#39;; WHEN v_compare BETWEEN &#39;825D&#39; AND &#39;8285&#39; THEN v_return :&#x3D; v_return || &#39;nai&#39;; WHEN v_compare BETWEEN &#39;8289&#39; AND &#39;82B5&#39; THEN v_return :&#x3D; v_return || &#39;nan&#39;; WHEN v_compare BETWEEN &#39;82B9&#39; AND &#39;82D0&#39; THEN v_return :&#x3D; v_return || &#39;nang&#39;; WHEN v_compare BETWEEN &#39;82D1&#39; AND &#39;8311&#39; THEN v_return :&#x3D; v_return || &#39;nao&#39;; WHEN v_compare BETWEEN &#39;8312&#39; AND &#39;8320&#39; THEN v_return :&#x3D; v_return || &#39;ne&#39;; WHEN v_compare BETWEEN &#39;8322&#39; AND &#39;8331&#39; THEN v_return :&#x3D; v_return || &#39;nei&#39;; WHEN v_compare &#x3D; &#39;8334&#39; THEN v_return :&#x3D; v_return || &#39;nem&#39;; WHEN v_compare &#x3D; &#39;8336&#39; THEN v_return :&#x3D; v_return || &#39;nen&#39;; WHEN v_compare &#x3D; &#39;8339&#39; THEN v_return :&#x3D; v_return || &#39;neng&#39;; WHEN v_compare &#x3D; &#39;833E&#39; THEN v_return :&#x3D; v_return || &#39;neus&#39;; WHEN v_compare &#x3D; &#39;8342&#39; THEN v_return :&#x3D; v_return || &#39;ngag&#39;; WHEN v_compare &#x3D; &#39;8344&#39; THEN v_return :&#x3D; v_return || &#39;ngai&#39;; WHEN v_compare &#x3D; &#39;8345&#39; THEN v_return :&#x3D; v_return || &#39;ngam&#39;; WHEN v_compare BETWEEN &#39;8346&#39; AND &#39;83B9&#39; THEN v_return :&#x3D; v_return || &#39;ni&#39;; WHEN v_compare BETWEEN &#39;83BC&#39; AND &#39;83ED&#39; THEN v_return :&#x3D; v_return || &#39;nian&#39;; WHEN v_compare BETWEEN &#39;83EE&#39; AND &#39;83F5&#39; THEN v_return :&#x3D; v_return || &#39;niang&#39;; WHEN v_compare BETWEEN &#39;83F8&#39; AND &#39;8414&#39; THEN v_return :&#x3D; v_return || &#39;niao&#39;; WHEN v_compare BETWEEN &#39;8415&#39; AND &#39;8478&#39; THEN v_return :&#x3D; v_return || &#39;nie&#39;; WHEN v_compare BETWEEN &#39;8479&#39; AND &#39;8480&#39; THEN v_return :&#x3D; v_return || &#39;nin&#39;; WHEN v_compare BETWEEN &#39;8481&#39; AND &#39;84B4&#39; THEN v_return :&#x3D; v_return || &#39;ning&#39;; WHEN v_compare BETWEEN &#39;84B5&#39; AND &#39;84D1&#39; THEN v_return :&#x3D; v_return || &#39;niu&#39;; WHEN v_compare BETWEEN &#39;84D4&#39; AND &#39;84FA&#39; THEN v_return :&#x3D; v_return || &#39;nong&#39;; WHEN v_compare &#x3D; &#39;84E8&#39; THEN v_return :&#x3D; v_return || &#39;nung&#39;; WHEN v_compare BETWEEN &#39;84FD&#39; AND &#39;850E&#39; THEN v_return :&#x3D; v_return || &#39;nou&#39;; WHEN v_compare BETWEEN &#39;8511&#39; AND &#39;8522&#39; THEN v_return :&#x3D; v_return || &#39;nu&#39;; WHEN v_compare BETWEEN &#39;8524&#39; AND &#39;852C&#39; THEN v_return :&#x3D; v_return || &#39;nuan&#39;; WHEN v_compare &#x3D; &#39;852D&#39; THEN v_return :&#x3D; v_return || &#39;nun&#39;; WHEN v_compare BETWEEN &#39;8530&#39; AND &#39;8559&#39; THEN v_return :&#x3D; v_return || &#39;nuo&#39;; WHEN v_compare BETWEEN &#39;855A&#39; AND &#39;8566&#39; THEN v_return :&#x3D; v_return || &#39;nv&#39;; WHEN v_compare BETWEEN &#39;856D&#39; AND &#39;8574&#39; THEN v_return :&#x3D; v_return || &#39;nue&#39;; WHEN v_compare &#x3D; &#39;8575&#39; THEN v_return :&#x3D; v_return || &#39;o&#39;; WHEN v_compare &#x3D; &#39;8579&#39; THEN v_return :&#x3D; v_return || &#39;oes&#39;; WHEN v_compare &#x3D; &#39;857A&#39; THEN v_return :&#x3D; v_return || &#39;ol&#39;; WHEN v_compare &#x3D; &#39;857C&#39; THEN v_return :&#x3D; v_return || &#39;on&#39;; WHEN v_compare BETWEEN &#39;857D&#39; AND &#39;85AE&#39; THEN v_return :&#x3D; v_return || &#39;ou&#39;; WHEN v_compare BETWEEN &#39;85B1&#39; AND &#39;85C9&#39; THEN v_return :&#x3D; v_return || &#39;pa&#39;; WHEN v_compare BETWEEN &#39;85CA&#39; AND &#39;85E4&#39; THEN v_return :&#x3D; v_return || &#39;pai&#39;; WHEN v_compare &#x3D; &#39;85E5&#39; THEN v_return :&#x3D; v_return || &#39;pak&#39;; WHEN v_compare BETWEEN &#39;85E8&#39; AND &#39;8625&#39; THEN v_return :&#x3D; v_return || &#39;pan&#39;; WHEN v_compare BETWEEN &#39;8626&#39; AND &#39;8658&#39; THEN v_return :&#x3D; v_return || &#39;pang&#39;; WHEN v_compare BETWEEN &#39;8659&#39; AND &#39;8688&#39; THEN v_return :&#x3D; v_return || &#39;pao&#39;; WHEN v_compare BETWEEN &#39;868A&#39; AND &#39;86C5&#39; THEN v_return :&#x3D; v_return || &#39;pei&#39;; WHEN v_compare BETWEEN &#39;86C8&#39; AND &#39;86D6&#39; THEN v_return :&#x3D; v_return || &#39;pen&#39;; WHEN v_compare BETWEEN &#39;86D8&#39; AND &#39;8740&#39; THEN v_return :&#x3D; v_return || &#39;peng&#39;; WHEN v_compare &#x3D; &#39;8741&#39; THEN v_return :&#x3D; v_return || &#39;peol&#39;; WHEN v_compare &#x3D; &#39;8742&#39; THEN v_return :&#x3D; v_return || &#39;phas&#39;; WHEN v_compare &#x3D; &#39;8744&#39; THEN v_return :&#x3D; v_return || &#39;phdeng&#39;; WHEN v_compare &#x3D; &#39;8745&#39; THEN v_return :&#x3D; v_return || &#39;phoi&#39;; WHEN v_compare &#x3D; &#39;8746&#39; THEN v_return :&#x3D; v_return || &#39;phos&#39;; WHEN v_compare BETWEEN &#39;8748&#39; AND &#39;880D&#39; THEN v_return :&#x3D; v_return || &#39;pi&#39;; WHEN v_compare BETWEEN &#39;880E&#39; AND &#39;883A&#39; THEN v_return :&#x3D; v_return || &#39;pian&#39;; WHEN v_compare BETWEEN &#39;883C&#39; AND &#39;8869&#39; THEN v_return :&#x3D; v_return || &#39;piao&#39;; WHEN v_compare BETWEEN &#39;886D&#39; AND &#39;8879&#39; THEN v_return :&#x3D; v_return || &#39;pie&#39;; WHEN v_compare BETWEEN &#39;887A&#39; AND &#39;88A0&#39; THEN v_return :&#x3D; v_return || &#39;pin&#39;; WHEN v_compare BETWEEN &#39;88A1&#39; AND &#39;88EC&#39; THEN v_return :&#x3D; v_return || &#39;ping&#39;; WHEN v_compare BETWEEN &#39;88F0&#39; AND &#39;8938&#39; THEN v_return :&#x3D; v_return || &#39;po&#39;; WHEN v_compare BETWEEN &#39;893E&#39; AND &#39;8958&#39; THEN v_return :&#x3D; v_return || &#39;pou&#39;; WHEN v_compare BETWEEN &#39;895A&#39; AND &#39;895C&#39; THEN v_return :&#x3D; v_return || &#39;ppun&#39;; WHEN v_compare BETWEEN &#39;895D&#39; AND &#39;89C4&#39; THEN v_return :&#x3D; v_return || &#39;pu&#39;; WHEN v_compare BETWEEN &#39;89C5&#39; AND &#39;8B3E&#39; THEN v_return :&#x3D; v_return || &#39;qi&#39;; WHEN v_compare BETWEEN &#39;8B41&#39; AND &#39;8B61&#39; THEN v_return :&#x3D; v_return || &#39;qia&#39;; WHEN v_compare BETWEEN &#39;8B62&#39; AND &#39;8C54&#39; THEN v_return :&#x3D; v_return || &#39;qian&#39;; WHEN v_compare BETWEEN &#39;8C5A&#39; AND &#39;8CB4&#39; THEN v_return :&#x3D; v_return || &#39;qiang&#39;; WHEN v_compare BETWEEN &#39;8CB8&#39; AND &#39;8D3D&#39; THEN v_return :&#x3D; v_return || &#39;qiao&#39;; WHEN v_compare BETWEEN &#39;8D40&#39; AND &#39;8D7E&#39; THEN v_return :&#x3D; v_return || &#39;qie&#39;; WHEN v_compare BETWEEN &#39;8D81&#39; AND &#39;8DFA&#39; THEN v_return :&#x3D; v_return || &#39;qin&#39;; WHEN v_compare BETWEEN &#39;8DFC&#39; AND &#39;8E5D&#39; THEN v_return :&#x3D; v_return || &#39;qing&#39;; WHEN v_compare BETWEEN &#39;8E5E&#39; AND &#39;8E98&#39; THEN v_return :&#x3D; v_return || &#39;qiong&#39;; WHEN v_compare BETWEEN &#39;8E9A&#39; AND &#39;8F2A&#39; THEN v_return :&#x3D; v_return || &#39;qiu&#39;; WHEN v_compare BETWEEN &#39;8F2E&#39; AND &#39;8FE9&#39; THEN v_return :&#x3D; v_return || &#39;qu&#39;; WHEN v_compare BETWEEN &#39;8FEA&#39; AND &#39;905D&#39; THEN v_return :&#x3D; v_return || &#39;quan&#39;; WHEN v_compare BETWEEN &#39;905E&#39; AND &#39;9099&#39; THEN v_return :&#x3D; v_return || &#39;que&#39;; WHEN v_compare BETWEEN &#39;909A&#39; AND &#39;90AA&#39; THEN v_return :&#x3D; v_return || &#39;qun&#39;; WHEN v_compare BETWEEN &#39;90B0&#39; AND &#39;90B1&#39; THEN v_return :&#x3D; v_return || &#39;ra&#39;; WHEN v_compare &#x3D; &#39;90B2&#39; THEN v_return :&#x3D; v_return || &#39;ram&#39;; WHEN v_compare BETWEEN &#39;90B4&#39; AND &#39;90E5&#39; THEN v_return :&#x3D; v_return || &#39;ran&#39;; WHEN v_compare BETWEEN &#39;90E6&#39; AND &#39;9104&#39; THEN v_return :&#x3D; v_return || &#39;rang&#39;; WHEN v_compare BETWEEN &#39;9105&#39; AND &#39;911C&#39; THEN v_return :&#x3D; v_return || &#39;rao&#39;; WHEN v_compare BETWEEN &#39;911D&#39; AND &#39;9120&#39; THEN v_return :&#x3D; v_return || &#39;re&#39;; WHEN v_compare BETWEEN &#39;9121&#39; AND &#39;9180&#39; THEN v_return :&#x3D; v_return || &#39;ren&#39;; WHEN v_compare BETWEEN &#39;9181&#39; AND &#39;918D&#39; THEN v_return :&#x3D; v_return || &#39;reng&#39;; WHEN v_compare BETWEEN &#39;918E&#39; AND &#39;9196&#39; THEN v_return :&#x3D; v_return || &#39;ri&#39;; WHEN v_compare BETWEEN &#39;9189&#39; AND &#39;91F1&#39; THEN v_return :&#x3D; v_return || &#39;rong&#39;; WHEN v_compare BETWEEN &#39;91F2&#39; AND &#39;9218&#39; THEN v_return :&#x3D; v_return || &#39;rou&#39;; WHEN v_compare BETWEEN &#39;9219&#39; AND &#39;9269&#39; THEN v_return :&#x3D; v_return || &#39;ru&#39;; WHEN v_compare BETWEEN &#39;926C&#39; AND &#39;9292&#39; THEN v_return :&#x3D; v_return || &#39;ruan&#39;; WHEN v_compare BETWEEN &#39;9294&#39; AND &#39;92BD&#39; THEN v_return :&#x3D; v_return || &#39;rui&#39;; WHEN v_compare BETWEEN &#39;92BE&#39; AND &#39;92C9&#39; THEN v_return :&#x3D; v_return || &#39;run&#39;; WHEN v_compare &#x3D; &#39;92CA&#39; THEN v_return :&#x3D; v_return || &#39;rua&#39;; WHEN v_compare BETWEEN &#39;92CA&#39; AND &#39;92E4&#39; THEN v_return :&#x3D; v_return || &#39;ruo&#39;; WHEN v_compare BETWEEN &#39;92E5&#39; AND &#39;9309&#39; THEN v_return :&#x3D; v_return || &#39;sa&#39;; WHEN v_compare &#x3D; &#39;930A&#39; THEN v_return :&#x3D; v_return || &#39;saeng&#39;; WHEN v_compare BETWEEN &#39;930C&#39; AND &#39;9325&#39; THEN v_return :&#x3D; v_return || &#39;sai&#39;; WHEN v_compare &#x3D; &#39;9328&#39; THEN v_return :&#x3D; v_return || &#39;sal&#39;; WHEN v_compare BETWEEN &#39;9329&#39; AND &#39;9355&#39; THEN v_return :&#x3D; v_return || &#39;san&#39;; WHEN v_compare BETWEEN &#39;9358&#39; AND &#39;936A&#39; THEN v_return :&#x3D; v_return || &#39;sang&#39;; WHEN v_compare BETWEEN &#39;936C&#39; AND &#39;9391&#39; THEN v_return :&#x3D; v_return || &#39;sao&#39;; WHEN v_compare BETWEEN &#39;9392&#39; AND &#39;93C5&#39; THEN v_return :&#x3D; v_return || &#39;se&#39;; WHEN v_compare &#x3D; &#39;93C6&#39; THEN v_return :&#x3D; v_return || &#39;sed&#39;; WHEN v_compare BETWEEN &#39;93C8&#39; AND &#39;93CC&#39; THEN v_return :&#x3D; v_return || &#39;sen&#39;; WHEN v_compare BETWEEN &#39;93CD&#39; AND &#39;93D0&#39; THEN v_return :&#x3D; v_return || &#39;seng&#39;; WHEN v_compare &#x3D; &#39;93D1&#39; THEN v_return :&#x3D; v_return || &#39;seo&#39;; WHEN v_compare &#x3D; &#39;93D2&#39; THEN v_return :&#x3D; v_return || &#39;seon&#39;; WHEN v_compare BETWEEN &#39;93D4&#39; AND &#39;941A&#39; THEN v_return :&#x3D; v_return || &#39;sha&#39;; WHEN v_compare BETWEEN &#39;941D&#39; AND &#39;9428&#39; THEN v_return :&#x3D; v_return || &#39;shai&#39;; WHEN v_compare BETWEEN &#39;9429&#39; AND &#39;94C1&#39; THEN v_return :&#x3D; v_return || &#39;shan&#39;; WHEN v_compare BETWEEN &#39;94C2&#39; AND &#39;94EE&#39; THEN v_return :&#x3D; v_return || &#39;shang&#39;; WHEN v_compare BETWEEN &#39;94F1&#39; AND &#39;952D&#39; THEN v_return :&#x3D; v_return || &#39;shao&#39;; WHEN v_compare BETWEEN &#39;952E&#39; AND &#39;9571&#39; THEN v_return :&#x3D; v_return || &#39;she&#39;; WHEN v_compare BETWEEN &#39;9574&#39; AND &#39;9602&#39; THEN v_return :&#x3D; v_return || &#39;shen&#39;; WHEN v_compare BETWEEN &#39;9604&#39; AND &#39;965C&#39; THEN v_return :&#x3D; v_return || &#39;sheng&#39;; WHEN v_compare BETWEEN &#39;965E&#39; AND &#39;9786&#39; THEN v_return :&#x3D; v_return || &#39;shi&#39;; WHEN v_compare BETWEEN &#39;9788&#39; AND &#39;97AE&#39; THEN v_return :&#x3D; v_return || &#39;shou&#39;; WHEN v_compare BETWEEN &#39;97B0&#39; AND &#39;9878&#39; THEN v_return :&#x3D; v_return || &#39;shu&#39;; WHEN v_compare BETWEEN &#39;987A&#39; AND &#39;987E&#39; THEN v_return :&#x3D; v_return || &#39;shua&#39;; WHEN v_compare BETWEEN &#39;9880&#39; AND &#39;988A&#39; THEN v_return :&#x3D; v_return || &#39;shuai&#39;; WHEN v_compare BETWEEN &#39;988C&#39; AND &#39;9894&#39; THEN v_return :&#x3D; v_return || &#39;shuan&#39;; WHEN v_compare BETWEEN &#39;9895&#39; AND &#39;98BE&#39; THEN v_return :&#x3D; v_return || &#39;shuang&#39;; WHEN v_compare BETWEEN &#39;98C0&#39; AND &#39;98D6&#39; THEN v_return :&#x3D; v_return || &#39;shui&#39;; WHEN v_compare BETWEEN &#39;98DC&#39; AND &#39;98EE&#39; THEN v_return :&#x3D; v_return || &#39;shun&#39;; WHEN v_compare BETWEEN &#39;98F1&#39; AND &#39;9911&#39; THEN v_return :&#x3D; v_return || &#39;shuo&#39;; WHEN v_compare BETWEEN &#39;9912&#39; AND &#39;99AD&#39; THEN v_return :&#x3D; v_return || &#39;si&#39;; WHEN v_compare &#x3D; &#39;99AE&#39; THEN v_return :&#x3D; v_return || &#39;so&#39;; WHEN v_compare &#x3D; &#39;99B0&#39; THEN v_return :&#x3D; v_return || &#39;sol&#39;; WHEN v_compare BETWEEN &#39;99B1&#39; AND &#39;99F6&#39; THEN v_return :&#x3D; v_return || &#39;song&#39;; WHEN v_compare BETWEEN &#39;99F8&#39; AND &#39;9A36&#39; THEN v_return :&#x3D; v_return || &#39;sou&#39;; WHEN v_compare BETWEEN &#39;9A38&#39; AND &#39;9AB6&#39; THEN v_return :&#x3D; v_return || &#39;su&#39;; WHEN v_compare BETWEEN &#39;9AB8&#39; AND &#39;9AC4&#39; THEN v_return :&#x3D; v_return || &#39;suan&#39;; WHEN v_compare BETWEEN &#39;9AC5&#39; AND &#39;9B3A&#39; THEN v_return :&#x3D; v_return || &#39;sui&#39;; WHEN v_compare &#x3D; &#39;9AF0&#39; THEN v_return :&#x3D; v_return || &#39;wie&#39;; WHEN v_compare BETWEEN &#39;9B3C&#39; AND &#39;9B62&#39; THEN v_return :&#x3D; v_return || &#39;sun&#39;; WHEN v_compare BETWEEN &#39;9B65&#39; AND &#39;9BA9&#39; THEN v_return :&#x3D; v_return || &#39;suo&#39;; WHEN v_compare BETWEEN &#39;9BAA&#39; AND &#39;9C10&#39; THEN v_return :&#x3D; v_return || &#39;ta&#39;; WHEN v_compare &#x3D; &#39;9C11&#39; THEN v_return :&#x3D; v_return || &#39;tae&#39;; WHEN v_compare BETWEEN &#39;9C12&#39; AND &#39;9C59&#39; THEN v_return :&#x3D; v_return || &#39;tai&#39;; WHEN v_compare BETWEEN &#39;9C5A&#39; AND &#39;9CE0&#39; THEN v_return :&#x3D; v_return || &#39;tan&#39;; WHEN v_compare BETWEEN &#39;9CE2&#39; AND &#39;9D55&#39; THEN v_return :&#x3D; v_return || &#39;tang&#39;; WHEN v_compare BETWEEN &#39;9D56&#39; AND &#39;9DB4&#39; THEN v_return :&#x3D; v_return || &#39;tao&#39;; WHEN v_compare &#x3D; &#39;9DB6&#39; THEN v_return :&#x3D; v_return || &#39;tap&#39;; WHEN v_compare BETWEEN &#39;9DB8&#39; AND &#39;9DC6&#39; THEN v_return :&#x3D; v_return || &#39;te&#39;; WHEN v_compare BETWEEN &#39;9DC8&#39; AND &#39;9DED&#39; THEN v_return :&#x3D; v_return || &#39;teng&#39;; WHEN v_compare &#x3D; &#39;9DEE&#39; THEN v_return :&#x3D; v_return || &#39;teo&#39;; WHEN v_compare &#x3D; &#39;9DF0&#39; THEN v_return :&#x3D; v_return || &#39;teul&#39;; WHEN v_compare BETWEEN &#39;9DF1&#39; AND &#39;9E82&#39; THEN v_return :&#x3D; v_return || &#39;ti&#39;; WHEN v_compare BETWEEN &#39;9E85&#39; AND &#39;9EED&#39; THEN v_return :&#x3D; v_return || &#39;tian&#39;; WHEN v_compare BETWEEN &#39;9EEE&#39; AND &#39;9F38&#39; THEN v_return :&#x3D; v_return || &#39;tiao&#39;; WHEN v_compare BETWEEN &#39;9F39&#39; AND &#39;9F56&#39; THEN v_return :&#x3D; v_return || &#39;tie&#39;; WHEN v_compare BETWEEN &#39;9F59&#39; AND &#39;9FAE&#39; THEN v_return :&#x3D; v_return || &#39;ting&#39;; WHEN v_compare &#x3D; &#39;9FB0&#39; THEN v_return :&#x3D; v_return || &#39;tol&#39;; WHEN v_compare BETWEEN &#39;9FB1&#39; AND &#39;A015&#39; THEN v_return :&#x3D; v_return || &#39;tong&#39;; WHEN v_compare BETWEEN &#39;A016&#39; AND &#39;A03A&#39; THEN v_return :&#x3D; v_return || &#39;tou&#39;; WHEN v_compare BETWEEN &#39;A040&#39; AND &#39;A0A9&#39; THEN v_return :&#x3D; v_return || &#39;tu&#39;; WHEN v_compare BETWEEN &#39;A0AA&#39; AND &#39;A0D5&#39; THEN v_return :&#x3D; v_return || &#39;tuan&#39;; WHEN v_compare BETWEEN &#39;A0D6&#39; AND &#39;A106&#39; THEN v_return :&#x3D; v_return || &#39;tui&#39;; WHEN v_compare BETWEEN &#39;A108&#39; AND &#39;A131&#39; THEN v_return :&#x3D; v_return || &#39;tun&#39;; WHEN v_compare BETWEEN &#39;A134&#39; AND &#39;A1AE&#39; THEN v_return :&#x3D; v_return || &#39;tuo&#39;; WHEN v_compare BETWEEN &#39;A1B0&#39; AND &#39;A1E8&#39; THEN v_return :&#x3D; v_return || &#39;wa&#39;; WHEN v_compare BETWEEN &#39;A1E9&#39; AND &#39;A1F5&#39; THEN v_return :&#x3D; v_return || &#39;wai&#39;; WHEN v_compare BETWEEN &#39;A1F8&#39; AND &#39;A279&#39; THEN v_return :&#x3D; v_return || &#39;wan&#39;; WHEN v_compare BETWEEN &#39;A27A&#39; AND &#39;A2B9&#39; THEN v_return :&#x3D; v_return || &#39;wang&#39;; WHEN v_compare BETWEEN &#39;A2BC&#39; AND &#39;A408&#39; THEN v_return :&#x3D; v_return || &#39;wei&#39;; WHEN v_compare BETWEEN &#39;A40D&#39; AND &#39;A47C&#39; THEN v_return :&#x3D; v_return || &#39;wen&#39;; WHEN v_compare BETWEEN &#39;A47D&#39; AND &#39;A4A2&#39; THEN v_return :&#x3D; v_return || &#39;weng&#39;; WHEN v_compare BETWEEN &#39;A4A4&#39; AND &#39;A4EA&#39; THEN v_return :&#x3D; v_return || &#39;wo&#39;; WHEN v_compare BETWEEN &#39;A4EC&#39; AND &#39;A5D4&#39; THEN v_return :&#x3D; v_return || &#39;wu&#39;; WHEN v_compare BETWEEN &#39;A5D6&#39; AND &#39;A784&#39; THEN v_return :&#x3D; v_return || &#39;xi&#39;; WHEN v_compare BETWEEN &#39;A785&#39; AND &#39;A7FA&#39; THEN v_return :&#x3D; v_return || &#39;xia&#39;; WHEN v_compare BETWEEN &#39;A7FD&#39; AND &#39;A951&#39; THEN v_return :&#x3D; v_return || &#39;xian&#39;; WHEN v_compare BETWEEN &#39;A954&#39; AND &#39;A9CE&#39; THEN v_return :&#x3D; v_return || &#39;xiang&#39;; WHEN v_compare BETWEEN &#39;A9D0&#39; AND &#39;AA8A&#39; THEN v_return :&#x3D; v_return || &#39;xiao&#39;; WHEN v_compare BETWEEN &#39;AA8D&#39; AND &#39;AB7E&#39; THEN v_return :&#x3D; v_return || &#39;xie&#39;; WHEN v_compare BETWEEN &#39;AB80&#39; AND &#39;ABEE&#39; THEN v_return :&#x3D; v_return || &#39;xin&#39;; WHEN v_compare BETWEEN &#39;ABF0&#39; AND &#39;AC41&#39; THEN v_return :&#x3D; v_return || &#39;xing&#39;; WHEN v_compare BETWEEN &#39;AC42&#39; AND &#39;AC64&#39; THEN v_return :&#x3D; v_return || &#39;xiong&#39;; WHEN v_compare BETWEEN &#39;AC65&#39; AND &#39;ACBA&#39; THEN v_return :&#x3D; v_return || &#39;xiu&#39;; WHEN v_compare BETWEEN &#39;ACBC&#39; AND &#39;AD90&#39; THEN v_return :&#x3D; v_return || &#39;xu&#39;; WHEN v_compare &#x3D; &#39;ACD9&#39; THEN v_return :&#x3D; v_return || &#39;chua&#39;; WHEN v_compare BETWEEN &#39;AD91&#39; AND &#39;AE32&#39; THEN v_return :&#x3D; v_return || &#39;xuan&#39;; WHEN v_compare BETWEEN &#39;AE34&#39; AND &#39;AE89&#39; THEN v_return :&#x3D; v_return || &#39;xue&#39;; WHEN v_compare BETWEEN &#39;AE8C&#39; AND &#39;AF1E&#39; THEN v_return :&#x3D; v_return || &#39;xun&#39;; WHEN v_compare BETWEEN &#39;AF20&#39; AND &#39;AF96&#39; THEN v_return :&#x3D; v_return || &#39;ya&#39;; WHEN v_compare BETWEEN &#39;AF98&#39; AND &#39;B118&#39; THEN v_return :&#x3D; v_return || &#39;yan&#39;; WHEN v_compare &#x3D; &#39;B030&#39; THEN v_return :&#x3D; v_return || &#39;eom&#39;; WHEN v_compare BETWEEN &#39;B11A&#39; AND &#39;B1A8&#39; THEN v_return :&#x3D; v_return || &#39;yang&#39;; WHEN v_compare BETWEEN &#39;B1AD&#39; AND &#39;B275&#39; THEN v_return :&#x3D; v_return || &#39;yao&#39;; WHEN v_compare BETWEEN &#39;B276&#39; AND &#39;B30A&#39; THEN v_return :&#x3D; v_return || &#39;ye&#39;; WHEN v_compare BETWEEN &#39;B30D&#39; AND &#39;B30E&#39; THEN v_return :&#x3D; v_return || &#39;yen&#39;; WHEN v_compare BETWEEN &#39;B310&#39; AND &#39;B594&#39; THEN v_return :&#x3D; v_return || &#39;yi&#39;; WHEN v_compare &#x3D; &#39;B359&#39; THEN v_return :&#x3D; v_return || &#39;i&#39;; WHEN v_compare BETWEEN &#39;B596&#39; AND &#39;B684&#39; THEN v_return :&#x3D; v_return || &#39;yin&#39;; WHEN v_compare BETWEEN &#39;B685&#39; AND &#39;B768&#39; THEN v_return :&#x3D; v_return || &#39;ying&#39;; WHEN v_compare BETWEEN &#39;B76C&#39; AND &#39;B76E&#39; THEN v_return :&#x3D; v_return || &#39;yo&#39;; WHEN v_compare BETWEEN &#39;B770&#39; AND &#39;B7EA&#39; THEN v_return :&#x3D; v_return || &#39;yong&#39;; WHEN v_compare BETWEEN &#39;B7EC&#39; AND &#39;B8B2&#39; THEN v_return :&#x3D; v_return || &#39;you&#39;; WHEN v_compare BETWEEN &#39;B8B5&#39; AND &#39;BA98&#39; THEN v_return :&#x3D; v_return || &#39;yu&#39;; WHEN v_compare BETWEEN &#39;BA99&#39; AND &#39;BB58&#39; THEN v_return :&#x3D; v_return || &#39;yuan&#39;; WHEN v_compare BETWEEN &#39;BB59&#39; AND &#39;BBBE&#39; THEN v_return :&#x3D; v_return || &#39;yue&#39;; WHEN v_compare BETWEEN &#39;BBC1&#39; AND &#39;BC58&#39; THEN v_return :&#x3D; v_return || &#39;yun&#39;; WHEN v_compare BETWEEN &#39;BC59&#39; AND &#39;BC7E&#39; THEN v_return :&#x3D; v_return || &#39;za&#39;; WHEN v_compare BETWEEN &#39;BC81&#39; AND &#39;BCA8&#39; THEN v_return :&#x3D; v_return || &#39;zai&#39;; WHEN v_compare BETWEEN &#39;BCAA&#39; AND &#39;BCEA&#39; THEN v_return :&#x3D; v_return || &#39;zan&#39;; WHEN v_compare BETWEEN &#39;BCEE&#39; AND &#39;BD0A&#39; THEN v_return :&#x3D; v_return || &#39;zang&#39;; WHEN v_compare BETWEEN &#39;BD0C&#39; AND &#39;BD46&#39; THEN v_return :&#x3D; v_return || &#39;zao&#39;; WHEN v_compare BETWEEN &#39;BD48&#39; AND &#39;BD99&#39; THEN v_return :&#x3D; v_return || &#39;ze&#39;; WHEN v_compare BETWEEN &#39;BD9A&#39; AND &#39;BDA2&#39; THEN v_return :&#x3D; v_return || &#39;zei&#39;; WHEN v_compare BETWEEN &#39;BDA5&#39; AND &#39;BDAC&#39; THEN v_return :&#x3D; v_return || &#39;zen&#39;; WHEN v_compare BETWEEN &#39;BDAD&#39; AND &#39;BDCC&#39; THEN v_return :&#x3D; v_return || &#39;zeng&#39;; WHEN v_compare BETWEEN &#39;BDCE&#39; AND &#39;BE40&#39; THEN v_return :&#x3D; v_return || &#39;zha&#39;; WHEN v_compare &#x3D; &#39;BDF8&#39; THEN v_return :&#x3D; v_return || &#39;gad&#39;; WHEN v_compare BETWEEN &#39;BE41&#39; AND &#39;BE62&#39; THEN v_return :&#x3D; v_return || &#39;zhai&#39;; WHEN v_compare BETWEEN &#39;BE65&#39; AND &#39;BEF4&#39; THEN v_return :&#x3D; v_return || &#39;zhan&#39;; WHEN v_compare BETWEEN &#39;BEF6&#39; AND &#39;BF3E&#39; THEN v_return :&#x3D; v_return || &#39;zhang&#39;; WHEN v_compare BETWEEN &#39;BF40&#39; AND &#39;BF8C&#39; THEN v_return :&#x3D; v_return || &#39;zhao&#39;; WHEN v_compare BETWEEN &#39;BF8E&#39; AND &#39;BFF8&#39; THEN v_return :&#x3D; v_return || &#39;zhe&#39;; WHEN v_compare BETWEEN &#39;BFF9&#39; AND &#39;C0B2&#39; THEN v_return :&#x3D; v_return || &#39;zhen&#39;; WHEN v_compare BETWEEN &#39;C0B4&#39; AND &#39;C11E&#39; THEN v_return :&#x3D; v_return || &#39;zheng&#39;; WHEN v_compare BETWEEN &#39;C122&#39; AND &#39;C2C4&#39; THEN v_return :&#x3D; v_return || &#39;zhi&#39;; WHEN v_compare BETWEEN &#39;C2C5&#39; AND &#39;C31A&#39; THEN v_return :&#x3D; v_return || &#39;zhong&#39;; WHEN v_compare BETWEEN &#39;C31D&#39; AND &#39;C39A&#39; THEN v_return :&#x3D; v_return || &#39;zhou&#39;; WHEN v_compare BETWEEN &#39;C39C&#39; AND &#39;C47C&#39; THEN v_return :&#x3D; v_return || &#39;zhu&#39;; WHEN v_compare BETWEEN &#39;C47D&#39; AND &#39;C484&#39; THEN v_return :&#x3D; v_return || &#39;zhua&#39;; WHEN v_compare BETWEEN &#39;C485&#39; AND &#39;C486&#39; THEN v_return :&#x3D; v_return || &#39;zhuai&#39;; WHEN v_compare BETWEEN &#39;C488&#39; AND &#39;C4C0&#39; THEN v_return :&#x3D; v_return || &#39;zhuan&#39;; WHEN v_compare BETWEEN &#39;C4C2&#39; AND &#39;C4E5&#39; THEN v_return :&#x3D; v_return || &#39;zhuang&#39;; WHEN v_compare BETWEEN &#39;C4E6&#39; AND &#39;C51C&#39; THEN v_return :&#x3D; v_return || &#39;zhui&#39;; WHEN v_compare BETWEEN &#39;C51D&#39; AND &#39;C530&#39; THEN v_return :&#x3D; v_return || &#39;zhun&#39;; WHEN v_compare BETWEEN &#39;C534&#39; AND &#39;C5A5&#39; THEN v_return :&#x3D; v_return || &#39;zhuo&#39;; WHEN v_compare BETWEEN &#39;C5A8&#39; AND &#39;C648&#39; THEN v_return :&#x3D; v_return || &#39;zi&#39;; WHEN v_compare &#x3D; &#39;C64A&#39; THEN v_return :&#x3D; v_return || &#39;zo&#39;; WHEN v_compare BETWEEN &#39;C64C&#39; AND &#39;C6B5&#39; THEN v_return :&#x3D; v_return || &#39;zong&#39;; WHEN v_compare BETWEEN &#39;C6B6&#39; AND &#39;C6D6&#39; THEN v_return :&#x3D; v_return || &#39;zou&#39;; WHEN v_compare BETWEEN &#39;C6E1&#39; AND &#39;C714&#39; THEN v_return :&#x3D; v_return || &#39;zu&#39;; WHEN v_compare BETWEEN &#39;C715&#39; AND &#39;C72D&#39; THEN v_return :&#x3D; v_return || &#39;zuan&#39;; WHEN v_compare BETWEEN &#39;C72E&#39; AND &#39;C75E&#39; THEN v_return :&#x3D; v_return || &#39;zui&#39;; WHEN v_compare BETWEEN &#39;C760&#39; AND &#39;C776&#39; THEN v_return :&#x3D; v_return || &#39;zun&#39;; WHEN v_compare BETWEEN &#39;C77A&#39; AND &#39;C7B4&#39; THEN v_return :&#x3D; v_return || &#39;zuo&#39;; ELSE v_return :&#x3D; v_return || v_substr; END CASE; END LOOP; END CASE; RETURN v_return;END fn_getpy; --select fn_getpy(&#39;帅哥&#39;) from dual;","categories":[{"name":"Oracle","slug":"Oracle","permalink":"https://github.com/wangqi1994/wangqi1994.github.io/categories/Oracle/"}],"tags":[{"name":"Oracle","slug":"Oracle","permalink":"https://github.com/wangqi1994/wangqi1994.github.io/tags/Oracle/"}]},{"title":"JVM内存不要超过32G","slug":"JVM内存不要超过32G","date":"2020-05-18T04:00:00.000Z","updated":"2020-05-18T04:00:00.000Z","comments":true,"path":"2020/05/18/JVM内存不要超过32G/","link":"","permalink":"https://github.com/wangqi1994/wangqi1994.github.io/2020/05/18/JVM%E5%86%85%E5%AD%98%E4%B8%8D%E8%A6%81%E8%B6%85%E8%BF%8732G/","excerpt":"","text":"事实上jvm在内存小于32G的时候会采用一个内存对象指针压缩技术。 在java中，所有的对象都分配在堆上，然后有一个指针引用它。指向这些对象的指针大小通常是CPU的字长的大小，不是32bit就是64bit，这取决于你的处理器，指针指向了你的值的精确位置。 对于32位系统，你的内存最大可使用4G。对于64系统可以使用更大的内存。但是64位的指针意味着更大的浪费，因为你的指针本身大了。浪费内存不算，更糟糕的是，更大的指针在主内存和缓存器（例如LLC, L1等）之间移动数据的时候，会占用更多的带宽。 Java 使用一个叫内存指针压缩的技术来解决这个问题。它的指针不再表示对象在内存中的精确位置，而是表示偏移量。这意味着32位的指针可以引用40亿个对象，而不是40亿个字节。最终，也就是说堆内存长到32G的物理内存，也可以用32bit的指针表示。 一旦你越过那个神奇的30-32G的边界，指针就会切回普通对象的指针，每个对象的指针都变长了，就会使用更多的CPU内存带宽，也就是说你实际上失去了更多的内存。事实上当内存到达40-50GB的时候，有效内存才相当于使用内存对象指针压缩技术时候的32G内存。 原文地址","categories":[{"name":"ruozedata","slug":"ruozedata","permalink":"https://github.com/wangqi1994/wangqi1994.github.io/categories/ruozedata/"},{"name":"Hadoop","slug":"Hadoop","permalink":"https://github.com/wangqi1994/wangqi1994.github.io/categories/Hadoop/"}],"tags":[{"name":"ruozedata","slug":"ruozedata","permalink":"https://github.com/wangqi1994/wangqi1994.github.io/tags/ruozedata/"},{"name":"Hadoop","slug":"Hadoop","permalink":"https://github.com/wangqi1994/wangqi1994.github.io/tags/Hadoop/"}]},{"title":"SLA服务可用性4个9是什么意思？怎么达到？","slug":"SLA服务","date":"2020-05-18T04:00:00.000Z","updated":"2020-05-18T04:00:00.000Z","comments":true,"path":"2020/05/18/SLA服务/","link":"","permalink":"https://github.com/wangqi1994/wangqi1994.github.io/2020/05/18/SLA%E6%9C%8D%E5%8A%A1/","excerpt":"","text":"SLA服务可用性4个9是什么意思？怎么达到？ SLA：服务等级协议（简称：SLA，全称：service level agreement）。是在一定开销下为保障服务的性能和可用性，服务提供商与用户间定义的一种双方认可的协定。通常这个开销是驱动提供服务质量的主要因素。 SLA的定义来源百度，这到底是什么意思呢？ 我们平常经常看到互联网公司喊口号，我们今年一定要做到3个9、4个9，即99.9%、99.99%，甚至还有5个9，即99.999%。 这么多9代表什么意思呢？ 首先，SLA的概念，对互联网公司来说就是网站服务可用性的一个保证。9越多代表全年服务可用时间越长服务更可靠，停机时间越短，反之亦然。 这么多9是怎么计算的呢？ 全年拿365天做计算吧，看看几个9要停机多久时间做能才能达到！ 1年 = 365天 = 8760小时 99.9 = 8760 * 0.1% = 8760 * 0.001 = 8.76小时 99.99 = 8760 * 0.0001 = 0.876小时 = 0.876 * 60 = 52.6分钟 99.999 = 8760 * 0.00001 = 0.0876小时 = 0.0876 * 60 = 5.26分钟 从以上看来，全年停机5.26分钟才能做到99.999%，即5个9。依此类推，要达到6个9及更多9，可说是非常难了吧。 怎么做到更多的9 每个公司对几个9的定义都不一样，互联网公司至少都是99.99吧。像一些政府网站，如社保公积金等，经常故障服务不可用，能做到99.9就不错了。 如果我们提供的服务可用性越低，意味着造成的损失也越大，别的不说，如果是特别重要的时刻，或许就在某一分钟，你可能就会因服务不可用而丢掉一笔大的订单，这都是始料未及的。所以，只要尽可能的提升SLA可用性才能最大化的提高企业生产力。 要做到更多的9，就要不断的监控自己的服务，服务挂掉能及时恢复服务。就像开车出远门，首先得检查轮胎，同时还得准备一个备胎一样的道理。 https://blog.csdn.net/youanyyou/article/details/79406515","categories":[{"name":"拓展","slug":"拓展","permalink":"https://github.com/wangqi1994/wangqi1994.github.io/categories/%E6%8B%93%E5%B1%95/"}],"tags":[{"name":"拓展","slug":"拓展","permalink":"https://github.com/wangqi1994/wangqi1994.github.io/tags/%E6%8B%93%E5%B1%95/"}]},{"title":"yarn调优-container","slug":"yarn调优-container","date":"2020-05-18T04:00:00.000Z","updated":"2020-05-18T04:00:00.000Z","comments":true,"path":"2020/05/18/yarn调优-container/","link":"","permalink":"https://github.com/wangqi1994/wangqi1994.github.io/2020/05/18/yarn%E8%B0%83%E4%BC%98-container/","excerpt":"","text":"关于Yarn的调优 就是调container首先明确一个container容器的概念，这是一个虚拟的概念，其实是一组memory+cpu vcore资源的组合,是用来运行task任务的 生产如何调优container参数？ 假设128G 16物理core 1.1 系统装完之后， 内存消耗1G1.2 系统预留20%内存（包含1G）128G*20%=25.6G==26G 为什么预留内存？oom-kill机制Linux系统防止夯住给未来部署组件预留空间 1.3 假设只有DN NM节点生产上部署一般遵循存储技术一体，90%以上都是dn和nn放一起，就是计算时发现本节点有数据不需要去其他节点拉取，节省网络io，这种一般叫做 数据本地化 DN=2G 在生产上一般设置2G即可在实际中业务高峰时用了900M，（由于是分布式存储，且存在多个dn节点，每秒一般没有1G的流量，况且还有一定的缓存在发挥作用）当然在资源要求不是很严格且内存充足，不需要扣扣搜搜的时候，可以设置3G/4G NM=4G 生产上一般4G一般资源比较紧缺时，就是在NM这里抠资源 去除掉系统预留、dn和nm之外，剩余资源全部给真正干活的小弟container用 128-26=102-2-4=96G 1.4 container内存设置，基于内存考虑设置yarn-site.xml文件中的参数 12345678910111213141516[hadoop@hadoop001 hadoop]$ pwd/home/hadoop/app/hadoop/etc/hadoop[hadoop@hadoop001 hadoop]$ vi yarn-site.xml &lt;property&gt; &lt;name&gt;yarn.nodemanager.resource.memory-mb&lt;/name&gt; &lt;value&gt;96&lt;/value&gt; # 该参数控制所有container内存之和,生产上需要调整，默认只有8G &lt;/property&gt; &lt;property&gt; &lt;name&gt;yarn.scheduler.minimum-allocation-mb&lt;/name&gt; &lt;value&gt;1&lt;/value&gt; #container容器内存最小值，默认1G &lt;/property&gt; #在极限情况下，会存在96个container，每个内存1G &lt;property&gt; &lt;name&gt;yarn.scheduler.maximum-allocation-mb&lt;/name&gt; &lt;value&gt;96&lt;/value&gt; #container容器内存最大值，官方默认8G，应该改为上面参数的最大值 &lt;/property&gt; #在极限情况下，会存在1个container，内存96G，这种情况少 container容器的内存会根据实际情况自动增加，默认1G递增cdh中yarn配置的 但是一般不调整 1.5 container vcore 基于cpu考虑目前的CPU被划分成虚拟CPU（CPU virtual Core），这里的虚拟CPU是YARN自己引入的概念，初衷是，考虑到不同节点的CPU性能可能不同，每个CPU具有的计算能力也是不一样的，比如某个物理CPU的计算能力可能是另外一个物理CPU的2倍，这时候，你可以通过为第一个物理CPU多配置几个虚拟CPU弥补这种差异。用户提交作业时，可以指定每个任务需要的虚拟CPU个数。在YARN中，CPU相关配置参数如下：（1）yarn.nodemanager.resource.cpu-vcores表示该节点上YARN可使用的虚拟CPU个数，默认是8，注意，目前推荐将该值设值为与物理CPU核数数目相同。如果你的节点CPU核数不够8个，则需要调减小这个值，而YARN不会智能的探测节点的物理CPU总数。（2）yarn.scheduler.minimum-allocation-vcores单个任务可申请的最小虚拟CPU个数，默认是1，如果一个任务申请的CPU个数少于该数，则该对应的值改为这个数。（3）yarn.scheduler.maximum-allocation-vcores单个任务可申请的最多虚拟CPU个数，默认是32。默认情况下，YARN是不会对CPU资源进行调度的，你需要配置相应的资源调度器。 举例说明：第一台机器 强悍 pcore:vcore=1:2 16core:32vcore第二台机器 不强悍 pcore:vcore=1:1 16core:16core 现在生产上基本上不考虑设置强悍程度统一 设置 pcore:vcore=1:2 为什么要设置 vcore 1:2呢？container需要vcore并发任务是靠vcore 12345678910111213141516&lt;property&gt; &lt;name&gt;yarn.nodemanager.resource.pcores-vcores-multiplier&lt;/name&gt; &lt;value&gt;2&lt;/value&gt; # pcore:vcore=1:2&lt;/property&gt; &lt;property&gt; &lt;name&gt;yarn.nodemanager.resource.cpu-vcores&lt;/name&gt; &lt;value&gt;32&lt;/value&gt; # 可用虚拟vcore数&lt;/property&gt;&lt;property&gt; &lt;name&gt;yarn.scheduler.minimum-allocation-vcores&lt;/name&gt; &lt;value&gt;1&lt;/value&gt; #可用虚拟vcore最小数，极限情况下 是32个&lt;/property&gt;&lt;property&gt; &lt;name&gt;yarn.scheduler.maximum-allocation-vcores&lt;/name&gt; &lt;value&gt;32&lt;/value&gt; #可用虚拟vcore最大数，极限情况下 是1个&lt;/property&gt; 1.6 生产如何设置 基于生产经验cloudera公司推荐，一个container的vcore最好不要超过5个，那么设置4 yarn.scheduler.maximum-allocation-vcores 4 极限情况下，只有8个container 1.7 整合memory cpu确定 4 vcore 8个container 123456789101112&lt;property&gt; &lt;name&gt;yarn.nodemanager.resource.memory-mb&lt;/name&gt; &lt;value&gt;96&lt;/value&gt; # 该参数控制所有container内存之和,生产上需要调整，默认只有8G&lt;/property&gt;&lt;property&gt; &lt;name&gt;yarn.scheduler.minimum-allocation-mb&lt;/name&gt; &lt;value&gt;1&lt;/value&gt; #container容器内存最小值，默认1G &lt;/property&gt; #在极限情况下，会存在96个container，每个内存1G&lt;property&gt; &lt;name&gt;yarn.scheduler.maximum-allocation-mb&lt;/name&gt; &lt;value&gt;12&lt;/value&gt; #container容器内存最大值，官方默认8G，应该改为上面参数的最大值 &lt;/property&gt; # 极限情况container 8个,所以设置为12G 但是spark计算时内存有些指标比较大，那么这个参数必然调大，那么这种理想化，完美化的设置必然被打破，到时以memory为主，可以提升内存的量 12345678910111213141516&lt;property&gt; &lt;name&gt;yarn.nodemanager.resource.pcores-vcores-multiplier&lt;/name&gt; &lt;value&gt;2&lt;/value&gt; # pcore:vcore=1:2&lt;/property&gt; &lt;property&gt; &lt;name&gt;yarn.nodemanager.resource.cpu-vcores&lt;/name&gt; &lt;value&gt;32&lt;/value&gt; # 可用虚拟vcore数&lt;/property&gt;&lt;property&gt; &lt;name&gt;yarn.scheduler.minimum-allocation-vcores&lt;/name&gt; &lt;value&gt;1&lt;/value&gt; #可用虚拟vcore最小数，极限情况下 是32个&lt;/property&gt;&lt;property&gt; &lt;name&gt;yarn.scheduler.maximum-allocation-vcores&lt;/name&gt; &lt;value&gt;4&lt;/value&gt; #可用虚拟vcore最大数，极限情况下 是1个&lt;/property&gt; 生产上机器内存大小最好不要超过32G,调优参数不是越大越好30-32g比较神奇https://blog.csdn.net/weixin_44641024/article/details/103248842 补充设置：yarn.nodemanager.pmem-check-enabled false #是否将对容器实施物理内存限制 一般关闭yarn.nodemanager.vmem-check-enabled falseyarn.nodemanager.vmem-pmem-ratio 2.1 就是有个虚拟内存的概念 一般不要 不要调整这个参数 1.7 笔试题假如该节点还有其他组件，比如HBase RS节点256G内存cpu物理core 32核 DNNMHBase RS=30G 请问以上6个参数如何设置？预留256*20%=51.8G暂定52Gdn=2Gnm=4GHBase RS=30Gcontainer 总内存256-52-2-4-30=168G物理core32，设置pcore：vcore=1：2vcore =64一般设置vcore最大4，那么container有16个所以每个内存最大是10G 12345678910111213141516171819202122232425262728293031# cpu参数 &lt;property&gt; &lt;name&gt;yarn.nodemanager.resource.pcores-vcores-multiplier&lt;/name&gt; &lt;value&gt;2&lt;/value&gt; # pcore:vcore=1:2 &lt;/property&gt; &lt;property&gt; &lt;name&gt;yarn.nodemanager.resource.cpu-vcores&lt;/name&gt; &lt;value&gt;64&lt;/value&gt; # 可用虚拟vcore数 &lt;/property&gt; &lt;property&gt; &lt;name&gt;yarn.scheduler.minimum-allocation-vcores&lt;/name&gt; &lt;value&gt;1&lt;/value&gt; #可用虚拟vcore最小数，极限情况下 是32个 &lt;/property&gt; &lt;property&gt; &lt;name&gt;yarn.scheduler.maximum-allocation-vcores&lt;/name&gt; &lt;value&gt;4&lt;/value&gt; &lt;/property&gt; #内存参数 &lt;property&gt; &lt;name&gt;yarn.nodemanager.resource.memory-mb&lt;/name&gt; &lt;value&gt;168&lt;/value&gt; # 该参数控制所有container内存之和,生产上需要调整，默认只有8G &lt;/property&gt; &lt;property&gt; &lt;name&gt;yarn.scheduler.minimum-allocation-mb&lt;/name&gt; &lt;value&gt;1&lt;/value&gt; #container容器内存最小值，默认1G &lt;/property&gt; #在极限情况下，会存在96个container，每个内存1G &lt;property&gt; &lt;name&gt;yarn.scheduler.maximum-allocation-mb&lt;/name&gt; &lt;value&gt;10&lt;/value&gt; #container容器内存最大值，官方默认8G，应该改为上面参数的最大值 &lt;/property&gt; # 极限情况container 16个,所以设置为10G","categories":[{"name":"ruozedata","slug":"ruozedata","permalink":"https://github.com/wangqi1994/wangqi1994.github.io/categories/ruozedata/"},{"name":"Hadoop","slug":"Hadoop","permalink":"https://github.com/wangqi1994/wangqi1994.github.io/categories/Hadoop/"}],"tags":[{"name":"ruozedata","slug":"ruozedata","permalink":"https://github.com/wangqi1994/wangqi1994.github.io/tags/ruozedata/"},{"name":"Hadoop","slug":"Hadoop","permalink":"https://github.com/wangqi1994/wangqi1994.github.io/tags/Hadoop/"}]},{"title":"数仓培训第十三天","slug":"若泽大数据-剑指数仓培训笔记13","date":"2020-05-18T04:00:00.000Z","updated":"2020-05-18T04:00:00.000Z","comments":true,"path":"2020/05/18/若泽大数据-剑指数仓培训笔记13/","link":"","permalink":"https://github.com/wangqi1994/wangqi1994.github.io/2020/05/18/%E8%8B%A5%E6%B3%BD%E5%A4%A7%E6%95%B0%E6%8D%AE-%E5%89%91%E6%8C%87%E6%95%B0%E4%BB%93%E5%9F%B9%E8%AE%AD%E7%AC%94%E8%AE%B013/","excerpt":"","text":"1.Container关于Yarn的调优 就是调container首先明确一个container容器的概念，这是一个虚拟的概念，其实是一组memory+cpu vcore资源的组合,是用来运行task任务的 2.bin/hadoop jar share/hadoop/mapreduce/hadoop-mapreduce-examples-2.6.0-cdh5.16.2.jar grep /wordcount/input /wordcount/output2 ‘dfs[a-z.]+’ 日志通过web界面查看点击对应任务，查看logs一般看stderr 生产上应该快速解决问题，着重于快速让生产恢复而不是揪着不放，研究透彻 3.调度器FIFO Scheduler 先进先出Capacity Scheduler 计算FairScheduler 公平 生产一般用这个 三种调度器","categories":[{"name":"ruozedata","slug":"ruozedata","permalink":"https://github.com/wangqi1994/wangqi1994.github.io/categories/ruozedata/"},{"name":"Hadoop","slug":"Hadoop","permalink":"https://github.com/wangqi1994/wangqi1994.github.io/categories/Hadoop/"}],"tags":[{"name":"ruozedata","slug":"ruozedata","permalink":"https://github.com/wangqi1994/wangqi1994.github.io/tags/ruozedata/"},{"name":"Hadoop","slug":"Hadoop","permalink":"https://github.com/wangqi1994/wangqi1994.github.io/tags/Hadoop/"}]},{"title":"调度器","slug":"调度器","date":"2020-05-18T04:00:00.000Z","updated":"2020-05-18T04:00:00.000Z","comments":true,"path":"2020/05/18/调度器/","link":"","permalink":"https://github.com/wangqi1994/wangqi1994.github.io/2020/05/18/%E8%B0%83%E5%BA%A6%E5%99%A8/","excerpt":"","text":"三种调度器FIFO Scheduler 先进先出Capacity Scheduler 计算FairScheduler 公平 生产一般用这个 1.FIFO SchedulerFIFO Scheduler把应用按提交的顺序排成一个队列，这是一个先进先出队列，在进行资源分配的时候，先给队列中最头上的应用进行分配资源，待最头上的应用需求满足后再给下一个分配，以此类推。FIFO Scheduler是最简单也是最容易理解的调度器，也不需要任何配置，但它并不适用于共享集群。大的应用可能会占用所有集群资源，这就导致其它应用被阻塞。在共享集群中，更适合采用Capacity Scheduler或Fair Scheduler，这两个调度器都允许大任务和小任务在提交的同时获得一定的系统资源。 2.Capacity Scheduler对于Capacity调度器，有一个专门的队列用来运行小任务，但是为小任务专门设置一个队列会预先占用一定的集群资源，这就导致大任务的执行时间会落后于使用FIFO调度器时的时间。 3.Fair Scheduler在Fair调度器中，我们不需要预先占用一定的系统资源，Fair调度器会为所有运行的job动态的调整系统资源。当第一个大job提交时，只有这一个job在运行，此时它获得了所有集群资源；当第二个小任务提交后，Fair调度器会分配一半资源给这个小任务，让这两个任务公平的共享集群资源。 需要注意的是在Fair调度器中，从第二个任务提交到获得资源会有一定的延迟，因为它需要等待第一个任务释放占用的Container。小任务执行完成之后也会释放自己占用的资源，大任务又获得了全部的系统资源。最终的效果就是Fair调度器即得到了高的资源利用率又能保证小任务及时完成。","categories":[{"name":"ruozedata","slug":"ruozedata","permalink":"https://github.com/wangqi1994/wangqi1994.github.io/categories/ruozedata/"},{"name":"Hadoop","slug":"Hadoop","permalink":"https://github.com/wangqi1994/wangqi1994.github.io/categories/Hadoop/"}],"tags":[{"name":"ruozedata","slug":"ruozedata","permalink":"https://github.com/wangqi1994/wangqi1994.github.io/tags/ruozedata/"},{"name":"Hadoop","slug":"Hadoop","permalink":"https://github.com/wangqi1994/wangqi1994.github.io/tags/Hadoop/"}]},{"title":"MapReduce2.x 架构设计","slug":"MapReduce2.x的架构设计","date":"2020-05-17T04:00:00.000Z","updated":"2020-05-17T04:00:00.000Z","comments":true,"path":"2020/05/17/MapReduce2.x的架构设计/","link":"","permalink":"https://github.com/wangqi1994/wangqi1994.github.io/2020/05/17/MapReduce2.x%E7%9A%84%E6%9E%B6%E6%9E%84%E8%AE%BE%E8%AE%A1/","excerpt":"","text":"MapReduce2.x 架构设计又可以称为 mr on yarn提交流程 yarn的架构设计 1 container 容器首先明确一个container容器的概念，这是一个虚拟的概念，其实是一组memory+cpu vcore资源的组合Container 是 YARN 中的资源抽象，它封装了某个节点上的多维度资源，如内存、 CPU、磁盘、网络等，当 AM 向 RM 申请资源时，RM 为 AM 返回的资源便是用 Container 表示的。YARN 会为每个任务分配一个 Container，且该任务只能使用该 Container 中描述的 资源。容器是一个动态划分资源。 在内存够的情况下，适当增加cpu vcore带来计算效率的提升 2 架构mapreduce也是主从架构Resourcemanager是主，简称 rm ，包含： ApplicationsManager 应用管理器 作业和程序等提交到的地方 ResourceScheduler 资源调度器 NodeManager是从，简称nm 工作流程 1.client向rm提交应用程序（jar） 其中已经包含ApplicationMaster主程序和启动命令2.ApplicationsManager 会为job分配第一个container，并与对应的nodemanager通信，要求他在这个container中启动ApplicationMaster3.Applicationmaster向 ApplicationsManager注册，用户就可以在yarn的web界面看到这个job的运行状态4.Applicationmaster采取轮询的方式，通过【RPC】协议向ResourceScheduler申请和领取资源列表（信息包括哪台nm 多少内存 多少cpu vcore）5.一旦app master拿到资源列表，就和对应的nm进程通信，要求启动任务task 计算代码6.NM为任务设置好运行环境(container容器 包含jar包等资源) ，将任务启动命令写在一个脚本里，并通过该脚本启动任务task7.各个任务task通过【RPC】协议向app master汇报自己的进度和状态，以此让app master随时掌握task的运行状态。当task运行失败，会在另外一个container容器中重启任务。 8.当所有task运行完成后，app master向 apps manager申请注销和关闭作业这时可以在web页面查看任务状态，包含两种状态： 是不是完成的 完成的是成功还是失败的","categories":[{"name":"ruozedata","slug":"ruozedata","permalink":"https://github.com/wangqi1994/wangqi1994.github.io/categories/ruozedata/"},{"name":"Hadoop","slug":"Hadoop","permalink":"https://github.com/wangqi1994/wangqi1994.github.io/categories/Hadoop/"}],"tags":[{"name":"ruozedata","slug":"ruozedata","permalink":"https://github.com/wangqi1994/wangqi1994.github.io/tags/ruozedata/"},{"name":"Hadoop","slug":"Hadoop","permalink":"https://github.com/wangqi1994/wangqi1994.github.io/tags/Hadoop/"}]},{"title":"LInux系统需要牢牢记住的两个机制","slug":"牢记两个机制","date":"2020-05-17T04:00:00.000Z","updated":"2020-05-17T04:00:00.000Z","comments":true,"path":"2020/05/17/牢记两个机制/","link":"","permalink":"https://github.com/wangqi1994/wangqi1994.github.io/2020/05/17/%E7%89%A2%E8%AE%B0%E4%B8%A4%E4%B8%AA%E6%9C%BA%E5%88%B6/","excerpt":"","text":"基于Linux系统进行作业时，需要牢记两个Linux的自身机制，否则容易出现各种花式问题 1.tmp目录自动清理 tmp自动清理总结 所以一些重要的文件和不能被删除的文件，千万不要放在tmp目录，所以在安装组件和运行组件前，一定要确定文件不要默认放在tmp目录 2.oom-kill机制 当Linux服务器某个进程使用内存超标 Linux机器为了保护自己，主动杀死你的进程，释放内存。 所以系统一定要确定保留部分内存，不要内存全部占用一般系统预留10-20% 一定要注意这两个机制！！！！！","categories":[{"name":"ruozedata","slug":"ruozedata","permalink":"https://github.com/wangqi1994/wangqi1994.github.io/categories/ruozedata/"},{"name":"Linux","slug":"Linux","permalink":"https://github.com/wangqi1994/wangqi1994.github.io/categories/Linux/"}],"tags":[{"name":"ruozedata","slug":"ruozedata","permalink":"https://github.com/wangqi1994/wangqi1994.github.io/tags/ruozedata/"},{"name":"Linux","slug":"Linux","permalink":"https://github.com/wangqi1994/wangqi1994.github.io/tags/Linux/"}]},{"title":"数仓培训第十二天","slug":"若泽大数据-剑指数仓培训笔记12","date":"2020-05-17T04:00:00.000Z","updated":"2020-05-17T04:00:00.000Z","comments":true,"path":"2020/05/17/若泽大数据-剑指数仓培训笔记12/","link":"","permalink":"https://github.com/wangqi1994/wangqi1994.github.io/2020/05/17/%E8%8B%A5%E6%B3%BD%E5%A4%A7%E6%95%B0%E6%8D%AE-%E5%89%91%E6%8C%87%E6%95%B0%E4%BB%93%E5%9F%B9%E8%AE%AD%E7%AC%94%E8%AE%B012/","excerpt":"","text":"1.MapReduce分布式计算框架 ，生产开发复杂累赘 基本不用一般都用Hivesql Spark Flink map 映射 将一组数据按照规则 映射为一组 数据条数不会发生变化 12345678910111213id name1 a2 b3 c4 aselect * from t;select id,name+'1' from t;1 a12 b13 c14 a1 reduce 归约 汇总,相同项进行归纳 数据条数会发生变化 12345678910selectname,count(name) from(select id,name+'1' as name from table) tgroup name;a1 2b1 1c1 1 shuffle 洗牌数据根据key进行网络传输??? 规整到一起，按规则计算 12345a机器 1 a 一百万条 #key就是名称，计算是根据名称计算的 a 2 b 10万条b机器 1 a 1万条 3 c 10万条 过程详解：大神分析业界有句话，能不shuffle的就不要shuffle，shuffle会拉长计算的时间 作业 job 应用 任务 工作流 基本就认为是一个东西生产上：存储 HDFS hive/hbase cassandra kudu #前三个用的多计算 mapreduce –》hive sql/spark/flink资源和作业调度 yarn 2.MapReduce2.x 架构设计MapReduce2.x的架构设计 3.wordcount 首先将文件进行splitting分块操作（split个数==map task个数），生成三个块然后根据一定的规则进行mapping映射操作（将每一行的数据 进行按空格 拆分）然后进行shuffling洗牌操作，这部分用户无感知然会进行reducing操作，进行归纳汇总最后输出结果 大神分析MapReduce工作原理图文详解 #好好理解在进行map计算之前，mapreduce会根据输入文件计算输入分片（input split），每个输入分片（input split）针对一个map任务，输入分片（input split）存储的并非数据本身，而是一个分片长度和一个记录数据的位置的数组，输入分片（input split）往往和hdfs的block（块）关系很密切，一般是一对一关系 假如我们设定hdfs的块的大小是64mb，如果我们输入有三个文件，大小分别是3mb、65mb和127mb，那么mapreduce会把3mb文件分为一个输入分片（input split），65mb则是两个输入分片（input split）而127mb也是两个输入分片（input split）， 5个分片 5个maptask 分片跟块大小有关 还和文件个数有关 换句话说我们需要在map计算前做输入分片调整，例如不合并小文件，那么就会有5个map任务将执行，而且每个map执行的数据大小不均，这个也是mapreduce优化计算的一个关键点。","categories":[{"name":"ruozedata","slug":"ruozedata","permalink":"https://github.com/wangqi1994/wangqi1994.github.io/categories/ruozedata/"},{"name":"Hadoop","slug":"Hadoop","permalink":"https://github.com/wangqi1994/wangqi1994.github.io/categories/Hadoop/"}],"tags":[{"name":"ruozedata","slug":"ruozedata","permalink":"https://github.com/wangqi1994/wangqi1994.github.io/tags/ruozedata/"},{"name":"Hadoop","slug":"Hadoop","permalink":"https://github.com/wangqi1994/wangqi1994.github.io/tags/Hadoop/"}]},{"title":"RAID0/RAID1/RAID5/RAID10介绍","slug":"RAID介绍","date":"2020-05-13T04:00:00.000Z","updated":"2020-05-13T04:00:00.000Z","comments":true,"path":"2020/05/13/RAID介绍/","link":"","permalink":"https://github.com/wangqi1994/wangqi1994.github.io/2020/05/13/RAID%E4%BB%8B%E7%BB%8D/","excerpt":"","text":"为了满足不同的数据传输效率和数据安全性需求，产生了我们熟知的RAID0、RAID1、RAID2、RAID3、RAID4、 RAID5、RAID6、RAID10、RAID50等不同级别的RAID，下面简要常用的RAID0/1/5/10特点及适用范围。 RAID0：RAID0又称为条带模式，是将多个磁盘并列起来，成为一个大磁盘。在存放数据时，其将数据按磁盘的 个数来进行分段，然后同时将这些数据写进这些盘中，所以在所有的级别中，RAID0的速度是最快的。但是RAID0没 有冗余功能，如果一个磁盘（物理）损坏，则所有的数据都会丢失。 RAID 0具有的特点，使其特别适用于对性能要求较高，而对数据安全不太在乎的领域，如图形工作站等。对于个人用户，RAID 0也是提高硬盘存储性能的绝佳选择。 RAID0逻辑结构如下所示： RAID1：RAID1也成为镜像，其将一个磁盘上的数据完全复制到另一个磁盘上。如果一个磁盘的数据发生错误， 或者磁盘出现了坏道，那么另一个磁盘可以补救回磁盘故障而造成的数据损失和系统中断。另外，RAID1还可 以实现双工—即可以复制整个控制器，这样在磁盘故障或控制器故障发生时，数据都可以得到保护。 镜像和双工的缺点是需要多出一倍数量的驱动器来复制数据，但系统的读写性能并不会由此而提高。 Mirror虽不能提高存储性能，但由于其具有的高数据安全性，使其尤其适用于存放重要数据，如服务器和数据库存储等领域。 RAID逻辑结构如下所示： RAID5：RAID5也被叫做带分布式奇偶位的条带，每个条带上都有相当于一个“块”那么大的地方被用来存放奇偶 位。与其他RAID级别相比，RAID5把奇偶位信息分布在所有的磁盘上，而并非一个磁盘上，大大减轻了奇偶校 验盘的负担，尽管有一些容量上的损失，但RAID5却能提供较为完善的整体性能，因而也是被广泛应用的一种 磁盘阵列方案。 RAID5逻辑结构如下所示： RAID10：RAID10可细分为RAID1+0和RAID0+1。RAID1+0是先镜像再分割资料，将所有硬盘分为两组，视为RAID0的最低组合，然后将这两组各自视为RAID1运 作，RAID1+0有着不错的读取速度，而且拥有比RIAD0更高的资料保护性。 RAID0+1则是跟RAID1+0的程序相反，是先分割再将资料镜像到两组硬盘。它将所有的硬盘分为两组，变成RAID1 的最低组合，而将两组硬盘各自视为RAID0运作。RAID0+1比起RAID1+0有着更快的读写速度，不过也多了一些会让 整个硬盘组停止运转的几率，因为只要同一组的硬盘全部损毁，RAID0+1就会停止运作，而RAID1+0则可以在牺牲 RAID0+1的优势下正常运作。 RAID巧妙地利用了RAID0的速度和RAID1的保护两种特性，不过它的缺点是需要的硬盘数较多，必须拥有至少四 个以上的偶数硬盘才能使用。 RAID 0+1的特点使其特别适用于既有大量数据需要存取，同时又对数据安全性要求严格的领域，如银行、金融、商业超市、仓储库房、各种档案管理等。","categories":[{"name":"Linux","slug":"Linux","permalink":"https://github.com/wangqi1994/wangqi1994.github.io/categories/Linux/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"https://github.com/wangqi1994/wangqi1994.github.io/tags/Linux/"}]},{"title":"SNN流程","slug":"SNN流程","date":"2020-05-13T04:00:00.000Z","updated":"2020-05-13T04:00:00.000Z","comments":true,"path":"2020/05/13/SNN流程/","link":"","permalink":"https://github.com/wangqi1994/wangqi1994.github.io/2020/05/13/SNN%E6%B5%81%E7%A8%8B/","excerpt":"","text":"SNN流程 123456789101112131415161718192021222324252627282930#SNN[hadoop@hadoop001 current]$ pwd/home/hadoop/tmp/dfs/namesecondary/current[hadoop@hadoop001 current]$ lltotal 197948-rw-rw-r--. 1 hadoop hadoop 42 May 13 08:09 edits_0000000000001114471-0000000000001114472-rw-rw-r--. 1 hadoop hadoop 42 May 13 09:09 edits_0000000000001114473-0000000000001114474-rw-rw-r--. 1 hadoop hadoop 42 May 13 10:09 edits_0000000000001114475-0000000000001114476-rw-rw-r--. 1 hadoop hadoop 2364 May 13 09:09 fsimage_0000000000001114474-rw-rw-r--. 1 hadoop hadoop 62 May 13 09:09 fsimage_0000000000001114474.md5-rw-rw-r--. 1 hadoop hadoop 2364 May 13 10:09 fsimage_0000000000001114476-rw-rw-r--. 1 hadoop hadoop 62 May 13 10:09 fsimage_0000000000001114476.md5-rw-rw-r--. 1 hadoop hadoop 205 May 13 10:09 VERSION[hadoop@hadoop001 current]$ #NN[hadoop@hadoop001 current]$ pwd/home/hadoop/tmp/dfs/name/current[hadoop@hadoop001 current]$ lltotal 198980-rw-rw-r--. 1 hadoop hadoop 42 May 13 08:09 edits_0000000000001114471-0000000000001114472-rw-rw-r--. 1 hadoop hadoop 42 May 13 09:09 edits_0000000000001114473-0000000000001114474-rw-rw-r--. 1 hadoop hadoop 42 May 13 10:09 edits_0000000000001114475-0000000000001114476-rw-rw-r--. 1 hadoop hadoop 1048576 May 13 10:09 edits_inprogress_0000000000001114477-rw-rw-r--. 1 hadoop hadoop 2364 May 13 09:09 fsimage_0000000000001114474-rw-rw-r--. 1 hadoop hadoop 62 May 13 09:09 fsimage_0000000000001114474.md5-rw-rw-r--. 1 hadoop hadoop 2364 May 13 10:09 fsimage_0000000000001114476-rw-rw-r--. 1 hadoop hadoop 62 May 13 10:09 fsimage_0000000000001114476.md5-rw-rw-r--. 1 hadoop hadoop 8 May 13 10:09 seen_txid-rw-rw-r--. 1 hadoop hadoop 205 May 11 15:32 VERSION[hadoop@hadoop001 current]$ 1.SNN将NN的日志文件edits475-476（图中487-488） 和镜像文件fsimage474（图中486） 接收 2.SNN将接收文件进行合并为镜像文件fsimage476（图中488） 3.SNN返回镜像文件fsimage476给NNNN自身进行edit操作，写入edit477 inprogress （图中489）","categories":[{"name":"Hadoop","slug":"Hadoop","permalink":"https://github.com/wangqi1994/wangqi1994.github.io/categories/Hadoop/"},{"name":"HDFS","slug":"HDFS","permalink":"https://github.com/wangqi1994/wangqi1994.github.io/categories/HDFS/"}],"tags":[{"name":"Hadoop","slug":"Hadoop","permalink":"https://github.com/wangqi1994/wangqi1994.github.io/tags/Hadoop/"},{"name":"HDFS","slug":"HDFS","permalink":"https://github.com/wangqi1994/wangqi1994.github.io/tags/HDFS/"}]},{"title":"数仓培训第十一天","slug":"若泽大数据-剑指数仓培训笔记11","date":"2020-05-13T04:00:00.000Z","updated":"2020-05-13T04:00:00.000Z","comments":true,"path":"2020/05/13/若泽大数据-剑指数仓培训笔记11/","link":"","permalink":"https://github.com/wangqi1994/wangqi1994.github.io/2020/05/13/%E8%8B%A5%E6%B3%BD%E5%A4%A7%E6%95%B0%E6%8D%AE-%E5%89%91%E6%8C%87%E6%95%B0%E4%BB%93%E5%9F%B9%E8%AE%AD%E7%AC%94%E8%AE%B011/","excerpt":"","text":"1.SNN的流程SNN流程 2.HDFS命令大数据中配置文件一般为/etc/conf/config 1234567891011121314151617181920212223242526272829303132333435[hadoop@hadoop001 hadoop]$ lltotal 164drwxr-xr-x. 2 hadoop hadoop 4096 Jun 3 2019 bin #可执行脚本 命令drwxr-xr-x. 2 hadoop hadoop 4096 Jun 3 2019 bin-mapreduce1drwxr-xr-x. 3 hadoop hadoop 4096 Jun 3 2019 clouderadrwxr-xr-x. 6 hadoop hadoop 4096 Jun 3 2019 etc #配置文件夹 conf/configdrwxr-xr-x. 5 hadoop hadoop 4096 Jun 3 2019 examples #例子drwxr-xr-x. 3 hadoop hadoop 4096 Jun 3 2019 examples-mapreduce1drwxr-xr-x. 2 hadoop hadoop 4096 Jun 3 2019 includedrwxr-xr-x. 3 hadoop hadoop 4096 Jun 3 2019 lib #lib目录 jar包drwxr-xr-x. 3 hadoop hadoop 4096 Jun 3 2019 libexec-rw-r--r--. 1 hadoop hadoop 85063 Jun 3 2019 LICENSE.txtdrwxrwxr-x. 3 hadoop hadoop 4096 May 11 15:33 logs #日志文件-rw-r--r--. 1 hadoop hadoop 14978 Jun 3 2019 NOTICE.txtdrwxrwxr-x. 2 hadoop hadoop 4096 May 11 16:53 output -rw-r--r--. 1 hadoop hadoop 43 May 11 17:00 part-r-00000-rw-r--r--. 1 hadoop hadoop 1366 Jun 3 2019 README.txtdrwxr-xr-x. 3 hadoop hadoop 4096 Jun 3 2019 sbin #启动 停止 重启脚本drwxr-xr-x. 4 hadoop hadoop 4096 Jun 3 2019 share #共享的drwxr-xr-x. 18 hadoop hadoop 4096 Jun 3 2019 src #源代码-rw-r--r--. 1 hadoop hadoop 0 May 11 17:00 _SUCCESS[hadoop@hadoop001 hadoop]$ cd bin[hadoop@hadoop001 bin]$ lltotal 92-rwxr-xr-x. 1 hadoop hadoop 5701 Jun 3 2019 hadoop-rwxr-xr-x. 1 hadoop hadoop 8443 Jun 3 2019 hadoop.cmd-rwxr-xr-x. 1 hadoop hadoop 12356 Jun 3 2019 hdfs-rwxr-xr-x. 1 hadoop hadoop 6915 Jun 3 2019 hdfs.cmd-rwxr-xr-x. 1 hadoop hadoop 5463 Jun 3 2019 mapred-rwxr-xr-x. 1 hadoop hadoop 5949 Jun 3 2019 mapred.cmd-rwxr-xr-x. 1 hadoop hadoop 1776 Jun 3 2019 rcc-rwxr-xr-x. 1 hadoop hadoop 12476 Jun 3 2019 yarn-rwxr-xr-x. 1 hadoop hadoop 10895 Jun 3 2019 yarn.cmd[hadoop@hadoop001 bin]$ # cmd是windows的脚本 生产上主要看三个目录libbinetc生产上用的最多的命令是a,c,d,e a.查看ls从shell文件查看可知 hadoop fs -ls= hdfs dfs -ls 1234567hadoop fs -ls / if [ \"$COMMAND\" = \"fs\" ] ; then CLASS=org.apache.hadoop.fs.FsShellhdfs dfs -ls / elif [ \"$COMMAND\" = \"dfs\" ] ; then CLASS=org.apache.hadoop.fs.FsShell b.上传下载:-get上传 -put 下载-copyToLocal 上传 -copyFromLocal 下载 c.创建文件夹hdfs dfs -mkdir 目录名 d.移动 拷贝hdfs dfs -mv 原位置 目标位置hdfs dfs -cp 源文件 目标文件位置、 生产上保险起见用拷贝，不咋用移动拷贝之后校验，如果不出问题，则返回删除原来的文件 e.删除-rm [-f] [-r|-R] [-skipTrash] …] 12345#回收站设置 core-site.xml &lt;property&gt; &lt;name&gt;fs.trash.interval&lt;/name&gt; #设置回收站保留有效期 &lt;value&gt;10080&lt;/value&gt; &lt;/property&gt; 在core-site.xml文件设置回收站保留时间，生产上设置10080=7天设置完之后，重启hdfs 1.生产上一定开启回收站！+回收站的有效期至少7天！！2.-skipTrash 是删除不经过回收站，慎用-skipTrash 不要加！！！ 使用CDH/HDP 要去检查是否开启 开启周期 12345678910111213[hadoop@hadoop001 hadoop]$ hdfs dfs -rm /1.log20/05/13 11:46:49 WARN util.NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable20/05/13 11:46:51 INFO fs.TrashPolicyDefault: Moved: 'hdfs://hadoop001:9000/1.log' to trash at: hdfs://hadoop001:9000/user/hadoop/.Trash/Current/1.log #进入回收站[hadoop@hadoop001 ~]$ hdfs dfs -ls /user/hadoop/.Trash/Current20/05/13 11:50:18 WARN util.NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicableFound 1 items-rw-r--r-- 1 hadoop supergroup 10 2020-05-12 09:40 /user/hadoop/.Trash/Current/1.log[hadoop@hadoop001 ~]$ hdfs dfs -rm -skipTrash /1.log20/05/13 13:48:24 WARN util.NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicableDeleted /1.log #直接删除[hadoop@hadoop001 ~]$ f.权限-chmod-chown g.checknativehadoop checknative 列出来不支持的压缩方式需要的话，只能自己编译，编译一般在国外环境下进行 1234567891011[hadoop@hadoop001 ~]$ hadoop checknative20/05/13 13:53:11 WARN util.NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicableNative library checking:hadoop: false zlib: false snappy: false lz4: false bzip2: false openssl: false 20/05/13 13:53:11 INFO util.ExitUtil: Exiting with status 1[hadoop@hadoop001 ~]$ h.safemode安全模式利用dfsadmin 管理员的权限 进行设置 123456hdfs dfsadmin -report #查看报告，可以设置进行监控+[-safemode &lt;enter | leave | get | wait&gt;]#安全模式-自我保护-不能写只能读hdfs dfsadmin -safemode enter #进入hdfs dfsadmin -safemode leave #离开 错误： Name node is in safe mode. 什么时候会安全模式：1.hdfs故障 nn 查看log日志根据错误去看看尝试能不能解决，和尝试先手动让他离开安全模式2.业务场景离线抽取sqoop datax kettle实时抽取 flume canal/maxwell进入安全模式之后要发邮件说明窗口期多长生产上要最小化的窗口维护注意：生产上不要频繁启动关闭hdfs，可能会出现起不来的情况 3.数据平衡各个DN节点的数据平衡sbin/start-balancer.sh的sh文件如下，使用这个sh文件调用bin”/hdfs start balancer命令 1234567891011# Start balancer daemon.\"$HADOOP_PREFIX\"/sbin/hadoop-daemon.sh --config $HADOOP_CONF_DIR --script \"$bin\"/hdfs start balancer $@[hadoop@hadoop001 hadoop]$ sbin/start-balancer.sh starting balancer, logging to /home/hadoop/app/hadoop-2.6.0-cdh5.16.2/logs/hadoop-hadoop-balancer-hadoop001.outTime Stamp Iteration# Bytes Already Moved Bytes Left To Move Bytes Being Moved[hadoop@hadoop001 hadoop]$ sbin/start-balancer.sh -threshold 10.0 # 默认是10 threshold = 10.0starting balancer, logging to /home/hadoop/app/hadoop-2.6.0-cdh5.16.2/logs/hadoop-hadoop-balancer-hadoop001.outTime Stamp Iteration# Bytes Already Moved Bytes Left To Move Bytes Being Moved[hadoop@hadoop001 hadoop]$ 每个节点的磁盘使用率-平均的磁盘使用率&lt; 10% 建议：生产上 从现在开始，每天进行./start-balancer.sh -threshold 10.0 操作，并且要放到业务低谷比如凌晨，每天定时的去做平衡操作，做平衡操作时，需要算一下能不能承载 如果传输量太大，可以调节平衡操作的网络带宽设置参数在hdfs-site.xml文件中添加 &lt;property&gt; &lt;name&gt;dfs.datanode.balance.bandwidthPerSec&lt;/name&gt; &lt;value&gt;50&lt;/value&gt; &lt;/property&gt;dfs.datanode.balance.bandwidthPerSec默认是10m/s10m/s–&gt;50m/s 单个DN的多块磁盘的数据均衡a.在投产前规划 (这个DN机器上 10块磁盘 2T 不做raid==》20T 大数据不用raid)配置多个磁盘在hdfs-site.xml文件中添加 1234&lt;property&gt; &lt;name&gt;dfs.datanode.data.dir&lt;/name&gt; &lt;value&gt;/data01,/data02,/data03&lt;/value&gt;#配置多块磁盘，中间以逗号分割&lt;/property&gt; 为什么要用多块物理磁盘 ？ 多个磁盘的 IO是叠加的 建议：规划时，和领导说明，磁盘不值钱，要规划两年的存储空间 服务器上面的硬盘不是越大越好 生产上2.5英寸 一万转 2T的性价比最高 b.在投产后 第一个月 1个磁盘 500G 已经使用480G 第二个月 新增一个磁盘： 如果第二个比第一个大的多的话就直接移动，然后做软连接回连 如果一样大就做磁盘均衡数据操作 如何多个磁盘 均衡数据？ hadoop-2.6.0-cdh5.16.2 dfs.disk.balancer.enabled #cdh包大了很多补丁，版本相当于打补丁=高版本apache hadoop 3.x dfs.disk.balancer.enabledapache hadoop 2.10 找不到 生产上Apache环境 只有3.x版本才支持，但是大部分公司是2.x所以这个特性用不了！！！ 在hdfs-site.xml文件中添加 1234&lt;property&gt; &lt;name&gt;dfs.disk.balancer.enabled&lt;&#x2F;name&gt; &lt;value&gt;true&lt;&#x2F;value&gt;&lt;&#x2F;property&gt; a.生成计划1234567[hadoop@hadoop001 hadoop]$ hdfs diskbalancer -plan hadoop00120/05/13 16:23:03 WARN util.NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable20/05/13 16:23:06 INFO planner.GreedyPlanner: Starting plan for Node : hadoop001:5002020/05/13 16:23:06 INFO planner.GreedyPlanner: Compute Plan for Node : hadoop001:50020 took 7 ms 20/05/13 16:23:08 INFO command.Command: No plan generated. DiskBalancing not needed for node: hadoop001 threshold used: 10.0[hadoop@hadoop001 hadoop]$ #生成 hadoop001.plan.json 文件 b.执行计划1234567891011121314151617181920212223[hadoop@hadoop001 hadoop]$ hdfs diskbalancer -execute hadoop001.plan.json20/05/13 16:26:14 INFO command.Command: Executing \"execute plan\" command20/05/13 16:26:14 WARN util.NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable20/05/13 16:26:15 ERROR tools.DiskBalancerCLI: java.io.FileNotFoundException: File does not exist: /user/hadoop/hadoop001.plan.json at org.apache.hadoop.hdfs.server.namenode.INodeFile.valueOf(INodeFile.java:66) at org.apache.hadoop.hdfs.server.namenode.INodeFile.valueOf(INodeFile.java:56) at org.apache.hadoop.hdfs.server.namenode.FSNamesystem.getBlockLocationsInt(FSNamesystem.java:2157) at org.apache.hadoop.hdfs.server.namenode.FSNamesystem.getBlockLocations(FSNamesystem.java:2127) at org.apache.hadoop.hdfs.server.namenode.FSNamesystem.getBlockLocations(FSNamesystem.java:2040) at org.apache.hadoop.hdfs.server.namenode.NameNodeRpcServer.getBlockLocations(NameNodeRpcServer.java:583) at org.apache.hadoop.hdfs.server.namenode.AuthorizationProviderProxyClientProtocol.getBlockLocations(AuthorizationProviderProxyClientProtocol.java:94) at org.apache.hadoop.hdfs.protocolPB.ClientNamenodeProtocolServerSideTranslatorPB.getBlockLocations(ClientNamenodeProtocolServerSideTranslatorPB.java:377) at org.apache.hadoop.hdfs.protocol.proto.ClientNamenodeProtocolProtos$ClientNamenodeProtocol$2.callBlockingMethod(ClientNamenodeProtocolProtos.java) at org.apache.hadoop.ipc.ProtobufRpcEngine$Server$ProtoBufRpcInvoker.call(ProtobufRpcEngine.java:617) at org.apache.hadoop.ipc.RPC$Server.call(RPC.java:1073) at org.apache.hadoop.ipc.Server$Handler$1.run(Server.java:2278) at org.apache.hadoop.ipc.Server$Handler$1.run(Server.java:2274) at java.security.AccessController.doPrivileged(Native Method) at javax.security.auth.Subject.doAs(Subject.java:422) at org.apache.hadoop.security.UserGroupInformation.doAs(UserGroupInformation.java:1924) at org.apache.hadoop.ipc.Server$Handler.run(Server.java:2272)[hadoop@hadoop001 hadoop]$ #没有json计划文件 c.查看状态123456[hadoop@hadoop001 hadoop]$ hdfs diskbalancer -query hadoop001 20/05/13 16:24:26 INFO command.Command: Executing \"query plan\" command.20/05/13 16:24:26 WARN util.NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicablePlan File: Plan ID: Result: NO_PLAN 生产上发现磁盘不均衡时，不需要每天做磁盘均衡，半个月一次即可 官方参考文档 基础扩展： 合并小文件可以使用spark coalescehdfs hbase没有小文件，会自动合并","categories":[{"name":"Hadoop","slug":"Hadoop","permalink":"https://github.com/wangqi1994/wangqi1994.github.io/categories/Hadoop/"},{"name":"HDFS","slug":"HDFS","permalink":"https://github.com/wangqi1994/wangqi1994.github.io/categories/HDFS/"}],"tags":[{"name":"Hadoop","slug":"Hadoop","permalink":"https://github.com/wangqi1994/wangqi1994.github.io/tags/Hadoop/"},{"name":"HDFS","slug":"HDFS","permalink":"https://github.com/wangqi1994/wangqi1994.github.io/tags/HDFS/"}]},{"title":"HDFS写流程","slug":"HDFS写流程","date":"2020-05-11T04:00:00.000Z","updated":"2020-05-11T04:00:00.000Z","comments":true,"path":"2020/05/11/HDFS写流程/","link":"","permalink":"https://github.com/wangqi1994/wangqi1994.github.io/2020/05/11/HDFS%E5%86%99%E6%B5%81%E7%A8%8B/","excerpt":"","text":"HDFS写流程 123456789101112[hadoop@hadoop001 ~]$ echo 'ruozedata' &gt;1.log[hadoop@hadoop001 ~]$ hdfs dfs -put 1.log /20/05/12 09:40:38 WARN util.NativeCodeLoader: Unable to load native-hadoop library for your platform...\\ using builtin-java classes where applicable[hadoop@hadoop001 ~]$ hdfs dfs -ls /20/05/12 09:40:51 WARN util.NativeCodeLoader: Unable to load native-hadoop library for your platform...\\ using builtin-java classes where applicableFound 4 items-rw-r--r-- 1 hadoop supergroup 10 2020-05-12 09:40 /1.logdrwx------ - hadoop supergroup 0 2020-05-11 16:19 /tmpdrwxr-xr-x - hadoop supergroup 0 2020-05-11 15:35 /usrdrwxr-xr-x - hadoop supergroup 0 2020-05-11 16:57 /wordcount2 写入操作对用户操作是无感知的流程：1.HDFS Client（client外框是操作系统，操作机器）调用FileSystem.create(filePath)方法，去和NN进行【RPC】通信！NN 会去check这个路径的文件是否已经存在，是否有权限能够创建这个文件！假如都ok，就去创建一个新的文件，但是这时还没写数据，是不关联任何的block。nn根据上传的文件大小，根据块大小+副本数参数，计算要上传多少块和块存储在DN的位置。最终将这些信息返回给客户端，作为【FSDataOutputStream】对象 2.Client调用【FSDataOutputStream】对象的write方法，将第一个块的第一个副本数写第一个DN节点，写完去第二个副本写DN2；写完去第三个副本写DN3。当第三个副本写完，就返回一个ack packet确定包给DN2节点，当DN2节点收到这个ack packet确定包加上自己也是写完了，就返回一个ack packet确定包给第一个DN1节点，当DN1节点收到这个ack packet确定包加上自己也是写完了，将ack packet确定包返回给【FSDataOutputStream】对象，就标识第一个块的三个副本写完。，其他块以此类推！ 3.当所有的块全部写完， client调用 【FSDataOutputStream】对象的close方法，关闭输出流。关闭输出流之后刷缓存区的数据（可不做）再次调用FileSystem.complete方法，告诉nn文件写成功！ 伪分布式 1台dn 副本数参数必然是设置1dn挂了，肯定不能写入 生产分布式 3台dn 副本数参数必然是设置3dn挂了，肯定不能写入 生产分布式 &gt;3台dn 副本数参数必然是设置3dn挂了，能写入 存活的alive dn节点数&gt;=副本数 就能写成功 建议副本数为3，多余数据无太大用","categories":[{"name":"Hadoop","slug":"Hadoop","permalink":"https://github.com/wangqi1994/wangqi1994.github.io/categories/Hadoop/"},{"name":"HDFS","slug":"HDFS","permalink":"https://github.com/wangqi1994/wangqi1994.github.io/categories/HDFS/"}],"tags":[{"name":"Hadoop","slug":"Hadoop","permalink":"https://github.com/wangqi1994/wangqi1994.github.io/tags/Hadoop/"},{"name":"HDFS","slug":"HDFS","permalink":"https://github.com/wangqi1994/wangqi1994.github.io/tags/HDFS/"}]},{"title":"HDFS副本放置策略","slug":"HDFS副本放置策略","date":"2020-05-11T04:00:00.000Z","updated":"2020-05-11T04:00:00.000Z","comments":true,"path":"2020/05/11/HDFS副本放置策略/","link":"","permalink":"https://github.com/wangqi1994/wangqi1994.github.io/2020/05/11/HDFS%E5%89%AF%E6%9C%AC%E6%94%BE%E7%BD%AE%E7%AD%96%E7%95%A5/","excerpt":"","text":"机架 rack1 5 rack2 5 生产上读写操作 尽量选择 某个DN节点第一个副本：放置在上传的DN节点； (nn和dn放一个副本中，有利于提升速度)假如是非DN节点，就随机挑选一个磁盘不太慢，cpu不太忙的节点； 第二个副本：放置在第一个副本不同的机架上的某个DN节点。 第三个副本:与第二个副本相同机架的不同节点上。 如果副本数设置更多，就随机放。 机架安装考虑用电和机架的安装能力 生产上一般不配置","categories":[{"name":"Hadoop","slug":"Hadoop","permalink":"https://github.com/wangqi1994/wangqi1994.github.io/categories/Hadoop/"},{"name":"HDFS","slug":"HDFS","permalink":"https://github.com/wangqi1994/wangqi1994.github.io/categories/HDFS/"}],"tags":[{"name":"Hadoop","slug":"Hadoop","permalink":"https://github.com/wangqi1994/wangqi1994.github.io/tags/Hadoop/"},{"name":"HDFS","slug":"HDFS","permalink":"https://github.com/wangqi1994/wangqi1994.github.io/tags/HDFS/"}]},{"title":"HDFS读流程","slug":"HDFS读流程","date":"2020-05-11T04:00:00.000Z","updated":"2020-05-11T04:00:00.000Z","comments":true,"path":"2020/05/11/HDFS读流程/","link":"","permalink":"https://github.com/wangqi1994/wangqi1994.github.io/2020/05/11/HDFS%E8%AF%BB%E6%B5%81%E7%A8%8B/","excerpt":"","text":"HDFS读流程 12345[hadoop@hadoop001 ~]$ hdfs dfs -cat /1.log20/05/12 09:51:19 WARN util.NativeCodeLoader: Unable to load native-hadoop library for your platform... \\using builtin-java classes where applicableruozedata[hadoop@hadoop001 ~]$ 读取流程对用户操作是无感知的 1.Client调用FileSystem的open(filePath)方法,与NN进行RPC通信，返回该文件的部分或者全部的block列表也就是返回【FSDataInputStream】对象 2.Client调用【FSDataInputStream】对象的read方法去与第一个块的最近的DN进行读取，读取完成后，会check，假如ok，就关闭与DN通信。假如读取失败，会记录DN+block信息，下次就不会从这个节点读取。那么就从第二个节点读取。 然后去与第二个块的最近的DN进行读取，以此类推。 假如当block列表全部读取完成，文件还没读取结束，就调用FileSystem从nn获取下一批次的block列表。 3.Client调用【FSDataInputStream】对象close方法，关闭输入流。","categories":[{"name":"Hadoop","slug":"Hadoop","permalink":"https://github.com/wangqi1994/wangqi1994.github.io/categories/Hadoop/"},{"name":"HDFS","slug":"HDFS","permalink":"https://github.com/wangqi1994/wangqi1994.github.io/categories/HDFS/"}],"tags":[{"name":"Hadoop","slug":"Hadoop","permalink":"https://github.com/wangqi1994/wangqi1994.github.io/tags/Hadoop/"},{"name":"HDFS","slug":"HDFS","permalink":"https://github.com/wangqi1994/wangqi1994.github.io/tags/HDFS/"}]},{"title":"Linux系统tmp目录自动清理总结","slug":"Linux系统tmp目录自动清理总结","date":"2020-05-11T04:00:00.000Z","updated":"2020-05-11T04:00:00.000Z","comments":true,"path":"2020/05/11/Linux系统tmp目录自动清理总结/","link":"","permalink":"https://github.com/wangqi1994/wangqi1994.github.io/2020/05/11/Linux%E7%B3%BB%E7%BB%9Ftmp%E7%9B%AE%E5%BD%95%E8%87%AA%E5%8A%A8%E6%B8%85%E7%90%86%E6%80%BB%E7%BB%93/","excerpt":"","text":"在Centos7.2系统中/tmp文件夹下的文件是会被清理、删除的. 根据网上的调查，存在两种方式1.主要是因为作业里面会调用tmpwatch命令删除那些一段时间没有访问的文件。/etc/cron.daily/tmpwatch但是在我的系统中没有找到这个文件和tmpwatch这个命令 12[root@hadoop001 tmpfiles.d]# tmpwatch 30d /tmp/bash: tmpwatch: command not found... 2.在 /usr/lib/tmpfiles.d/tmp.conf文件进行定义 1234567891011121314151617181920[root@hadoop001 tmpfiles.d]# vi tmp.conf# This file is part of systemd.## systemd is free software; you can redistribute it and/or modify it# under the terms of the GNU Lesser General Public License as published by# the Free Software Foundation; either version 2.1 of the License, or# (at your option) any later version.# See tmpfiles.d(5) for details# Clear tmp directories separately, to make them easier to overridev /tmp 1777 root root 10d #自动清理根目录的tmp文件夹v /var/tmp 1777 root root 30d #自动清理var目录的tmp文件夹# Exclude namespace mountpoints created with PrivateTmp=yesx /tmp/systemd-private-%b-*X /tmp/systemd-private-%b-*/tmpx /var/tmp/systemd-private-%b-*X /var/tmp/systemd-private-%b-*/tmp 参数后加时间，默认是hours。也可以使用30d表示30天，但是有些版本只支持hours。 如果想将强制删除30天没有访问的文件改为7天，只需修改以下两处 123# Clear tmp directories separately, to make them easier to overridev /tmp 1777 root root 10d #自动清理根目录的tmp文件夹v /var/tmp 1777 root root 30d #自动清理var目录的tmp文件夹","categories":[{"name":"Linux","slug":"Linux","permalink":"https://github.com/wangqi1994/wangqi1994.github.io/categories/Linux/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"https://github.com/wangqi1994/wangqi1994.github.io/tags/Linux/"}]},{"title":"数仓培训第十天","slug":"若泽大数据-剑指数仓培训笔记10","date":"2020-05-11T04:00:00.000Z","updated":"2020-05-11T04:00:00.000Z","comments":true,"path":"2020/05/11/若泽大数据-剑指数仓培训笔记10/","link":"","permalink":"https://github.com/wangqi1994/wangqi1994.github.io/2020/05/11/%E8%8B%A5%E6%B3%BD%E5%A4%A7%E6%95%B0%E6%8D%AE-%E5%89%91%E6%8C%87%E6%95%B0%E4%BB%93%E5%9F%B9%E8%AE%AD%E7%AC%94%E8%AE%B010/","excerpt":"","text":"1.HDFS主从架构80%以上的大数据是主从结构-主管理从干活角色: namenode 名称节点 nna.文件名称b.文件的目录结构c.文件的属性 权限 创建时间 副本数 1234567[hadoop@hadoop001 hadoop]$ hdfs dfs -ls /wordcount2/input20/05/12 08:56:23 WARN util.NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicableFound 2 items-rw-r--r-- 1 hadoop supergroup 29 2020-05-11 16:14 /wordcount2/input/1.log-rw-r--r-- 1 hadoop supergroup 47 2020-05-11 16:14 /wordcount2/input/2.log[hadoop@hadoop001 hadoop]$ d.一个文件被对应切割哪些数据块、副本数的块、数据块对应分布在哪些节点上blockmap 块映射，nn节点不会持久化存储这种映射关系是通过集群的启动和运行时，dn定期发送blockreport给nn，然后nn就在内存中动态维护这种映射关系 作用:管理文件系统的命名空间 其实就是维护文件系统树的文件和文件夹这些形式是以两种文件来永久的保存在本地磁盘的镜像文件 fsimage编辑日志文件 editlogs 1234567891011121314151617181920212223242526272829[hadoop@hadoop001 current]$ pwd/home/hadoop/tmp/dfs/name/current[hadoop@hadoop001 current]$ lltotal 198880-rw-rw-r--. 1 hadoop hadoop 191753254 May 11 16:08 edits_0000000000000000003-0000000000001047334-rw-rw-r--. 1 hadoop hadoop 10755011 May 11 17:09 edits_0000000000001047335-0000000000001114386-rw-rw-r--. 1 hadoop hadoop 158 May 11 18:09 edits_0000000000001114387-0000000000001114390-rw-rw-r--. 1 hadoop hadoop 42 May 11 19:09 edits_0000000000001114391-0000000000001114392-rw-rw-r--. 1 hadoop hadoop 42 May 11 20:09 edits_0000000000001114393-0000000000001114394-rw-rw-r--. 1 hadoop hadoop 42 May 11 21:09 edits_0000000000001114395-0000000000001114396-rw-rw-r--. 1 hadoop hadoop 42 May 11 22:09 edits_0000000000001114397-0000000000001114398-rw-rw-r--. 1 hadoop hadoop 42 May 11 23:09 edits_0000000000001114399-0000000000001114400-rw-rw-r--. 1 hadoop hadoop 42 May 12 00:09 edits_0000000000001114401-0000000000001114402-rw-rw-r--. 1 hadoop hadoop 42 May 12 01:09 edits_0000000000001114403-0000000000001114404-rw-rw-r--. 1 hadoop hadoop 42 May 12 02:09 edits_0000000000001114405-0000000000001114406-rw-rw-r--. 1 hadoop hadoop 42 May 12 03:09 edits_0000000000001114407-0000000000001114408-rw-rw-r--. 1 hadoop hadoop 42 May 12 04:09 edits_0000000000001114409-0000000000001114410-rw-rw-r--. 1 hadoop hadoop 42 May 12 05:09 edits_0000000000001114411-0000000000001114412-rw-rw-r--. 1 hadoop hadoop 42 May 12 06:09 edits_0000000000001114413-0000000000001114414-rw-rw-r--. 1 hadoop hadoop 42 May 12 07:09 edits_0000000000001114415-0000000000001114416-rw-rw-r--. 1 hadoop hadoop 42 May 12 08:09 edits_0000000000001114417-0000000000001114418-rw-rw-r--. 1 hadoop hadoop 42 May 12 09:09 edits_0000000000001114419-0000000000001114420-rw-rw-r--. 1 hadoop hadoop 1048576 May 12 09:09 edits_inprogress_0000000000001114421-rw-rw-r--. 1 hadoop hadoop 2299 May 12 08:09 fsimage_0000000000001114418-rw-rw-r--. 1 hadoop hadoop 62 May 12 08:09 fsimage_0000000000001114418.md5-rw-rw-r--. 1 hadoop hadoop 2299 May 12 09:09 fsimage_0000000000001114420-rw-rw-r--. 1 hadoop hadoop 62 May 12 09:09 fsimage_0000000000001114420.md5-rw-rw-r--. 1 hadoop hadoop 8 May 12 09:09 seen_txid-rw-rw-r--. 1 hadoop hadoop 205 May 11 15:32 VERSION secondary namenode 第二名称节点 snna.将fsimage editlog定期拿过来合并 备份 推送 123456789101112131415161718192021222324252627[hadoop@hadoop001 current]$ pwd/home/hadoop/tmp/dfs/namesecondary/current[hadoop@hadoop001 current]$ lltotal 197848-rw-rw-r--. 1 hadoop hadoop 191753254 May 11 16:08 edits_0000000000000000003-0000000000001047334-rw-rw-r--. 1 hadoop hadoop 10755011 May 11 17:09 edits_0000000000001047335-0000000000001114386-rw-rw-r--. 1 hadoop hadoop 158 May 11 18:09 edits_0000000000001114387-0000000000001114390-rw-rw-r--. 1 hadoop hadoop 42 May 11 19:09 edits_0000000000001114391-0000000000001114392-rw-rw-r--. 1 hadoop hadoop 42 May 11 20:09 edits_0000000000001114393-0000000000001114394-rw-rw-r--. 1 hadoop hadoop 42 May 11 21:09 edits_0000000000001114395-0000000000001114396-rw-rw-r--. 1 hadoop hadoop 42 May 11 22:09 edits_0000000000001114397-0000000000001114398-rw-rw-r--. 1 hadoop hadoop 42 May 11 23:09 edits_0000000000001114399-0000000000001114400-rw-rw-r--. 1 hadoop hadoop 42 May 12 00:09 edits_0000000000001114401-0000000000001114402-rw-rw-r--. 1 hadoop hadoop 42 May 12 01:09 edits_0000000000001114403-0000000000001114404-rw-rw-r--. 1 hadoop hadoop 42 May 12 02:09 edits_0000000000001114405-0000000000001114406-rw-rw-r--. 1 hadoop hadoop 42 May 12 03:09 edits_0000000000001114407-0000000000001114408-rw-rw-r--. 1 hadoop hadoop 42 May 12 04:09 edits_0000000000001114409-0000000000001114410-rw-rw-r--. 1 hadoop hadoop 42 May 12 05:09 edits_0000000000001114411-0000000000001114412-rw-rw-r--. 1 hadoop hadoop 42 May 12 06:09 edits_0000000000001114413-0000000000001114414-rw-rw-r--. 1 hadoop hadoop 42 May 12 07:09 edits_0000000000001114415-0000000000001114416-rw-rw-r--. 1 hadoop hadoop 42 May 12 08:09 edits_0000000000001114417-0000000000001114418-rw-rw-r--. 1 hadoop hadoop 42 May 12 09:09 edits_0000000000001114419-0000000000001114420-rw-rw-r--. 1 hadoop hadoop 2299 May 12 08:09 fsimage_0000000000001114418-rw-rw-r--. 1 hadoop hadoop 62 May 12 08:09 fsimage_0000000000001114418.md5-rw-rw-r--. 1 hadoop hadoop 2299 May 12 09:09 fsimage_0000000000001114420-rw-rw-r--. 1 hadoop hadoop 62 May 12 09:09 fsimage_0000000000001114420.md5-rw-rw-r--. 1 hadoop hadoop 205 May 12 09:09 VERSION snn将老大的 edits_0000000000001114419-0000000000001114420进行合并操作（检查点操作，checkpoint），合并为fsimage_0000000000001114420 将这个文件推送给老大，那么新的数据写读的记录就存放在edits_inprogress_0000000000001114421日志文件文件是变化的内容不断追加 dfs.namenode.checkpoint.period 3600s 按时间备份dfs.namenode.checkpoint.txns 1000000 如果数据读写量大，超过限制，会立即备份 为了解决单点故障，nn只有一个对外的，后来新增一个snn，1小时的备份虽然能够减轻单点故障带来的丢失风险，但是在生产上还是不允许使用snn例如11:00 snn 备份11:30 数据一直写到这 突然nn节点 磁盘故障 无法恢复拿snn的最新的一个fsimage文件恢复，那么只能恢复 11点的数据 在生产上是 不用snn，是启动另外一个NN进程(实时备份，实时准备替换nn，变为活动的nn)叫做HDFS HA datanode 数据节点 dna.存储数据块和数据块的校验和 作用:a.每隔3s发送心跳给nn,告诉nn说明dn还活着dfs.heartbeat.interval 3s b.每隔一定的时间发生一次blockreportdfs.blockreport.intervalMsec 21600000ms=6小时dfs.datanode.directoryscan.interval 21600s=6小时 12[hadoop@hadoop001 subdir99]$ pwd/home/hadoop/tmp/dfs/data/current/BP-512886540-192.168.111.131-1589182330952/current/finalized/subdir0/subdir99 补充:HDFS Block损坏恢复方法如果生产上检测到块损坏,集群会自己修复手动修复不一定成功，看人品手动回复需要集群上有3个副本 注意：hdfs不要以为时间的参数单位是一样的，需要查看命令帮助确认 2.HDFS写流程HDFS写流程 3.HDFS读流程HDFS读流程 4.HDFS副本放置策略HDFS副本放置策略","categories":[{"name":"Hadoop","slug":"Hadoop","permalink":"https://github.com/wangqi1994/wangqi1994.github.io/categories/Hadoop/"},{"name":"HDFS","slug":"HDFS","permalink":"https://github.com/wangqi1994/wangqi1994.github.io/categories/HDFS/"}],"tags":[{"name":"Hadoop","slug":"Hadoop","permalink":"https://github.com/wangqi1994/wangqi1994.github.io/tags/Hadoop/"},{"name":"HDFS","slug":"HDFS","permalink":"https://github.com/wangqi1994/wangqi1994.github.io/tags/HDFS/"}]},{"title":"解决bash: hdfs: command not found","slug":"hdfs command not found","date":"2020-05-10T04:00:00.000Z","updated":"2020-05-10T04:00:00.000Z","comments":true,"path":"2020/05/10/hdfs command not found/","link":"","permalink":"https://github.com/wangqi1994/wangqi1994.github.io/2020/05/10/hdfs%20command%20not%20found/","excerpt":"","text":"在/home/hadoop/app/hadoop文件夹下执行 hdfs dfs -mkdir /usr/input/hot时命令需要bin/hdfs dfs -mkdir /usr/input/hot 如在其他文件夹下运行hdfs dfs -mkdir /usr/input/hot遇到问题 bash: hdfs: command not found 解决方案： 在/etc/profile下添加hadoop的文件路径 1234567891011[hadoop@hadoop001 hadoop]$ vi /etc/profileexport JVA_HOME=/usr/java/jdk1.8.0_181export PATH=$JVA_HOME/bin:$PATH# hadoop export HADOOP_HOME=/home/hadoop/app/hadoop/bin # hadoop安装文件 export PATH=$PATH:$HADOOP_HOME [hadoop@hadoop001 etc]$ source profile [hadoop@hadoop001 etc]$ which hdfs~/app/hadoop/bin/hdfs 然后source 生效环境变量which 查看一下是否生效 之后执行bin/hdfs dfs -mkdir /usr/input/hot 即可","categories":[{"name":"Hadoop","slug":"Hadoop","permalink":"https://github.com/wangqi1994/wangqi1994.github.io/categories/Hadoop/"},{"name":"HDFS","slug":"HDFS","permalink":"https://github.com/wangqi1994/wangqi1994.github.io/categories/HDFS/"},{"name":"BUG","slug":"BUG","permalink":"https://github.com/wangqi1994/wangqi1994.github.io/categories/BUG/"}],"tags":[{"name":"Hadoop","slug":"Hadoop","permalink":"https://github.com/wangqi1994/wangqi1994.github.io/tags/Hadoop/"},{"name":"HDFS","slug":"HDFS","permalink":"https://github.com/wangqi1994/wangqi1994.github.io/tags/HDFS/"},{"name":"BUG","slug":"BUG","permalink":"https://github.com/wangqi1994/wangqi1994.github.io/tags/BUG/"}]},{"title":"数仓培训第九天","slug":"若泽大数据-剑指数仓培训笔记9","date":"2020-05-10T04:00:00.000Z","updated":"2020-05-10T04:00:00.000Z","comments":true,"path":"2020/05/10/若泽大数据-剑指数仓培训笔记9/","link":"","permalink":"https://github.com/wangqi1994/wangqi1994.github.io/2020/05/10/%E8%8B%A5%E6%B3%BD%E5%A4%A7%E6%95%B0%E6%8D%AE-%E5%89%91%E6%8C%87%E6%95%B0%E4%BB%93%E5%9F%B9%E8%AE%AD%E7%AC%94%E8%AE%B09/","excerpt":"","text":"1.YARN部署官网文档 修改对应配置文档: 12345678910111213141516171819202122232425262728[root@hadoop001 hadoop]$ su - hadoop[hadoop@hadoop001 hadoop]$ cd app/hadoop/etc/hadoop/[hadoop@hadoop001 hadoop]$ mv mapred-site.xml.template mapred-site.xml #没有mapred文件，将tempele文件复制改名[hadoop@hadoop001 hadoop]$ vi mapred-site.xml #该文件不要随意删除第一行数据，这是表明是一个xml文件&lt;configuration&gt; &lt;property&gt; &lt;name&gt;mapreduce.framework.name&lt;/name&gt; &lt;value&gt;yarn&lt;/value&gt; &lt;/property&gt;&lt;/configuration&gt;[hadoop@hadoop001 hadoop]$ vi yarn-site.xml&lt;configuration&gt;&lt;!-- Site specific YARN configuration properties --&gt; #这之内的是可以删除的注释&lt;property&gt; &lt;name&gt;yarn.nodemanager.aux-services&lt;/name&gt; &lt;value&gt;mapreduce_shuffle&lt;/value&gt; &lt;/property&gt; &lt;property&gt; &lt;name&gt;yarn.resourcemanager.webapp.address&lt;/name&gt; &lt;value&gt;hadoop001:18808&lt;/value&gt; # 主机名改为自己的机器名字。端口号修改一下，范围1-65535 &lt;/property&gt;&lt;/configuration&gt; yarn默认你端口号8088.8088端口暴露外网，会被病毒感染 植入挖矿程序 用来计算比特币8088内网不用怕，外网可加安全验证 Start ResourceManager daemon and NodeManager daemon: 启动yarn进程 12345678910[hadoop@hadoop001 hadoop]$ pwd/home/hadoop/app/hadoop/etc/hadoop[hadoop@hadoop001 hadoop]$ cd ../../[hadoop@hadoop001 hadoop]$ pwd/home/hadoop/app/hadoop[hadoop@hadoop001 hadoop]$ sbin/start-yarn.shstarting yarn daemonsstarting resourcemanager, logging to /home/hadoop/app/hadoop-2.6.0-cdh5.16.2/logs/yarn-hadoop-resourcemanager-hadoop001.outhadoop001: starting nodemanager, logging to /home/hadoop/app/hadoop-2.6.0-cdh5.16.2/logs/yarn-hadoop-nodemanager-hadoop001.out[hadoop@hadoop001 hadoop]$ open web:http://192.168.111.131:18808/cluster # ip:port/cluster 2.词频统计提前为hdfs配置环境变量 etc/profile 12export HADOOP_HOME=/home/hadoop/app/hadoopexport PATH=$HADOOP_HOME/bin:$HADOOP_HOME/sbin:$PATH 否则只能在/app/hadoop文件夹下使用bin/hdfs dfs -ls / 进行对应操作 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117[hadoop@hadoop001 data]$ hdfs dfs -mkdir /wordcount2 #创建input文件夹，output文件夹会自动生成,output文件不能提前存在，否则报错[hadoop@hadoop001 data]$ hdfs dfs -mkdir /wordcount2/input/#将所在文件夹所有数据上传[hadoop@hadoop001 word]$ hdfs dfs -put * /wordcount2/input #-put是将linux放到hdfs中20/05/11 16:14:43 WARN util.NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable[hadoop@hadoop001 word]$ hdfs dfs -ls /wordcount2/input20/05/11 16:14:57 WARN util.NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicableFound 2 items-rw-r--r-- 1 hadoop supergroup 29 2020-05-11 16:14 /wordcount2/input/1.log-rw-r--r-- 1 hadoop supergroup 47 2020-05-11 16:14 /wordcount2/input/2.log[hadoop@hadoop001 hadoop]$ hadoop jar \\./share/hadoop/mapreduce2/hadoop-mapreduce-examples-2.6.0-cdh5.16.2.jar \\wordcount /wordcount2/input/ /wordcount2/output/20/05/11 16:19:25 WARN util.NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable20/05/11 16:19:26 INFO client.RMProxy: Connecting to ResourceManager at /0.0.0.0:803220/05/11 16:19:29 INFO input.FileInputFormat: Total input paths to process : 220/05/11 16:19:29 INFO mapreduce.JobSubmitter: number of splits:2# 思考: mapreduce的split=map的个数 是什么影响的 #1) 文件的大小。 #2) 文件的个数。 #3) splitsize的大小。20/05/11 16:19:29 INFO mapreduce.JobSubmitter: Submitting tokens for job: job_1589182412203_000120/05/11 16:19:30 INFO impl.YarnClientImpl: Submitted application application_1589182412203_000120/05/11 16:19:30 INFO mapreduce.Job: The url to track the job: http://hadoop001:18808/proxy/application_1589182412203_0001/20/05/11 16:19:30 INFO mapreduce.Job: Running job: job_1589182412203_000120/05/11 16:19:45 INFO mapreduce.Job: Job job_1589182412203_0001 running in uber mode : false20/05/11 16:19:45 INFO mapreduce.Job: map 0% reduce 0%20/05/11 16:19:55 INFO mapreduce.Job: map 50% reduce 0%20/05/11 16:19:57 INFO mapreduce.Job: map 100% reduce 0%20/05/11 16:20:02 INFO mapreduce.Job: map 100% reduce 100%20/05/11 16:20:02 INFO mapreduce.Job: Job job_1589182412203_0001 completed successfully20/05/11 16:20:02 INFO mapreduce.Job: Counters: 49 File System Counters FILE: Number of bytes read=122 FILE: Number of bytes written=429243 FILE: Number of read operations=0 FILE: Number of large read operations=0 FILE: Number of write operations=0 HDFS: Number of bytes read=294 HDFS: Number of bytes written=43 HDFS: Number of read operations=9 HDFS: Number of large read operations=0 HDFS: Number of write operations=2 Job Counters Launched map tasks=2 Launched reduce tasks=1 Data-local map tasks=2 Total time spent by all maps in occupied slots (ms)=17984 Total time spent by all reduces in occupied slots (ms)=4063 Total time spent by all map tasks (ms)=17984 Total time spent by all reduce tasks (ms)=4063 Total vcore-milliseconds taken by all map tasks=17984 Total vcore-milliseconds taken by all reduce tasks=4063 Total megabyte-milliseconds taken by all map tasks=18415616 Total megabyte-milliseconds taken by all reduce tasks=4160512 Map-Reduce Framework Map input records=25 Map output records=19 Map output bytes=139 Map output materialized bytes=128 Input split bytes=218 Combine input records=19 Combine output records=12 Reduce input groups=8 Reduce shuffle bytes=128 Reduce input records=12 Reduce output records=8 Spilled Records=24 Shuffled Maps =2 Failed Shuffles=0 Merged Map outputs=2 GC time elapsed (ms)=286 CPU time spent (ms)=1590 Physical memory (bytes) snapshot=480874496 Virtual memory (bytes) snapshot=8181796864 Total committed heap usage (bytes)=307437568 Shuffle Errors BAD_ID=0 CONNECTION=0 IO_ERROR=0 WRONG_LENGTH=0 WRONG_MAP=0 WRONG_REDUCE=0 File Input Format Counters Bytes Read=76 File Output Format Counters Bytes Written=43[hadoop@hadoop001 hadoop]$ hdfs dfs -ls /wordcount2/output/20/05/11 16:35:51 WARN util.NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicableFound 2 items-rw-r--r-- 1 hadoop supergroup 0 2020-05-11 16:20 /wordcount2/output/_SUCCESS-rw-r--r-- 1 hadoop supergroup 43 2020-05-11 16:20 /wordcount2/output/part-r-00000# mapreduce跑完结束，文件的个数=reduce分区函数由什么决定，当前是1 由配置参数控制，使用过多的Reduce任务则意味着复杂的shuffle，并使输出文件的数量激增[hadoop@hadoop001 hadoop]$ hdfs dfs -get /wordcount2/output/* [hadoop@hadoop001 hadoop]$ cat part-r-00000 a 1b 7bb 1c 1qi 1ruoze 2shi 3wang 3[hadoop@hadoop001 hadoop]$ 3.jps命令Jps命令—使用详解 3.1 位置12[hadoop@hadoop001 hadoop]$ which jps/usr/java/jdk1.8.0_181/bin/jps 3.2 使用1234567891011[hadoop@hadoop001 hadoop]$ jps28256 ResourceManager15617 FsShell60210 FsShell60386 Jps27363 NameNode59604 FsShell27591 DataNode28364 NodeManager27967 SecondaryNameNode[hadoop@hadoop001 hadoop]$ 3.3 对应的进程标识文件存储在哪/tmp/hsperfdata_hadoop 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253[hadoop@hadoop001 tmp]$ cd hsperfdata_hadoop[hadoop@hadoop001 hsperfdata_hadoop]$ lltotal 256-rw-------. 1 hadoop hadoop 32768 May 11 16:13 15617-rw-------. 1 hadoop hadoop 32768 May 11 17:11 27363-rw-------. 1 hadoop hadoop 32768 May 11 17:11 27591-rw-------. 1 hadoop hadoop 32768 May 11 17:11 27967-rw-------. 1 hadoop hadoop 32768 May 11 17:11 28256-rw-------. 1 hadoop hadoop 32768 May 11 17:11 28364-rw-------. 1 hadoop hadoop 32768 May 11 16:02 59604-rw-------. 1 hadoop hadoop 32768 May 11 16:09 60210[hadoop@hadoop001 hsperfdata_hadoop]$ mv 27591 27591.bak[hadoop@hadoop001 hsperfdata_hadoop]$ ps -ef |grep DataNodehadoop 27591 1 3 15:32 ? 00:03:15 /usr/java/jdk1.8.0_181/bin/java -Dproc_datanode \\-Xmx1000m -Djava.net.preferIPv4Stack=true -Dhadoop.log.dir=/home/hadoop/app/hadoop-2.6.0-cdh5.16.2/logs \\-Dhadoop.log.file=hadoop.log -Dhadoop.home.dir=/home/hadoop/app/hadoop-2.6.0-cdh5.16.2 \\-Dhadoop.id.str=hadoop -Dhadoop.root.logger=INFO,console \\-Djava.library.path=/home/hadoop/app/hadoop-2.6.0-cdh5.16.2/lib/native \\-Dhadoop.policy.file=hadoop-policy.xml -Djava.net.preferIPv4Stack=true \\-Djava.net.preferIPv4Stack=true -Djava.net.preferIPv4Stack=true \\-Dhadoop.log.dir=/home/hadoop/app/hadoop-2.6.0-cdh5.16.2/logs \\-Dhadoop.log.file=hadoop-hadoop-datanode-hadoop001.log \\-Dhadoop.home.dir=/home/hadoop/app/hadoop-2.6.0-cdh5.16.2 \\-Dhadoop.id.str=hadoop -Dhadoop.root.logger=INFO,RFA \\-Djava.library.path=/home/hadoop/app/hadoop-2.6.0-cdh5.16.2/lib/native \\-Dhadoop.policy.file=hadoop-policy.xml -Djava.net.preferIPv4Stack=true -server \\-Dhadoop.security.logger=ERROR,RFAS -Dhadoop.security.logger=ERROR,RFAS \\-Dhadoop.security.logger=ERROR,RFAS \\-Dhadoop.security.logger=INFO,RFAS org.apache.hadoop.hdfs.server.datanode.DataNodehadoop 60662 59557 0 17:13 pts/0 00:00:00 grep --color=auto DataNode[hadoop@hadoop001 hsperfdata_hadoop]$ jps28256 ResourceManager15617 FsShell60210 FsShell27363 NameNode59604 FsShell60663 Jps28364 NodeManager27967 SecondaryNameNode[hadoop@hadoop001 hsperfdata_hadoop]$ #jps查不到时，看看ps -ef[hadoop@hadoop001 hsperfdata_hadoop]$ mv 27591.bak 27591mv: cannot stat ‘27591.bak’: No such file or directory[hadoop@hadoop001 hsperfdata_hadoop]$ lltotal 224-rw-------. 1 hadoop hadoop 32768 May 11 16:13 15617-rw-------. 1 hadoop hadoop 32768 May 11 17:16 27363-rw-------. 1 hadoop hadoop 32768 May 11 17:16 27967-rw-------. 1 hadoop hadoop 32768 May 11 17:16 28256-rw-------. 1 hadoop hadoop 32768 May 11 17:16 28364-rw-------. 1 hadoop hadoop 32768 May 11 16:02 59604-rw-------. 1 hadoop hadoop 32768 May 11 16:09 60210 # mv命令重命名文件.bak改回来之后会把文件搞没了,移动之后在移动回来无影响[hadoop@hadoop001 hsperfdata_hadoop]$ 3.4 当出现 – process information unavailable进程不能代表是存在 或者 不存在，要当心，尤其是使用jps检测状态的ps -ef|grep xxx 命令是去查看进程的真正手段！！！用root用户kill进程，进程不存在，jps会显示没有进程信息 1234567891011121314151617181920212223242526272829[hadoop@hadoop001 hsperfdata_hadoop]$ jps28256 ResourceManager15617 FsShell60210 FsShell27363 NameNode59604 FsShell27591 -- process information unavailable28364 NodeManager60878 Jps27967 SecondaryNameNode[hadoop@hadoop001 hsperfdata_hadoop]$ ps -ef |grep 27591hadoop 27591 1 3 15:32 ? 00:03:15 /usr/java/jdk1.8.0_181/bin/java \\-Dproc_datanode -Xmx1000m -Djava.net.preferIPv4Stack=true \\-Dhadoop.log.dir=/home/hadoop/app/hadoop-2.6.0-cdh5.16.2/logs \\-Dhadoop.log.file=hadoop.log -Dhadoop.home.dir=/home/hadoop/app/hadoop-2.6.0-cdh5.16.2 \\-Dhadoop.id.str=hadoop -Dhadoop.root.logger=INFO,console \\-Djava.library.path=/home/hadoop/app/hadoop-2.6.0-cdh5.16.2/lib/native \\-Dhadoop.policy.file=hadoop-policy.xml -Djava.net.preferIPv4Stack=true \\-Djava.net.preferIPv4Stack=true -Djava.net.preferIPv4Stack=true \\-Dhadoop.log.dir=/home/hadoop/app/hadoop-2.6.0-cdh5.16.2/logs \\-Dhadoop.log.file=hadoop-hadoop-datanode-hadoop001.log \\-Dhadoop.home.dir=/home/hadoop/app/hadoop-2.6.0-cdh5.16.2 \\-Dhadoop.id.str=hadoop -Dhadoop.root.logger=INFO,RFA \\-Djava.library.path=/home/hadoop/app/hadoop-2.6.0-cdh5.16.2/lib/native \\-Dhadoop.policy.file=hadoop-policy.xml -Djava.net.preferIPv4Stack=true -server \\-Dhadoop.security.logger=ERROR,RFAS -Dhadoop.security.logger=ERROR,RFAS \\-Dhadoop.security.logger=ERROR,RFAS \\-Dhadoop.security.logger=INFO,RFAS org.apache.hadoop.hdfs.server.datanode.DataNodehadoop 60889 59557 0 17:20 pts/0 00:00:00 grep --color=auto 27591\\ 3.5 文件被删除，不影响进程的重启！！jps并不会影响进程的启动和停止，但是要去看看文件是否清理干净，否则会造成误导 4.pid文件4.1存储位置 /tmp12345[hadoop@hadoop001 tmp]$ lltotal 7904-rw-rw-r--. 1 hadoop hadoop 6 May 11 15:32 hadoop-hadoop-datanode.pid-rw-rw-r--. 1 hadoop hadoop 6 May 11 15:32 hadoop-hadoop-namenode.pid-rw-rw-r--. 1 hadoop hadoop 6 May 11 15:32 hadoop-hadoop-secondarynamenode.pid 4.2 维护进程的pid 写死的123[hadoop@hadoop001 tmp]$ cat hadoop-hadoop-datanode.pid 27591[hadoop@hadoop001 tmp]$ kill是通过找已经写死的pid的文件找到进程kill -9 $(pgrep -f xxx) 通过xxx杀了所有 4.3 文件被删除，影响进程的重启！！进程启动，pid文件写入进程的pid数字进程关闭时，从pid文件读出pid数字，然后kill -9 pid 4.4 生产上 pid文件真的可以放心的丢在/tmp维护吗？Linux的/tmp 会有30天的默认删除机制 4.5 如何修改修改pid在app/hadoop/etc/hadoop/hadoop-env.sh脚本目标/home/hadoop/tmp/中 export HADOOP_PID_DIR=/home/hadoop/tmp/ 修改之后最好确认一下原来部分文件是否存在，否则可能会出现问题 总结：pid文件生产不要丢在/tmp目录 要知道是影响进程的启动停止 5.块 block介绍及生产经验HDFS 存储大文件是利好，存储小文件是损害自己的 适合存储大文件 不适合小文件，不代表不能存储小文件 例如：一个260m 的 mv文件，上传到hdfs,会把文件切割成3块 （dfs.blocksize 134217728 =128M）分别为（128m、128m、4m） 伪分布式节点（单节点） 1节点 副本数 dfs.replication 1 （副本数即为服务器数，备份数）生产上HDFS集群的 DN肯定大于&gt;=3台 dfs.replication=3 1234DN1 DN2 DN5 DN10128m b1 b1 b1128m b2 b2 b24m b3 b3 b3 通过设置副本数 来让文件存储在大数据HDFS平台上有容错保障 dfs.blocksize为什么由64M变为128M，为了减少分块的数量，降低nn的负担生产上可以提高blocksize，减少块的数量，取决于你的文件能否达到size 副本数3：存储实际大小=文件大小3=2603=780m 存储空间 5个块的元数据信息维护 是不是 比3个块的元数据的信息维护要多，维护重 累–》namenode 所以nn是不喜欢 小文件的 1亿个10kb文件 3亿个block 1亿个10kb文件压缩成1KW个文件100m 3KW的block 如何规避 小文件1.数据传输到hdfs之前 就合并2.数据已经在hdfs上，就定时去合并不常用文件 -冷文件-读写不太频繁，在业务低谷时，晚上合并，或者合并前三十天的数据 /2020/10/10 /2020/10/11 /2020/10/12 当前时间在用，可能有问题 例如：20号 合并14号的文件21号 合并15号的文件 一天卡一天的合并 经验值： 1234510m一下的文件 都是小文件128m的就合并到120m文件代码设置成128m，真正合并时可能会超，变成129m，就是两个块， 因为有些文件不可切割","categories":[{"name":"Hadoop","slug":"Hadoop","permalink":"https://github.com/wangqi1994/wangqi1994.github.io/categories/Hadoop/"},{"name":"HDFS","slug":"HDFS","permalink":"https://github.com/wangqi1994/wangqi1994.github.io/categories/HDFS/"}],"tags":[{"name":"Hadoop","slug":"Hadoop","permalink":"https://github.com/wangqi1994/wangqi1994.github.io/tags/Hadoop/"},{"name":"HDFS","slug":"HDFS","permalink":"https://github.com/wangqi1994/wangqi1994.github.io/tags/HDFS/"}]},{"title":"解决Git提示Permission denied (publickey)","slug":"解决Git提示Permission denied (publickey)","date":"2020-05-10T04:00:00.000Z","updated":"2020-05-10T04:00:00.000Z","comments":true,"path":"2020/05/10/解决Git提示Permission denied (publickey)/","link":"","permalink":"https://github.com/wangqi1994/wangqi1994.github.io/2020/05/10/%E8%A7%A3%E5%86%B3Git%E6%8F%90%E7%A4%BAPermission%20denied%20(publickey)/","excerpt":"","text":"1234567891011$ git clone https://github.com/wangqi1994/wangqi1994.github.io qiblogCloning into 'protobuf'...The authenticity of host 'github.com (13.229.188.59)' can't be established.RSA key fingerprint is SHA256:nThbg6kXUpJWGl7E1IGOCspRomTxdCARLviKw6E5SY8.Are you sure you want to continue connecting (yes/no)? yesWarning: Permanently added 'github.com,13.229.188.59' (RSA) to the list of known hosts.git@github.com: Permission denied (publickey).fatal: Could not read from remote repository.Please make sure you have the correct access rightsand the repository exists. github中自己账户settings-SSH and GPG keys-new ssh key名字自己定，key有以下步骤提取。 回到需要下载源码的机器终端 12345678910ssh-keygen -t rsa #敲入命令，一路回车cd /root/.ssh/cat id_rsa.pub ssh-rsa AAAAB3AAABIwAAAQEAzVPno/Cm5ApGGMP8YjituJGegOCq7TVKVECehWog9hTfC0Z5PMsf5OWkWvUZ85nFJBuwhMszxkjFSd7e6INYJ42WfGKxPXm7ZoOQxkBZAetUUaNvDhCKZCdLNHWGde8gaX84i39JKWgwYrzX9Y1T+bDI1cJiUuNN6Xr8x4ZkMm4e+LugYtVSKGZKz7zLcp1mXQszh9mWM08/yyRq/CdTEly1ghojUDUNFTzyk6VQz/rzMFoiVuwbYlQasqdR4xIzvnIjfBrtSP4z+qdD+wZFvSABnFClXH0nJEaaKX9EdJpi2ezvLvAblDg371J#取出公钥，复制粘贴github中的key中，保存ssh -T git@github.com # 测试是否成功","categories":[{"name":"BUG","slug":"BUG","permalink":"https://github.com/wangqi1994/wangqi1994.github.io/categories/BUG/"},{"name":"Git","slug":"Git","permalink":"https://github.com/wangqi1994/wangqi1994.github.io/categories/Git/"}],"tags":[{"name":"BUG","slug":"BUG","permalink":"https://github.com/wangqi1994/wangqi1994.github.io/tags/BUG/"},{"name":"Git","slug":"Git","permalink":"https://github.com/wangqi1994/wangqi1994.github.io/tags/Git/"}]},{"title":"mysql报错收集","slug":"mysql报错1","date":"2020-05-09T04:00:00.000Z","updated":"2020-05-09T04:00:00.000Z","comments":true,"path":"2020/05/09/mysql报错1/","link":"","permalink":"https://github.com/wangqi1994/wangqi1994.github.io/2020/05/09/mysql%E6%8A%A5%E9%94%991/","excerpt":"","text":"mysql报错1.Can’t connect to local MySQL server through socket ‘/usr/local/mysql/mysql/mysql.sock’ (2)1234567891011#查看3306端口是否被占用lsof -i:3306 # lsof -i:port[root@hadoop001 java]# lsof -i:3306COMMAND PID USER FD TYPE DEVICE SIZE/OFF NODE NAMEmysqld 60782 mysqladmin 35u IPv6 673904 0t0 TCP *:mysql (LISTEN)[root@hadoop001 java]# netstat -nlp |grep 3306tcp6 0 0 :::3306 :::* LISTEN 60782/mysqld [root@hadoop001 java]# #启动mysqlservice mysql start 2.Starting MySQL.. ERROR! The server quit without updating PID file (/usr/local/mysql/data/hostname.pid).在root用户下，可以停止数据库，但是利用service mysql start命令启动mysql数据库时出现报错需要切换到对应用户下，才可以启动数据库 12su - xxxservice mysql start","categories":[{"name":"MySQL","slug":"MySQL","permalink":"https://github.com/wangqi1994/wangqi1994.github.io/categories/MySQL/"},{"name":"BUG","slug":"BUG","permalink":"https://github.com/wangqi1994/wangqi1994.github.io/categories/BUG/"}],"tags":[{"name":"MySQL","slug":"MySQL","permalink":"https://github.com/wangqi1994/wangqi1994.github.io/tags/MySQL/"},{"name":"BUG","slug":"BUG","permalink":"https://github.com/wangqi1994/wangqi1994.github.io/tags/BUG/"}]},{"title":"常用sql语句之从入门到删库","slug":"常用sql语句之从入门到删库","date":"2020-05-09T04:00:00.000Z","updated":"2020-05-09T04:00:00.000Z","comments":true,"path":"2020/05/09/常用sql语句之从入门到删库/","link":"","permalink":"https://github.com/wangqi1994/wangqi1994.github.io/2020/05/09/%E5%B8%B8%E7%94%A8sql%E8%AF%AD%E5%8F%A5%E4%B9%8B%E4%BB%8E%E5%85%A5%E9%97%A8%E5%88%B0%E5%88%A0%E5%BA%93/","excerpt":"","text":"启动与停止 启动mysql服务1sudo /usr/local/mysql/support-files/mysql.server start 停止mysql服务1sudo /usr/local/mysql/support-files/mysql.server stop 重启mysql服务1sudo /usr/local/mysql/support-files/mysql.server restart 进入mysql目录文件1cd /usr/local/mysql/support-files 进入mysql命令行1/usr/local/MySQL/bin/mysql -uroot -p12345678 退出数据库1exit; 数据库相关操作 查询所有数据库1show databases; 选择(使用)数据库1use mybatis; 查询当前正在使用的数据库名称1select database(); 创建数据库12create database 数据库名称;#创建数据库,判断不存在,再创建: create database if not exists 数据库名; 删除数据库12drop database 数据库名称;#判断数据库存在，存在再删除:drop database if exists 数据库名称; 数据库表相关操作 创建数据库表123456create table 表名( 列名1 数据类型1, 列名2 数据类型2, .... 列名n 数据类型n ); 复制表1create table 表名 like 被复制的表名; 查看某个数据库中的所有的数据表1show tables; 查看数据表的结构1desc pet;或describe pet; 修改表名1alter table 表名 rename to 新的表名; 修改表的字符集1alter table 表名 character set 字符集名称; 添加一列1alter table 表名 add 列名 数据类型; 删除列1alter table 表名 drop 列名; 删除表1drop table 表名;或drop table if exists 表名 ; 添加数据12insert into 表名(列名1,列名2,...列名n) values(值1,值2,...值n);#列名和值要一一对应。如果表名后，不定义列名，则默认给所有列添加值,如:insert into 表名 values(值1,值2,...值n);除了数字类型，其他类型需要使用引号(单双都可以)引起来. 删除数据123delete from 表名 where 条件#如果不加条件，则删除表中所有记录。如果要删除所有记录, 使用delete from 表名;一般不推荐使用。这种操作有多少条记录就会执行多少次删除操作.TRUNCATE TABLE 表名; #推荐使用，效率更高 先删除表，然后再创建一张一样的表. 修改数据1234update 表名 set 列名1 = 值1, 列名2 = 值2,... where 条件; # 如果不加任何条件，则会将表中所有记录全部修改.insert into user2 values (1,'李四','123'); #增delete from pet where ower = 'disn'; #删update pet set name = '后裔' where ower = 'dfn'; #改 查询数据123456789101112131415161718192021222324252627&gt; 、&lt; 、&lt;= 、&gt;= 、= 、&lt;&gt; BETWEEN...AND # 范围IN( 集合) LIKE 模糊查询 _单个任意字符%多个任意字符IS NULL and 或 &amp;&amp;or 或 || not 或 !查询条件应用举例:SELECT * FROM user WHERE age &gt;= 18;SELECT * FROM user WHERE age &gt;= 18 AND age &lt;=36;SELECT * FROM user WHERE age BETWEEN 40 AND 70;SELECT * FROM user WHERE age IN (6,18,37);#关于NULLSELECT * FROM user WHERE height = NULL; 错误,因为null值不能使用=或（!=) 判断SELECT * FROM user WHERE height IS NULL;(正确)SELECT * FROM user WHERE height IS NOT NULL;(正确)#查询姓陈的有哪些？&lt; like&gt;SELECT * FROM user WHERE NAME LIKE '陈%';#查询姓名第二个字是新的人SELECT * FROM user WHERE NAME LIKE \"_新%\";#查询姓名是三个字的人SELECT * FROM user WHERE NAME LIKE '___';#查询姓名中包含狗的人SELECT * FROM user WHERE NAME LIKE '%狗%'; 约束相关 主键约束 (primary key)能够唯一确定一张表中的的一条记录,我们通过给某个字段添加约束, 可以使得这个字段不重复且不为空.1234567891011 create table user ( id int primary key auto_increment, #在创建表时，添加主键约束，并且完成主键自增 name varchar(20) );-- 联合主键: 由多个字段联合组成的主键, 只要联合的主键加起来不重复就可以.联合主键中的任何一个字段都不能为空.create table user2 ( id int, name varchar(20), password varchar(20), primary key(id, name)); 表创建完成后:添加主键.如:12alter table user add primary key(id);alter table user modify id int primary key; 删除主键:1alter table user drop primary key; 唯一约束：unique 约束修饰的字段的值不可以重复.123456789create table user1 ( id int primary key auto_increment, phone_num varchar(20) unique );create table user2 ( id int primary key auto_increment, name varchar(20), unique(id, name) // 表示两个字段在一起不重复就可以 ); 也可以在表创建完成后, 通过1alter table user3 add unique(phone_num); 或1alter table user3 modify phone_num varchar(20) unique; 来添加unique约束. 删除unique约束: 1alter table user3 drop index phone_num; 非空约束：not null 修饰的字段不能为空NULL 1234create table user3 ( id int primary key auto_increment, name varchar(20) not null ); 删除非空约束: 1alter table user3 modify name varchar(20); 默认约束当我们插入字段值时候,如果对应的字段没有插入值,则会使用默认值.如果传入了值,则不会使用默认值. 12345create table user4( id int primary key auto_increment, age int default 18, name varchar(20) not null ); 外键约束：foreign key 1234567891011121314151617create table 表名(....外键列constraint 外键名称 foreign key (外键列名称) references 主表名称(主表列名称));# 班级create table classes( id int primary key, name varchar(20) ); # 学生表create table student ( id int primary key, name varchar(20), class_id int, foreign key(class_id) references classes(id) ); 数据库查询进阶 查询所有记录例如:查询student表中的所有记录.1select * from student; 查询指定字段例如:查询student中的sname,ssex,class.1select sname,ssex,class from student; 查询教师表中所有的单位即不重复的depart列. &lt;排除重复distinct&gt;1select distinct depart from teacher; 查询score表中成绩在60到80之间的所有记录 &lt;查询区间 between…and…&gt;12select * from score where degree between 60 and 80;select * from score where degree &gt; 60 and degree &lt; 80; 查询score表中成绩为85,86或88的记录1select * from score where degree in(85, 86, 88); 查询student表中’95031’班或性别为’女’的同学记录. &lt;or 表示或者&gt;1select *from student where class = '95031' or sex = '女'; 以class降序查询student表的所有记录 &lt;降序:desc, 升序asc,默认升序(省略)&gt;.1select * from student order by class desc; 以cno升序,degree降序查询score表的所有记录1select * from score order by cno asc,degree desc; 查询”95031’班的学生人数 &lt;统计 count&gt;1select count(*) from student where class = '95031'; 查询score表中最高分的学生学号和课程号(子查询) select sno, cno from score where degree = (select max(degree) from score );#其中:select max(degree) from score 先查出最高分.select sno,cno degree from score order by degree desc limit 0,1;#其中:limit第一个数字表示从多少开始,第二个表示多少条.当有多个相同最高分时,容易出bug,不推荐使用这种方式查询. 123* 查询每门课的平均成绩&#96;&#96;&#96;sqlselect cno, avg(degree) from score group by cno; 查询score表中至少有2名学生选修的并以3开头的课程的平均分数.1select cno, avg(degree) from score group by cno having count(cno) &gt;= 2 and cno like '3%'; 查询分数大于70, 小于90的sno列.1select sno, degree from score where degree between 70 and 90; 查询所有学生的sname, cno和degree列.1select sname, cno, degree from student, score where student.sno = score.sno; 查询所有学生的sno,cname和degree列1select sno,cname,degree from course ,score where course.cno = score.cno; 查询”95031”班学生每门课的平均分.1234select cno, avg(degree) from score where sno in (select sno from student where class = '95031') group by cno; 查询选修”3-105”课程的成绩高于”109”号同学”3-105”成绩的所有同学的记录.123select * from score where cno = '3-105' and degree &gt; (select degree from score where sno = '109' and cno = '3-105'); 查询成绩高于学号为”109”, 课程号为”3-105”的成绩的所有记录1select * from score where degree &gt; (select degree from score where sno = '109' and cno = '3-105'); 查询和学号为108,101的同学同年出生的所有的sno, sname, sbirthday12select *from student where year(sbirthday) in (select year(sbirthday) from student where sno in(108, 101)); 查询”张旭”教师任课的学生成绩12select * from score where cno = ( select cno from course where tno = (select tno from teacher where tname = \"张旭\")); 查询选修某课程的同学人数多于5人的教师姓名.123select tname from teacher where tno =(select tno from course where cno = (select cno from score group by cno having count(*) &gt; 5)); 查询存在有85分以上的成绩的课程的cno1select cno, degree from score where degree &gt; 85; 查询出”计算机系”教师所教课程的成绩表123select * from score where cno in (select cno from course where tno in (select tno from teacher where depart = \"计算机系\")); 查询选修编号为”3-105”课程且成绩至少高于选休息编号为”3-245”的同学的cno,sno和degree,并按degree从高到低次序排序. any 至少一个*.123select * from score where cno = '3-105' and degree &gt; any(select degree from score where cno = '3-245') order by degree desc; 查询选修编号为”3-105”课程且成绩高于选休息编号为”3-245”的同学的cno,sno和degree,并按degree从高到低次序排序. all 表示所有*123select * from score where cno = '3-105' and degree &gt; all(select degree from score where cno = '3-245') order by degree desc; 查询所有教师和同学的name, sex和birthday12select tname as name, tsex as sex, tbirthday as birthday from teacher union select sname, ssex, sbirthday from student; 查询所有”女”教师和”女”同学的name,sex和birthday12select tname as name, tsex as sex, tbirthday as birthday from teacher where tsex = '女' union select sname, ssex, sbirthday from student where ssex = '女'; 查询成绩比该课程成绩低的同学的成绩表 思路: 从a表查出对应的分数跟b表筛选出来的平均分作比较. 1234567891011121314151617181920212223242526272829303132333435363738select * from score a where degree &lt; (select avg(degree) from score b where a.cno = b.cno);# 表a+-----+-------+--------+| sno | cno | degree |+-----+-------+--------+| 101 | 3-105 | 91 || 102 | 3-105 | 92 || 103 | 3-105 | 92 || 103 | 3-245 | 86 || 103 | 6-166 | 85 || 104 | 3-105 | 81 || 105 | 3-105 | 88 || 105 | 3-245 | 75 || 105 | 6-166 | 79 || 109 | 3-105 | 76 || 109 | 3-245 | 68 || 109 | 6-166 | 81 |+-----+-------+--------+12 rows in set (0.00 sec) #表b| sno | cno | degree |+-----+-------+--------+| 101 | 3-105 | 91 || 102 | 3-105 | 92 || 103 | 3-105 | 92 || 103 | 3-245 | 86 || 103 | 6-166 | 85 || 104 | 3-105 | 81 || 105 | 3-105 | 88 || 105 | 3-245 | 75 || 105 | 6-166 | 79 || 109 | 3-105 | 76 || 109 | 3-245 | 68 || 109 | 6-166 | 81 |+-----+-------+--------+12 rows in set (0.00 sec) 查询所有任课教师的tname和depart1select tname, depart from teacher where tno in (select tno from course); 查询至少有两名男生的班号1select class from student where ssex= '男' group by class having count(*) &gt; 1 查询student表中不姓”王”的同学记录1select * from student where sname not like '王%'; 查询student表中每个学生的姓名和年龄1select sname, year(now()) - year(sbirthday) as '年龄' from student; 查询student表中最大和最小的sbirthday日期值1select max(sbirthday) as '最大', min(sbirthday) as '最小' from student; 以班号和年龄从大到小的顺序查询student表中的全部记录1select * from student order by class desc, sbirthday; 查询”男”教师及其所上的课程1select * from course where tno in (select tno from teacher where tsex = '男'); 查询最高分同学的sno, cno和degree列1select * from score where degree = (select max(degree) from score); 查询和李军同性别的所有同学的sname1select sname from student where ssex = (select ssex from student where sname = '李军'); 查询和李军同性别并同班 同学sname1234select sname from student where ssex = (select ssex from student where sname = \"李军\") and class = (select class from student where sname = '李军'); 查询所有选修”计算机导论”课程的”男”的成绩表123select * from score where cno = (select cno from course where cname = '计算机导论') and sno in(select sno from student where ssex = '男'); SQL的四种连接查询123456789101112131415161718192021# 分析用例的数据准备:mysql&gt; select * from person;+----+--------+--------+| id | name | cardId |+----+--------+--------+| 1 | 张三 | 1 || 2 | 李四 | 3 || 3 | 王五 | 6 |+----+--------+--------+3 rows in set (0.00 sec)mysql&gt; select * from card;+------+-----------+| id | name |+------+-----------+| 1 | 饭卡 || 2 | 建行卡 || 3 | 农行卡 || 4 | 工商卡 || 5 | 邮政卡 |+------+-----------+5 rows in set (0.00 sec) 内连接inner join 或者 join, 后面通常跟对一个on表示条件 —- 内联查询: 就是两张表中的数据, 通过某个字段相等,查询出相关记录数据.&lt;当前表中的cardid与id相同.&gt; 12345678select * from person inner join card on person.cardId = card.id;+----+--------+--------+------+-----------+| id | name | cardId | id | name |+----+--------+--------+------+-----------+| 1 | 张三 | 1 | 1 | 饭卡 || 2 | 李四 | 3 | 3 | 农行卡 |+----+--------+--------+------+-----------+2 rows in set (0.00 sec) 外连接左外连接:左连接 left join 或者 left outer join —- 左外连接, 会把左边表里面的所有数据取出来, 而右边表中的数据,如果有相等的,就显示出来, 如果没有, 则会补NULL. 12345678910select * from person left join card on person.cardId = card.id;+----+--------+--------+------+-----------+| id | name | cardId | id | name |+----+--------+--------+------+-----------+| 1 | 张三 | 1 | 1 | 饭卡 || 2 | 李四 | 3 | 3 | 农行卡 || 3 | 王五 | 6 | NULL | NULL |+----+--------+--------+------+-----------+3 rows in set (0.00 sec) 右外连接:右连接 right join 或者right outer join—-右外连接, 会把右边表里面的所有数据取出来, 而左边表中的数据,如果有相等的,就显示出来, 如果没有, 则会补NULL. 123456789101112select * from person right join card on person.cardId = card.id;+------+--------+--------+------+-----------+| id | name | cardId | id | name |+------+--------+--------+------+-----------+| 1 | 张三 | 1 | 1 | 饭卡 || 2 | 李四 | 3 | 3 | 农行卡 || NULL | NULL | NULL | 2 | 建行卡 || NULL | NULL | NULL | 4 | 工商卡 || NULL | NULL | NULL | 5 | 邮政卡 |+------+--------+--------+------+-----------+5 rows in set (0.01 sec) 全外连接:完全外连接 full join 或者full outer join&lt;mysql不支持full join&gt; 123456789101112131415161718192021mysql&gt; select * from person full join card on person.cardId= card.id;ERROR 1054 (42S22): Unknown column 'person.cardId' in 'on clause'**** 解决mysql不支持full join的方法**** &lt;左连接 + 右链接&gt; , 即通过union来连接左右连接. &lt;左连接 union 右链接&gt;.eg:select * from person left join card on person.cardId = card.id union select * from person right join card on person.cardId = card.id;+------+--------+--------+------+-----------+| id | name | cardId | id | name |+------+--------+--------+------+-----------+| 1 | 张三 | 1 | 1 | 饭卡 || 2 | 李四 | 3 | 3 | 农行卡 || 3 | 王五 | 6 | NULL | NULL || NULL | NULL | NULL | 2 | 建行卡 || NULL | NULL | NULL | 4 | 工商卡 || NULL | NULL | NULL | 5 | 邮政卡 |+------+--------+--------+------+-----------+6 rows in set (0.01 sec) 要点梳理 where 和 having 的区别？(1) having通常用在聚合函数前面，对聚合函数进行过滤,（MAX、MIN、COUNT、SUM).having通常和group by 一起连用，因为where不能加在group by的后面.(2) where 在分组之前进行限定，如果不满足条件，则不参与分组。having在分组之后进行限定，如果不满足结果，则不会被查询出来.where 后不可以跟聚合函数，having可以进行聚合函数的判断。1234567#MYSQL执行语句顺序，严格遵循次顺序，不能改变selectfromwheregroup byhavingorder by mysql的事务 关于事务mysql中, 事务其实是一个最小的不可分割的工作单元. 事务能够保证一个业务的完整性.分析:例如:12345678a --&gt; -100update user set money = money - 100 where name = 'a';b --&gt; +100update user set money = money + 100 where name = 'b';-- 实际程序中, 如果只有一条sql语句执行成功了,而另外一条没有执行成功?则会出现前后数据不一致的情况.update user set money = money - 100 where name = 'a';update user set money = money + 100 where name = 'b';#在多条sql语句,可能会有同时成功的要求,要么就同时失败. 事务控制(1)事务主要包含自动提交@@autocommit=1;,手动提交commit;和事务回滚rollback;.(2) mysql默认是开启事务的(自动提交). —-当我们去执行一个sql语句的时候,效果会立即提现出来,且不能回滚. 123set autocommit = 0;#设置mysql是否自动提交,&lt;0为否, 1为是.&gt;select @@autocommit;查看mysql的自动提交方式.commit; 手动提交. 具体事务控制相关参照下面代码分析: 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263mysql&gt; select @@autocommit;+--------------+| @@autocommit |+--------------+| 1 |+--------------+1 row in set (0.00 sec)#建表create database bank;create table user ( id int primary key, name varchar(20), money int );#首先在表中插入一条用户数据a.insert into user values (1,'a',1000);Query OK, 1 row affected (0.00 sec)#进行回滚操作.mysql&gt; rollback;Query OK, 0 rows affected (0.00 sec)#执行回滚后,查看数据表信息,发现即使调用了rollback,但插入的数据依然存在.说明当前不能回滚.mysql&gt; select * from user;+----+------+-------+| id | name | money |+----+------+-------+| 1 | a | 1000 |+----+------+-------+1 row in set (0.00 sec)#可以通过设置msql的回滚自动提交为false.set autocommit = 0;Query OK, 0 rows affected (0.00 sec)mysql&gt; select @@autocommit;+--------------+| @@autocommit |+--------------+| 0 |+--------------+1 row in set (0.00 sec)#也就说, 通过上面的set autocommit = 0;操作关闭了mysql的自动提交(commit).*******再次插入数据:*******insert into user values (2,'b',1000);Query OK, 1 row affected (0.00 sec)#插入数据后查看表,用户2数据添加成功.mysql&gt; select * from user;+----+------+-------+| id | name | money |+----+------+-------+| 1 | a | 1000 || 2 | b | 1000 |+----+------+-------+2 rows in set (0.00 sec)#执行回滚操作.mysql&gt; rollback;Query OK, 0 rows affected (0.00 sec)#回滚后再次查看表,发现刚才插入的数据已经被干掉了.mysql&gt; select * from user;+----+------+-------+| id | name | money |+----+------+-------+| 1 | a | 1000 |+----+------+-------+1 row in set (0.01 sec)**** 对于这种场景,如果想让用户b数据成功提交, 可以通过commit;命令执行手动提交操作.手动提交后,如果想再次通过rollback来撤销,则是不可以的.也就是说,事务一旦提交,执行的sql语句就不可以再撤销,也就是说事务一旦提交数据就会持久的产生效果. (3)手动开启事务begin和start transaction都可以手动开启一个事务. 也就是说,当我们当前的mysql如果默认的是自动提交模式,则执行rollback进行事务回滚则是无效的. 但是可以通过begin和start transaction手动开启事务. 1234567即: 当前默认为自动提交模式,此时执行rollback无效.执行下面sql语句: start transaction;(或者begin;) update user set money = money - 100 where name = 'a'; update user set money = money + 100 where name = 'b'; 执行完插入a,b用户数据后,再执行rollback,发现可以成功回滚事务.可以成功切换成手动开启事务的模式.若想使得插入的数据生效,也需要手动执行commit进行提交操作. 事务开启之后,一旦commit提交,就不可以回滚,也就说,当前的这个事务在提交的时候就已经结束了. 事务的四大特征A 原子性: 事务是最小的单元, 不可以在分割.C 一致性: 事务要求, 同一事务中的sql语句必须保证同时成功,同时失败.I 隔离性: 事务1 和事务2之间shi具有隔离性的.D 持久性: 事务一旦结束(commit,rollback),就不可以返回. 事务的隔离性多个事务之间隔离的，相互独立的。但是如果多个事务操作同一批数据，则会引发一些问题，设置不同的隔离级别就可以解决这些问题.存在问题：(1) 脏读：一个事务，读取到另一个事务中没有提交的数据.(2)不可重复读(虚读)：在同一个事务中，两次读取到的数据不一样.(3)幻读：一个事务操作(DML)数据表中所有记录，另一个事务添加了一条数据，则第一个事务查询不到自己的修改.read uncommitted; 读未提交的–&gt;产生的问题：脏读、不可重复读、幻读.read committed; 读已经提交的–&gt;产生的问题：不可重复读、幻读repeatable read; 可以重复读–&gt;产生的问题：幻读serializable; 串行化&lt;性能特差&gt;通常是隔离级别越高,性能越差.(1)查看数据库的隔离级别mysql默认的隔离级别: REPEATABLE-READ mysql8.0*:系统级别的:select @@global.transaction_isolation;会话级别的:select @@transaction_isolation; mysql5.x*:系统级别的:select @@global.tx_isolation;会话级别的:select @@tx_isolation;1234567mysql&gt; select @@global.transaction_isolation;+--------------------------------+| @@global.transaction_isolation |+--------------------------------+| REPEATABLE-READ |+--------------------------------+1 row in set (0.00 sec) (2)修改隔离级别1set global tansaction isolation level read uncomitted; 数据库的三大范式 第一范式 数据表中的所有字段都是不可分割的原子项.初步可以理解为:字段值还可以继续拆分的,就不满足第一范式.比如某表中有一个address的字段,插入值为”中国陕西省西安市碑林区柏树林11号”.该字段值是可以继续拆分的,原则上就不满足第一范式.可以依次拆分为:国家/省/市/区/街道等等.当然,范式设计的越详细,对某些实际操作可能会更好.但不一定都是好处.&lt;比如对address字段来说,可能拆分开来永远都用不到这么详细的信息,可能就没有拆分的必要.&gt; 第二范式必须是满足第一范式的前提下,第二范式要求,除主键外的每一列都必须完全依赖主键.如果要出现不完全依赖,只可能发生在联合主键的情况下.例如:12345678910111213141516171819202122create table myorder( product_id int, customer_id int, product_name varchar(20), customer_name varchar(20), primary key(product_id, customer_id) ); #当前表中, 除主键以外的其他列, 只依赖于主键的部分字段.则不满足第二范式,通常需要拆表.create table myorder( order_id int primary key, product_id int, customer_id int );create table product ( id int primary key, name varchar(20) );create table customer( id int primary key, name varchar(20) );#拆分成三个表后,满足第二范式. 第三范式必须先满足第二范式.除开主键列的其他列之间不能有传递依赖关系. 附件查询语句所涉及的sql语句 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970717273747576777879808182838485868788899091create table student( sno varchar(20) primary key, sname varchar(20) not null, ssex varchar(20) not null, sbrithday datetime, class varchar(20) );create table student( sno varchar(20) primary key, sname varchar(20) not null, ssex varchar(10) not null, sbirthday datetime, class varchar(20))create table teacher( tno varchar(20) primary key, tname varchar(20) not null, tsex varchar(20) not null, tbirthday datetime, prof varchar(20) not null, depart varchar(20) not null );create table course( cno varchar(20) primary key, cname varchar(20) not null, tno varchar(20) not null, foreign key(tno) references teacher(tno) );create table score( sno varchar(20) not null, degree decimal, primary key (sno, cno), foreign key (sno) references student(sno), foreign key (cno) references course(cno) );insert into student values ('101','曾华','男','1977-09-01','95033');insert into student values ('102','匡明','男','1975-10-02','95031');insert into student values ('103','王丽','女','1976-01-23','95033');insert into student values ('104','李军','男','1976-02-20','95033');insert into student values ('105','王芳','女','1975-02-10','95031');insert into student values ('106','陆君','男','1974-06-03','95031');insert into student values ('107','王尼玛','男','1976-02-20','95033');insert into student values ('108','张全蛋','男','1975-02-10','95031');insert into student values ('109','赵铁柱','男','1974-06-03','95031');insert into teacher values ('804','李成','男','1958-12-02','副教授','计算机系');insert into teacher values ('856','张旭','男','1969-03-12','讲师','电子工程系');insert into teacher values ('825','王萍','女','1972-05-05','助教','计算机系');insert into teacher values ('831','刘冰','女','1977-08-14','助教','电子工程系');insert into course values ('3-105','计算机导论', '825');insert into course values ('3-245','操作系统', '804');insert into course values ('6-166','数字电路', '856');insert into course values ('9-888','高等数学', '831'); insert into score values('103','3-245','86');insert into score values('105','3-245','75');insert into score values('109','3-245','68');insert into score values('103','3-105','92');insert into score values('105','3-105','88');insert into score values('109','3-105','76');insert into score values('103','3-105','64');insert into score values('105','6-166','79');insert into score values('109','6-166','81');create table person( id int primary key auto_increment, name varchar(20), cardId int);create table card ( id int, name varchar(20));insert into card values (1,'饭卡');insert into card values (2,'建行卡');insert into card values (3,'农行卡');insert into card values (4,'工商卡');insert into card values (5,'邮政卡');insert into person values (1,'张三',1);insert into person values (2,'李四',3);insert into person values (3,'王五',6); ————————————————版权声明：本文为CSDN博主「智障二百五」的原创文章，遵循CC 4.0 BY-SA版权协议，转载请附上原文出处链接及本声明。原文链接：https://blog.csdn.net/weixin_45108087/article/details/102766281","categories":[{"name":"MySQL","slug":"MySQL","permalink":"https://github.com/wangqi1994/wangqi1994.github.io/categories/MySQL/"}],"tags":[{"name":"MySQL","slug":"MySQL","permalink":"https://github.com/wangqi1994/wangqi1994.github.io/tags/MySQL/"}]},{"title":"Jps命令—使用详解","slug":"Jps命令—使用详解","date":"2020-05-08T04:00:00.000Z","updated":"2020-05-08T04:00:00.000Z","comments":true,"path":"2020/05/08/Jps命令—使用详解/","link":"","permalink":"https://github.com/wangqi1994/wangqi1994.github.io/2020/05/08/Jps%E5%91%BD%E4%BB%A4%E2%80%94%E4%BD%BF%E7%94%A8%E8%AF%A6%E8%A7%A3/","excerpt":"","text":"Jps命令—使用详解 原文：https://blog.csdn.net/wisgood/article/details/38942449 jps是jdk提供的一个查看当前java进程的小工具， 可以看做是JavaVirtual Machine Process Status Tool的缩写。非常简单实用。 命令格式：jps [options ] [ hostid ] [options]选项 ：-q：仅输出VM标识符，不包括classname,jar name,arguments in main method-m：输出main method的参数-l：输出完全的包名，应用主类名，jar的完全路径名-v：输出jvm参数-V：输出通过flag文件传递到JVM中的参数(.hotspotrc文件或-XX:Flags=所指定的文件-Joption：传递参数到vm,例如:-J-Xms512m [hostid]：[protocol:][[//]hostname][:port][/servername] 命令的输出格式 ：lvmid [ [ classname| JARfilename | “Unknown”] [ arg* ] [ jvmarg* ] ] 1）jps 2）jps –l:输出主类或者jar的完全路径名 3）jps –v :输出jvm参数 4）jps –q ：仅仅显示java进程号 5)jps -mlv10.134.68.173 注意：如果需要查看其他机器上的jvm进程，需要在待查看机器上启动jstatd。","categories":[{"name":"JAVA","slug":"JAVA","permalink":"https://github.com/wangqi1994/wangqi1994.github.io/categories/JAVA/"}],"tags":[{"name":"JAVA","slug":"JAVA","permalink":"https://github.com/wangqi1994/wangqi1994.github.io/tags/JAVA/"}]},{"title":"数仓培训第八天","slug":"若泽大数据-剑指数仓培训笔记8","date":"2020-05-07T04:00:00.000Z","updated":"2020-05-07T04:00:00.000Z","comments":true,"path":"2020/05/07/若泽大数据-剑指数仓培训笔记8/","link":"","permalink":"https://github.com/wangqi1994/wangqi1994.github.io/2020/05/07/%E8%8B%A5%E6%B3%BD%E5%A4%A7%E6%95%B0%E6%8D%AE-%E5%89%91%E6%8C%87%E6%95%B0%E4%BB%93%E5%9F%B9%E8%AE%AD%E7%AC%94%E8%AE%B08/","excerpt":"","text":"1.Hadoop介绍广义: 以Apache hadoop软件为主的生态圈 也包含 hive sqoop hbase kafka spark flink狭义: Apache hadoop软件 Apache hadoop软件:版本1.x,2.x,3.x主流2.x版本hdfs 存储 -数据存储 –hadoop分布式文件系统mapreduce 计算(作业) -计算分析 map reduce两个函数yarn 资源和作业调度 -控制计算存储资源 大数据平台: 存储是第一位 ；存储和计算是相辅相成的 官网:hadoop.apache.orghive.apache.org 网址格式：组件.apache.org APACHE版本:2.x3.x 生产上至今企业还是以CDH5.x为主 (cloudera公司)hadoop-2.6.0-cdh5.16.2.tar.gz 2.hadoop hdfs安装2.1 创建用户和文件夹12345678910111213141516[root@hadoop001 ~]# useradd hadoop[root@hadoop001 ~]# su - hadoop[hadoop@hadoop001 ~]$ mkdir tmp sourcecode software shell log lib data apptmp 存放临时文件 pid等文件app sourcecode源码编译software上传资源包shell脚本log日志lib第三方架包data存储第三方数据[hadoop@hadoop001 ~]$ cd software/[hadoop@hadoop001 software]$ lltotal 605476-rw-r--r--. 1 root root 434354462 May 7 09:54 hadoop-2.6.0-cdh5.16.2.tar.gz-rw-r--r--. 1 hadoop hadoop 185646832 May 7 11:04 jdk-8u181-linux-x64.tar.gz 2.2 安装部署jdk步骤参考：https://wangqi1994.github.io/2020/04/26/JDK部署/ 生产注意点:利用cdh的话,jdk在生产上有要求,否则有bug生产上一般使用jdk8 下载官方推荐的版本8u181apache上说7以上就可以建议8，以cloudra公司为准，避免踩坑 apache官网java版本要求cloudra官网java版本要求 cds sparkcdk kafka 1234567891011121314151617181920212223242526272829[hadoop@hadoop001 software]$ which java/usr/java/jdk1.8.0_45/bin/java#切回root用户，防止权限问题[root@hadoop001 ~]# cd /home/hadoop/software/[root@hadoop001 software]# tar -xzvf jdk-8u181-linux-x64.tar.gz -C /usr/java #查看用户权限并修改用户权限[root@hadoop001 java]# lltotal 8drwxr-xr-x. 7 10 143 4096 Jul 7 2018 jdk1.8.0_181drwxr-xr-x. 8 root root 4096 Apr 11 2015 jdk1.8.0_45[root@hadoop001 java]# chown -R root:root jdk1.8.0_181[root@hadoop001 java]# lltotal 8drwxr-xr-x. 7 root root 4096 Jul 7 2018 jdk1.8.0_181drwxr-xr-x. 8 root root 4096 Apr 11 2015 jdk1.8.0_45#配置环境变量[root@hadoop001 java]# vi /etc/profile# ruozedata environmentexport JVA_HOME=/usr/java/jdk1.8.0_181export PATH=$JVA_HOME/bin:$PATH#source生效环境变量[root@hadoop001 java]# source /etc/profile#测试[root@hadoop001 java]# which java/usr/java/jdk1.8.0_181/bin/java[root@hadoop001 java]# java -versionjava version \"1.8.0_181\"Java(TM) SE Runtime Environment (build 1.8.0_181-b13)Java HotSpot(TM) 64-Bit Server VM (build 25.181-b13, mixed mode) 2.3 hadoop解压和软连接12345678910[hadoop@hadoop001 software]$ tar -xzvf hadoop-2.6.0-cdh5.16.2.tar.gz -C ../app/[hadoop@hadoop001 software]$ cd ../app[hadoop@hadoop001 app]$ lltotal 4drwxr-xr-x. 14 hadoop hadoop 4096 Jun 3 2019 hadoop-2.6.0-cdh5.16.2[hadoop@hadoop001 app]$ ln -s hadoop-2.6.0-cdh5.16.2 hadoop #软连接[hadoop@hadoop001 app]$ lltotal 4lrwxrwxrwx. 1 hadoop hadoop 22 May 7 11:20 hadoop -&gt; hadoop-2.6.0-cdh5.16.2drwxr-xr-x. 14 hadoop hadoop 4096 Jun 3 2019 hadoop-2.6.0-cdh5.16.2 软连接介绍和场景ln -s 目标路径 软连接路径1.版本切换 -相当于快捷方式切换版本时，就是将原先的hadoop文件删除，在进行软连接/home/hadoop/app/hadoop/home/hadoop/app/hadoop-2.6.0-cdh5.16.2 如果不用软连接，想要升级替换版本 代码脚本都要仔细检查修改 2–》3但是如果提前设置软连接，代码脚本是hadoop，不关心版本多少 2.小盘换大盘 -降低磁盘内存爆的风险/根目录磁盘 设置的比较小 20G 如果/app/log/hadoop-hdfs 文件夹是18G会增加内存爆炸的风险可以通过外部挂载一个盘 如/data01将该文件夹移动到挂载盘，再通过软连接来连接 12mv /app/log/hadoop-hdfs /data01/ ==&gt;/data01/hadoop-hdfsln -s /data01/hadoop-hdfs /app/log/hadoop-hdfs 2.4 显性指定环境变量1234[hadoop@hadoop001 app]$ cd hadoop/etc/hadoop[hadoop@hadoop001 hadoop]$ vi hadoop-env.sh export JAVA_HOME=/usr/java/jdk1.8.0_181 2.5 hadoop介绍和官方文档hadoop三种模式：Local (Standalone) Mode 本地模式Pseudo-Distributed Mode 伪分布式模式 - 安装官方文档做Fully-Distributed Mode 分布式模式 集群 -之后讲 官方文档 2.6 配置ssh hadoop001 无密码认证12345678910111213141516171819202122232425262728293031323334[hadoop@hadoop001 ~]$ rm -rf .ssh #生产上不要随意删除某个文件,首先要确认内容,这里需要看authorized_keys 文件是否有内容，有就尽量不要删[hadoop@hadoop001 ~]$ ssh-keygenGenerating public/private rsa key pair.Enter file in which to save the key (/home/hadoop/.ssh/id_rsa): # 直接回车确认Created directory '/home/hadoop/.ssh'.Enter passphrase (empty for no passphrase): #直接回车不设密码Enter same passphrase again: #继续回车Your identification has been saved in /home/hadoop/.ssh/id_rsa.Your public key has been saved in /home/hadoop/.ssh/id_rsa.pub.The key fingerprint is:d6:5f:35:4f:6c:f8:38:0b:65:ab:6d:50:3b:a6:71:91 hadoop@hadoop001The key's randomart image is:+--[ RSA 2048]----+| || + || E.=|| . + Xo|| S . + X o|| . . @ + || + + || . || |+-----------------+[hadoop@hadoop001 ~]$ cd .ssh[hadoop@hadoop001 .ssh]$ cat ~/.ssh/id_rsa.pub &gt;&gt; ~/.ssh/authorized_keys #注意写上路径，相对路径无法找到authorized_keys[hadoop@hadoop001 .ssh]$ chmod 0600 ~/.ssh/authorized_keys #非root用户刷权限[hadoop@hadoop001 .ssh]$ ssh hadoop001 date # 确保在/etc/hosts文件中有hadoop001 机器名称，否则容易报错ssh: Could not resolve hostname hadoop001: Name or service not knownThe authenticity of host 'hadoop001 (192.168.111.131)' can't be established.ECDSA key fingerprint is 8d:08:cf:2b:40:03:aa:7a:4e:0c:60:0f:2c:19:8c:1a.Are you sure you want to continue connecting (yes/no)? yesWarning: Permanently added 'hadoop001,192.168.111.131' (ECDSA) to the list of known hosts.Thu May 7 14:02:46 CST 2020[hadoop@hadoop001 .ssh]$ ssh hadoop001 dateThu May 7 14:02:51 CST 2020 2.7 修改配置hdfs的三个进程都以hadoop001名称启动 1234567891011121314151617181920212223242526272829303132333435363738# nn启动以hadoop001名称启动etc/hadoop/core-site.xml #核心文件，在app下hadoop文件下&lt;configuration&gt; &lt;property&gt; &lt;name&gt;fs.defaultFS&lt;/name&gt; &lt;value&gt;hdfs://hadoop001:9000&lt;/value&gt; #修改为用机器名字启动 &lt;/property&gt; &lt;property&gt; &lt;name&gt;hadoop.tmp.dir&lt;/name&gt; #配置tmp目录，建议自身目录的tmp文件夹 &lt;value&gt;/home/hadoop/tmp/&lt;/value&gt; &lt;/property&gt;&lt;/configuration&gt;# snn启动以hadoop001名称启动etc/hadoop/hdfs-site.xml #在app下hadoop文件下&lt;configuration&gt; &lt;property&gt; &lt;name&gt;dfs.replication&lt;/name&gt; &lt;value&gt;1&lt;/value&gt; &lt;/property&gt; &lt;property&gt; #复制两份 &lt;name&gt;dfs.namenode.secondary.http-address&lt;/name&gt; &lt;value&gt;hadoop001:9868&lt;/value&gt;# 机器名根据自身情况设置 &lt;/property&gt; &lt;property&gt; &lt;name&gt;dfs.namenode.secondary.https-address&lt;/name&gt; &lt;value&gt;hadoop001:9868&lt;/value&gt; &lt;/property&gt;&lt;/configuration&gt;#dn启动以hadoop001名称启动[hadoop@hadoop001 hadoop]$ pwd/home/hadoop/app/hadoop/etc/hadoop[hadoop@hadoop001 hadoop]$ vi slaves hadoop001 注意点：tmp目录一般有一个30天的删除功能，所以尽量不要把文件存储在tmp文件夹中 2.8 格式化1234[hadoop@ruozedata001 hadoop]$ pwd/home/hadoop/app/hadoop[hadoop@ruozedata001 hadoop]$ bin/hdfs namenode -format#只需第一次即可，格式化自己的编码存储格式，构建自己分布式文件系统的编码格式，只要做第一次 2.9 启动1234567891011121314[hadoop@hadoop001 hadoop]$ sbin/start-dfs.sh20/05/07 15:11:22 WARN util.NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicableStarting namenodes on [hadoop001]hadoop001: starting namenode, logging to /home/hadoop/app/hadoop-2.6.0-cdh5.16.2/logs/hadoop-hadoop-namenode-hadoop001.outhadoop001: starting datanode, logging to /home/hadoop/app/hadoop-2.6.0-cdh5.16.2/logs/hadoop-hadoop-datanode-hadoop001.outStarting secondary namenodes [hadoop001]hadoop001: starting secondarynamenode, logging to /home/hadoop/app/hadoop-2.6.0-cdh5.16.2/logs/hadoop-hadoop-secondarynamenode-hadoop001.out20/05/07 15:11:52 WARN util.NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable[hadoop@hadoop001 hadoop]$ jps42944 SecondaryNameNode43171 Jps42357 NameNode42555 DataNode[hadoop@hadoop001 hadoop]$ sbin/stop-all.sh =stop_dfs和stop_yarn 2.10 open web：12345[hadoop@hadoop001 hadoop]$ netstat -nlp |grep 42357(Not all processes could be identified, non-owned process info will not be shown, you would have to be root to see it all.)tcp 0 0 192.168.111.131:9000 0.0.0.0:* LISTEN 42357/java tcp 0 0 0.0.0.0:50070 0.0.0.0:* LISTEN 42357/java 根据端口和ip能打开网页说明hadoop第一个组件是ok的http://192.168.111.131:50070/dfshealth.html#tab-overview 注意：查看防火墙情况，要想在外部访问虚拟机，需要关闭linux防火墙 1systemctrl stop firewalld 2.11 创建文件夹12345678910[hadoop@hadoop001 hadoop]$ bin/hdfs dfs -mkdir /usr20/05/07 17:38:32 WARN util.NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable[hadoop@hadoop001 hadoop]$ bin/hdfs dfs -ls /20/05/07 17:39:09 WARN util.NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicableFound 1 itemsdrwxr-xr-x - hadoop supergroup 0 2020-05-07 17:38 /usr[hadoop@hadoop001 hadoop]$ ls /bin boot dev etc home lib lib64 lost+found media mnt opt proc root run sbin srv sys tmp usr var[hadoop@hadoop001 hadoop]$ bin/hdfs dfs -mkdir /usr/hadoop/20/05/07 17:42:19 WARN util.NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable 2.12 上传linux–&gt;hdfs12345[hadoop@hadoop001 hadoop]$ bin/hdfs dfs -mkdir /wordcount #创建一个文件夹20/05/07 17:43:13 WARN util.NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable[hadoop@hadoop001 hadoop]$ bin/hdfs dfs -mkdir /wordcount/input #创建input文件夹，output文件夹不需要创建，运算结束会自动创建20/05/07 17:43:25 WARN util.NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable[hadoop@hadoop001 hadoop]$ bin/hdfs dfs -put etc/hadoop/*.xml /wordcount/input #上传数据 2.13 计算123bin/hadoop jar \\share/hadoop/mapreduce/hadoop-mapreduce-examples-2.6.0-cdh5.16.2.jar \\ #根据自己文件路径和名称填写grep /wordcount/input /wordcount/output 'dfs[a-z.]+' #input和output路径最好写全，否则是去找user目录下的文件夹 2.14 下载从hdfs–&gt;linux1234567891011121314[hadoop@hadoop001 hadoop]$ bin/hdfs dfs -get /wordcount/output output #从hdfs下载到Linux对应目录下的output文件夹20/05/07 17:57:12 WARN util.NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable[hadoop@hadoop001 hadoop]$ cat output/cat: output/: Is a directory[hadoop@hadoop001 hadoop]$ cd output/[hadoop@hadoop001 output]$ lltotal 4-rw-r--r--. 1 hadoop hadoop 90 May 7 17:57 part-r-00000-rw-r--r--. 1 hadoop hadoop 0 May 7 17:57 _SUCCESS[hadoop@hadoop001 output]$ cat part-r-00000 1 dfsadmin1 dfs.replication1 dfs.namenode.secondary.https1 dfs.namenode.secondary.http","categories":[{"name":"ruozedata","slug":"ruozedata","permalink":"https://github.com/wangqi1994/wangqi1994.github.io/categories/ruozedata/"},{"name":"Hadoop","slug":"Hadoop","permalink":"https://github.com/wangqi1994/wangqi1994.github.io/categories/Hadoop/"}],"tags":[{"name":"ruozedata","slug":"ruozedata","permalink":"https://github.com/wangqi1994/wangqi1994.github.io/tags/ruozedata/"},{"name":"Hadoop","slug":"Hadoop","permalink":"https://github.com/wangqi1994/wangqi1994.github.io/tags/Hadoop/"}]},{"title":"Linux查看信息汇总","slug":"Linux查看信息汇总","date":"2020-05-01T04:00:00.000Z","updated":"2020-05-01T04:00:00.000Z","comments":true,"path":"2020/05/01/Linux查看信息汇总/","link":"","permalink":"https://github.com/wangqi1994/wangqi1994.github.io/2020/05/01/Linux%E6%9F%A5%E7%9C%8B%E4%BF%A1%E6%81%AF%E6%B1%87%E6%80%BB/","excerpt":"","text":"Linux查看硬件信息系统 12345678uname -a # 查看内核/操作系统/CPU信息head -n 1 /etc/issue # 查看操作系统版本cat /proc/cpuinfo # 查看CPU信息hostname # 查看计算机名lspci -tv # 列出所有PCI设备（yum install pciutils）lsusb -tv # 列出所有USB设备lsmod # 列出加载的内核模块env # 查看环境变量 资源 1234567free -m # 查看内存使用量和交换区使用量df -h # 查看各分区使用情况du -sh &lt;目录名&gt; # 查看指定目录的大小grep MemTotal /proc/meminfo # 查看内存总量grep MemFree /proc/meminfo # 查看空闲内存量uptime # 查看系统运行时间、用户数、负载cat /proc/loadavg # 查看系统负载 磁盘和分区 12345mount | column -t # 查看挂接的分区状态fdisk -l # 查看所有分区swapon -s # 查看所有交换分区hdparm -i /dev/hda # 查看磁盘参数(仅适用于IDE设备)dmesg | grep IDE # 查看启动时IDE设备检测状况 网络 123456ifconfig # 查看所有网络接口的属性iptables -L # 查看防火墙设置route -n # 查看路由表netstat -lntp # 查看所有监听端口netstat -antp # 查看所有已经建立的连接netstat -s # 查看网络统计信息 进程 12ps -ef # 查看所有进程top # 实时显示进程状态 用户 123456w # 查看活动用户id &lt;用户名&gt; # 查看指定用户信息last # 查看用户登录日志cut -d: -f1 /etc/passwd # 查看系统所有用户cut -d: -f1 /etc/group # 查看系统所有组crontab -l # 查看当前用户的计划任务 服务 12chkconfig --list # 列出所有系统服务chkconfig --list | grep on # 列出所有启动的系统服务 程序 1rpm -qa # 查看所有安装的软件包 查看网卡型号 1lspci | grep Ethernet 查看内存和cpu最直接最常用的命令 12freecat /proc/cpuinfo 查看硬盘信息（查看硬盘型号和硬盘序列号） 1df -h","categories":[{"name":"Linux","slug":"Linux","permalink":"https://github.com/wangqi1994/wangqi1994.github.io/categories/Linux/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"https://github.com/wangqi1994/wangqi1994.github.io/tags/Linux/"}]},{"title":"Hexo部署博客备忘","slug":"博客备忘流程","date":"2020-05-01T04:00:00.000Z","updated":"2020-05-01T04:00:00.000Z","comments":true,"path":"2020/05/01/博客备忘流程/","link":"","permalink":"https://github.com/wangqi1994/wangqi1994.github.io/2020/05/01/%E5%8D%9A%E5%AE%A2%E5%A4%87%E5%BF%98%E6%B5%81%E7%A8%8B/","excerpt":"","text":"1.node.js部署下载安装包，安装完成后，打开cmd窗口 输入:node -vnpm -v出现标识 成功安装node.js 永久设置淘宝源npm config set registry http://registry.npm.taobao.org/ 2.git部署下载Git 官方地址为：https://git-scm.com/download/win选择组件选择使用命令行环境以下三步默认，直接点击下一步 安装完成后检验是否成功 回到电脑桌面，鼠标右击如果看到有两个git单词则安装成功 3.hexo部署官方文档 1npm install -g hexo-cli 先创建 E:\\hexo #进入cd初始化博客目录 1234567891011hexo init ruozedatablognpm installhexo clean #清理缓存hexo g #生成静态文件hexo s #启动服务器hexo clean &amp;&amp; hexo g &amp;&amp; hexo s http://localhost:4000/ 4.github注册 英文名称简约 好记 高大尚https://github.com/join?source=header-home 注册 12345678ssh-keygen -t rsa -b 4096 -C \"zxcwangqi@163.com\"#settings进入ssh 点击generate ssh ，选generate new ssh cd /c/Users/Administrator/.ssh/id_rsa.pub #注意Administrator是本地电脑名称# 在github上设置新的ssh，将上述文件拷入ssh的key中建立连接ssh -T git@github.com # 第一次执行 是需要输入yesgit config --global user.name \"wangqi1994\"git config --global user.email \"zxcwangqi@163.com\" https://github.com/wangqi1994/wangqi1994.github.io名字需要一致 5.hexo部署githubwindow—&gt;github 1234567891011npm install hexo-deployer-git --save# Deployment## Docs: https://hexo.io/docs/deployment.htmldeploy: type: git repo: git@github.com:wangqi1994/wangqi1994.github.io.git branch: masterhexo clean &amp;&amp; hexo deploy # 应该会出现 github的登录窗口 输入账号密码登录 6.换个高大尚的主题https://github.com/JoeyBling/hexo-theme-yilia-plus cd ./themes/git clone –depth=1 https://github.com/JoeyBling/hexo-theme-yilia-plus.git ./yilia-plus 修改hexo根目录下的 _config.ymltheme: yilia-plus 部署推hexo clean &amp;&amp; hexo deploy _config.yml修改你直接的地址 12345678910111213deploy: type: git repo: git@github.com:wangqi1994/wangqi1994.github.io.git branch: masterPush hexo blog html to local :hexo clean &amp;&amp; hexo generate &amp;&amp; hexo serveropen web: http://localhost:4000Push hexo blog html to github :hexo clean &amp;&amp; hexo deployopen web: https://wangqi1994.github.io Markdown语法学习http://markdown.xiaoshujiang.com/","categories":[{"name":"hexo","slug":"hexo","permalink":"https://github.com/wangqi1994/wangqi1994.github.io/categories/hexo/"}],"tags":[{"name":"hexo","slug":"hexo","permalink":"https://github.com/wangqi1994/wangqi1994.github.io/tags/hexo/"}]},{"title":"解决Hexo博客文章置顶问题","slug":"解决Hexo博客文章置顶问题","date":"2020-05-01T04:00:00.000Z","updated":"2020-05-01T04:00:00.000Z","comments":true,"path":"2020/05/01/解决Hexo博客文章置顶问题/","link":"","permalink":"https://github.com/wangqi1994/wangqi1994.github.io/2020/05/01/%E8%A7%A3%E5%86%B3Hexo%E5%8D%9A%E5%AE%A2%E6%96%87%E7%AB%A0%E7%BD%AE%E9%A1%B6%E9%97%AE%E9%A2%98/","excerpt":"","text":"原文 Hexo默认只提供了按发布日期的排序 12345678# Home page setting# path: Root path for your blogs index page. (default = '')# per_page: Posts displayed per page. (0 = disable pagination)# order_by: Posts order. (Order by date descending by default)index_generator: path: '' per_page: 10 order_by: -date 原理：在Hexo生成首页HTML时，将top值高的文章排在前面，达到置顶功能。 修改Hexo文件夹下的node_modules/hexo-generator-index/lib/generator.js，在生成文章之前进行文章top值排序。 需添加的代码： 12345678910111213posts.data = posts.data.sort(function(a, b) &#123; if(a.top &amp;&amp; b.top) &#123; if(a.top == b.top) return b.date - a.date; else return b.top - a.top; &#125; else if(a.top &amp;&amp; !b.top) &#123; return -1; &#125; else if(!a.top &amp;&amp; b.top) &#123; return 1; &#125; else return b.date - a.date;&#125;); 其中涉及Javascript的比较函数： 123cmp(var a, var b) &#123; return a - b; // 升序，降序的话就 b - a&#125; 修改完成后，只需要在front-matter中设置需要置顶文章的top值，将会根据top值大小来选择置顶顺序top值越大越靠前。需要注意的是，这个文件不是主题的一部分，也不是Git管理的，备份的时候比较容易忽略。在git push 之前将 .gitignore文件中的node_modules/ 去掉，即可将配置文件上传，在另一台电脑clone时，可以将配置完美下载 以下是最终的generator.js内容 12345678910111213141516171819202122232425262728'use strict';var pagination = require('hexo-pagination');module.exports = function(locals) &#123; var config = this.config; var posts = locals.posts.sort(config.index_generator.order_by); posts.data = posts.data.sort(function(a, b) &#123; if(a.top &amp;&amp; b.top) &#123; if(a.top == b.top) return b.date - a.date; else return b.top - a.top; &#125; else if(a.top &amp;&amp; !b.top) &#123; return -1; &#125; else if(!a.top &amp;&amp; b.top) &#123; return 1; &#125; else return b.date - a.date; &#125;); var paginationDir = config.pagination_dir || 'page'; return pagination('', posts, &#123; perPage: config.index_generator.per_page, layout: ['index', 'archive'], format: paginationDir + '/%d/', data: &#123; __index: true &#125; &#125;);&#125;;","categories":[{"name":"hexo","slug":"hexo","permalink":"https://github.com/wangqi1994/wangqi1994.github.io/categories/hexo/"}],"tags":[{"name":"hexo","slug":"hexo","permalink":"https://github.com/wangqi1994/wangqi1994.github.io/tags/hexo/"}]},{"title":"作业-04.29+修改","slug":"作业-04.29","date":"2020-04-30T04:00:00.000Z","updated":"2020-04-30T04:00:00.000Z","comments":true,"path":"2020/04/30/作业-04.29/","link":"","permalink":"https://github.com/wangqi1994/wangqi1994.github.io/2020/04/30/%E4%BD%9C%E4%B8%9A-04.29/","excerpt":"","text":"建表1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465create database devoir;grant all privileges on devoir.* to root@'%' identified by '123456';flush privileges;use devoir;#--部门表#dept部门表(deptno部门编号/dname部门名称/loc地点)create table dept ( deptno numeric(2), dname varchar(14), loc varchar(13));insert into dept values (10, 'ACCOUNTING', 'NEW YORK');insert into dept values (20, 'RESEARCH', 'DALLAS');insert into dept values (30, 'SALES', 'CHICAGO');insert into dept values (40, 'OPERATIONS', 'BOSTON');#--工资等级表#salgrade工资等级表(grade 等级/losal此等级的最低/hisal此等级的最高)create table salgrade ( grade numeric, losal numeric, hisal numeric);insert into salgrade values (1, 700, 1200);insert into salgrade values (2, 1201, 1400);insert into salgrade values (3, 1401, 2000);insert into salgrade values (4, 2001, 3000);insert into salgrade values (5, 3001, 9999);#--员工表#emp员工表(empno员工号/ename员工姓名/job工作/mgr上级编号/hiredate受雇日期/sal薪金/comm佣金/deptno部门编号)#工资 ＝ 薪金 ＋ 佣金create table emp ( empno numeric(4) not null, ename varchar(10), job varchar(9), mgr numeric(4), hiredate datetime, sal numeric(7, 2), comm numeric(7, 2), deptno numeric(2));insert into emp values (7369, 'SMITH', 'CLERK', 7902, '1980-12-17', 800, null, 20);insert into emp values (7499, 'ALLEN', 'SALESMAN', 7698, '1981-02-20', 1600, 300, 30);insert into emp values (7521, 'WARD', 'SALESMAN', 7698, '1981-02-22', 1250, 500, 30);insert into emp values (7566, 'JONES', 'MANAGER', 7839, '1981-04-02', 2975, null, 20);insert into emp values (7654, 'MARTIN', 'SALESMAN', 7698, '1981-09-28', 1250, 1400, 30);insert into emp values (7698, 'BLAKE', 'MANAGER', 7839, '1981-05-01', 2850, null, 30);insert into emp values (7782, 'CLARK', 'MANAGER', 7839, '1981-06-09', 2450, null, 10);insert into emp values (7788, 'SCOTT', 'ANALYST', 7566, '1982-12-09', 3000, null, 20);insert into emp values (7839, 'KING', 'PRESIDENT', null, '1981-11-17', 5000, null, 10);insert into emp values (7844, 'TURNER', 'SALESMAN', 7698, '1981-09-08', 1500, 0, 30);insert into emp values (7876, 'ADAMS', 'CLERK', 7788, '1983-01-12', 1100, null, 20);insert into emp values (7900, 'JAMES', 'CLERK', 7698, '1981-12-03', 950, null, 30);insert into emp values (7902, 'FORD', 'ANALYST', 7566, '1981-12-03', 3000, null, 20);insert into emp values (7934, 'MILLER', 'CLERK', 7782, '1982-01-23', 1300, null, 10); 作业:1.查询出部门编号为30的所有员工的编号和姓名1234selectempno,enamefrom devoir.emp where deptno=30; 2.找出部门编号为10中所有经理，和部门编号为30中所有销售员的详细资料。12345select *from devoir.emp where(deptno=10 and job = 'MANAGER') or (deptno=30 and job ='SALESMAN')order by deptno; 3.查询所有员工详细信息，用工资降序排序，如果工资相同使用入职日期升序排序12345select *,sal+ifnull(comm,0) as money from devoir.emp order by money desc, hiredate asc; 修改：工资只有sal 4.列出薪金大于1500的各种工作及从事此工作的员工人数。12345select job,count(job)from devoir.emp e where (sal+ifnull(comm,0)) &gt;1500group by job ; 修改： 123select e.job,count(*) as 员工人数 # count(*)和count(1)基本作用一致count(job)from emp e group by job having min(sal)&gt;1500; 聚合: 多行–&gt;多行或低于多行各种工作及从事此工作的员工人数 123456select e.job,count(*) as 员工人数,avg(*) as 平均数from emp e group by job select e.job,count(*) as 员工人数 from emp e group by job having count(*)&gt;3; select * from (select e.job,count(*) as 员工人数 from emp e group by job) a where a.员工人数&gt;3; 5.列出在销售部工作的员工的姓名，假定不知道销售部的部门编号。1234567select devoir.emp.ename,devoir.dept.dnamefrom devoir.empleft join devoir.dept on devoir.emp.deptno=devoir.dept.deptnogroup by emp.ename,dept.dname having dname='SALES'; 修改： 12select e.ename from emp ewhere e.deptno =(select deptno from dept where dname='SALES'); 6.查询姓名以S开头的\\以S结尾\\包含S字符\\第二个字母为L __12345678910111213141516#S开头select *from devoir.emp where ename like 'S%';#S结尾select *from devoir.emp where ename like '%S';# 包含Sselect *from devoir.emp where ename like '%S%';#第二个字母Lselect *from devoir.emp where ename like '_L%'; 7.查询每种工作的最高工资、最低工资、人数1234567select job,max(sal+ifnull(comm,0)),min(sal+ifnull(comm,0)),count(job)from devoir.emp group by job; 8.列出薪金 高于 公司平均薪金的所有员工号，员工姓名，所在部门名称，上级领导，工资，工资等级1234567891011121314151617181920212223242526272829303132333435363738create view grasselect emp.empno,emp.ename,dept.dname,emp.mgr,emp.sal+ifnull(emp.comm,0) as money#salgrade.grade #where money between losal and hisalfrom empleft join dept on emp.deptno=dept.deptnogroup by emp.empno,emp.ename,dept.dname,emp.mgr,emp.sal+ifnull(emp.comm,0);#salgrade.grade;select gr.empno,gr.ename,gr.dname,gr.mgr,gr.money,salgrade.grade #where money between losal and hisalfrom gr left join salgrade on gr.money between losal and hisal group by # group by 只要选择前面一个字段gr.empno,gr.ename,gr.dname,gr.mgr,gr.money,salgrade.gradehaving gr.money&gt;(select avg(gr.money)from gr) ; 修改： 12345678910select e.empno as 工号,e.ename as 姓名,d.dname as 部门,m.ename as 上级领导,(e.sal+ifnull(e.comm,0)) as 工资,s.grade as 薪水等级from emp e left join dept d on e.deptno=d.deptno #连续join left join emp m on e.mgr=m.empno left join salgrade s on e.sal between s.losal and s.hisalwhere (e.sal+ifnull(e.comm,0)) &gt; (select avg(sal+ifnull(comm,0)) from emp); 9.列出薪金 高于 在部门30工作的 所有/任何一个员工的薪金的员工姓名和薪金、部门名称。12345678910selectgr.ename,gr.money,gr.dname from gr where gr.money &gt;(select max(sal+ifnull(comm,0))from empwhere emp.deptno =30) 修改： 12345678select e.ename, e.sal, d.dnamefrom emp e, dept dwhere e.deptno=d.deptno and sal &gt; all(select sal from emp where deptno=30)# all 是括号内所有的any: # any 是括号内任一个select e.ename, e.sal, d.dnamefrom emp e, dept dwhere e.deptno=d.deptno and sal &gt; any(select sal from emp where deptno=30);","categories":[{"name":"ruozedata","slug":"ruozedata","permalink":"https://github.com/wangqi1994/wangqi1994.github.io/categories/ruozedata/"},{"name":"MySQL","slug":"MySQL","permalink":"https://github.com/wangqi1994/wangqi1994.github.io/categories/MySQL/"}],"tags":[{"name":"ruozedata","slug":"ruozedata","permalink":"https://github.com/wangqi1994/wangqi1994.github.io/tags/ruozedata/"},{"name":"MySQL","slug":"MySQL","permalink":"https://github.com/wangqi1994/wangqi1994.github.io/tags/MySQL/"}]},{"title":"早课5","slug":"20200430","date":"2020-04-30T04:00:00.000Z","updated":"2020-04-30T04:00:00.000Z","comments":true,"path":"2020/04/30/20200430/","link":"","permalink":"https://github.com/wangqi1994/wangqi1994.github.io/2020/04/30/20200430/","excerpt":"","text":"1.Linux的hosts文件，我们应该注意什么 -复习主机名的配置文件是/etc/hosts 2.Windows系统的hosts会找吗？-复习C:\\Windows\\System32\\drivers\\etc文件下的hosts文件 3.一般shell，代码这些我们与机器通信，是hostname吗？一般是以ip通信，所有的计算机都不能相互通过Hostname来访问 4.后台执行脚本或命令，前后加什么?nohup 脚本 &amp; 5.执行xxx.sh脚本需要什么权限，哪两种方式执行执行权限chmod +x xxx.shchmod 755 xxx.sh切换到有权限的用户 7.crontab 编辑和查看参数是什么? 五个 * ，分别代表什么 -复习123456789crontab -l #-e是查看 crontab -e #-e是编辑 ， crontab命令可以当一个文本编辑框用五个星号分别代表分 时 日 月 周* 表示 每* * * * * 每分钟 */1 * * * * 每分钟 9.Linux现在遇见两个经典错误，链接拒绝，权限受限，会排查解决了吗？链接拒绝:ping iptelnet ip port防火墙或者安全组策略权限受限:查看用户组 id usermod查看文件权限 ll chmod利用sudo操作，需要去sudoers文件/etc/sudoers 10.mysql部署简述流程-复习文档1.解压及创建目录2.创建my.cnf文件3.创建用户组及用户4.copy 环境变量配置文件至mysqladmin用户的home目录中，解决样式丢失问题5.配置环境变量6.赋权限和用户组，切换用户mysqladmin，安装7.配置服务及开机自启动8.安装libaio及安装mysql的初始db9.查看临时密码10.启动11.登录及修改用户密码12.重启 11.对用户执行完权限相关操作，最后一句命令是什么? -复习flush privileges; 刷权限 12.%代表什么代表任意客户端机器去访问mysql服务器 13.创建用户和设置密码，那句sql会背吗？-复习创建用户 12useradd -u 515 -g dba -G root -d /usr/local/mysql mysqladmin#-u uid -g 主组 -G 次组 -d 家目录设置 设置密码 123456789mysql&gt; alter user root@localhost identified by 'hadoop001' # 记住以分号;结束命令，修改密码 -&gt; ;Query OK, 0 rows affected (0.00 sec)mysql&gt; GRANT ALL PRIVILEGES ON *.* TO 'root'@'%' IDENTIFIED BY 'hadoop001' ;# 一般是公司DBA进行操作Query OK, 0 rows affected, 1 warning (0.00 sec)mysql&gt; flush privileges; # 刷新权限Query OK, 0 rows affected (0.00 sec) 14.vi简述编辑流程vi 进入编辑模式i键进入编辑模式esc退出编辑模式shift+：进入尾行模式wq 保存退出 15.Linux命令里带有大写 R的命令，哪两个?-复习关于权限：chmod -R 777 文件或文件夹chown -R 用户:用户组 文件或文件夹 16.rwxr–r– 数字多少744 17.一个log文件很大，1G，找ERROR怎么办1234cat xxx.log | grep ERROR #提取当前行cat xxx.log | grep -A 5 ERROR #提取关键字出现的后5行cat xxx.log | grep -B 5 ERROR #提取关键字出现的前5行cat xxx.log | grep -C 5 ERROR #提取关键字出现的前后各5行 如果没有-A-B-C则只会打出错误行，最好前后打印15.20行的数据如果 xxx.log ERROR 很多 上万个 可以导出到单独文件查看 12cat xxx.log | grep -C 5 ERROR &gt; 20200418error.logmore 20200418error.log 下载到window，使用文档软件进行查找editplus（window）notepad++ 18.个人环境变量文件在哪，怎样生效-复习全局 : /etc/profile 所有用户都可以使用 个人:&emsp;&emsp;&emsp; ~/.bash_profile 只能是设置命令的当前用户使用 其他不能使用&emsp;&emsp;&emsp; ~/.bashrc [设置个人别名主要修改这个文件]&emsp;&emsp;&emsp; 场景: 使用ssh 远程执行B机器 +命令&emsp;&emsp;&emsp; 提示找不到命令 java command not found&emsp;&emsp;&emsp; 但是直接登录B机器 命令是找到的 which java有的 命令的环境变量配置在.bash_profile 是不正确的。 应该配置在.bashrc文件想在配置后，全局生效，需要新开窗口，老窗口可看作静态窗口 生效文件:修改后需要操作之后才会生效 12345source /etc/profilesource ~/.bash_profilesource ~/.bashrccd 进家目录.空格.bashrc 19.su - 做什么事切换用户 20.三种方式切换用户的家目录123cd ~cd /home/xxx # xxx用户家目录cd 空格 21.一个文件差不多1W行，我要去vi编辑一个参数xxx，但是我不知道在多少行，怎么快速找到?1234vi yyy.logshift+: /xxx #代表搜索的语法，之后输入需要寻找的对象n # 寻找，下翻","categories":[{"name":"ruozedata","slug":"ruozedata","permalink":"https://github.com/wangqi1994/wangqi1994.github.io/categories/ruozedata/"}],"tags":[{"name":"ruozedata","slug":"ruozedata","permalink":"https://github.com/wangqi1994/wangqi1994.github.io/tags/ruozedata/"}]},{"title":"数仓培训第七天","slug":"若泽大数据-剑指数仓培训笔记7","date":"2020-04-30T04:00:00.000Z","updated":"2020-04-30T04:00:00.000Z","comments":true,"path":"2020/04/30/若泽大数据-剑指数仓培训笔记7/","link":"","permalink":"https://github.com/wangqi1994/wangqi1994.github.io/2020/04/30/%E8%8B%A5%E6%B3%BD%E5%A4%A7%E6%95%B0%E6%8D%AE-%E5%89%91%E6%8C%87%E6%95%B0%E4%BB%93%E5%9F%B9%E8%AE%AD%E7%AC%94%E8%AE%B07/","excerpt":"","text":"1.join 左连接以左表为主，数据是全的；右表来匹配，匹配不到就null给业务的话就不要存在null(大数据中百分之七八十的场景是做group by和join计算) 1234567891011select a.*,b.*from a left join b on a.i=b.i; #判断条件1 rz 北京 1 rz 182 jj 上海 2 jj 223 huhu 杭州 #建议所有的都加ifnull 右连接以右表为主，数据是全的；左表来匹配，匹配不到就null 1234567891011select a.*,ifnull(b.i,''), #不想赋0，可以放个空值 ' 'ifnull(b.name,''),ifnull(b.age,'')from a right join b on a.i=b.i;1 rz 北京 1 rz 182 jj 上海 2 jj 22 5 dd 33 内连接-等值连接两个表都存在，才会显示出来 123456789select a.*,ifnull(b.i,''),ifnull(b.name,''),ifnull(b.age,'')from a inner join b on a.i=b.i;1 rz 北京 1 rz 182 jj 上海 2 jj 22 mysql不支持full join， 但是大数据sql支持 比如spark sql#full是可以完全合并表，但是会存在很多空数据selecta1.i,b1.ifrom a a1full join b b1 on a1.i=b1.i; #作用和full一致 1234567891011121314151617181920select a.*,ifnull(b.i,''),ifnull(b.name,''),ifnull(b.age,'')from a left join b on a.i=b.iunion select a.*,ifnull(b.i,''),ifnull(b.name,''),ifnull(b.age,'')from a right join b on a.i=b.i;1 rz 北京 1 rz 182 jj 上海 2 jj 223 huhu 杭州 5 dd 33 大部分是先join在groupby生产上先确定主表不写左右，那就是等值连接不写后边的限制条件，则会第一个表格的每一条匹配后边表格的每一条数据 —笛卡尔积–生产慎用 2.总结1234567891011121314151617181920select * from a limit 1 #限制一条select xxxxx fromt #join操作可能集合到这里where yyyyyy #先执行选择筛选group by xxx having xxx#聚合order by xxx #排序 #不放在聚合前面limit 1;#创建一个v命令包，就可以直接执行一部分代码-需要运行一次代码create view vasselecta1.ib1.agefrom a a1 join b b1 on a1.i=b1.i;select * from v#雾化视图 计算速度快，不需要重复操作 进入数据库，习惯show tables；看到表desc查看表有哪些字段 show create table user； 完整建表语句 部门表和工资等级表是维度表，不太变 union多表格合并 null和任何值计算都是null 彩蛋：这个班级的每个学科的成绩的前三名的同学#哪些部门的哪些职业的薪水和，薪水最高1位的职业是什么1.每个部门的每个职业的薪水和或者平均值 12345678910drop view sal; #起别名create view salasselectdeptno,jobsum(sal+ifnull(comm,0))# 注意ifnullfrom emp group by deptno,job;select * from sal; 2.哪些部门的哪些职业的薪水和，薪水最高1位的职业是什么 12345678910select a.*from sal awhere(select count(*) from sal where a.deptno=b.deptnoand a.sal&lt;b.sal #判断最高)=0order by a.deptno","categories":[{"name":"ruozedata","slug":"ruozedata","permalink":"https://github.com/wangqi1994/wangqi1994.github.io/categories/ruozedata/"},{"name":"MySQL","slug":"MySQL","permalink":"https://github.com/wangqi1994/wangqi1994.github.io/categories/MySQL/"}],"tags":[{"name":"ruozedata","slug":"ruozedata","permalink":"https://github.com/wangqi1994/wangqi1994.github.io/tags/ruozedata/"},{"name":"MySQL","slug":"MySQL","permalink":"https://github.com/wangqi1994/wangqi1994.github.io/tags/MySQL/"}]},{"title":"大数据面试题汇总","slug":"面试题汇总","date":"2020-04-29T04:00:00.000Z","updated":"2020-04-29T04:00:00.000Z","comments":true,"path":"2020/04/29/面试题汇总/","link":"","permalink":"https://github.com/wangqi1994/wangqi1994.github.io/2020/04/29/%E9%9D%A2%E8%AF%95%E9%A2%98%E6%B1%87%E6%80%BB/","excerpt":"","text":"面试题1:老板: 去打开xxx服务器的应用yyy的网页？你会涉及到哪些Linux命令 ip #知道IP，之后需要知道yyy的端口号ps -ef|grep yyy –》pid # 找到pidnetstat -nlp|grep pid –》port # 找到端口号浏览器: http://ip:port要确定ping的通和telnet的通端口号 面试题2:每隔10s打印一次 怎么做 1*/6 * * * * # 不对，这是每6分钟 如果时间是秒 123456789[root@hadoop001 ~]# vi ruoze2.sh #每次六次之后休眠，10秒一跳#!/bin/bashfor((i=1;i&lt;=6;i++));do date sleep 10sdone [root@hadoop001 ~]# chmod +x ruoze2.sh # 设置完之后需要赋权限,所有人都拥有可以执行的权限 面试题3datetime timestamp差别 1.datatime字段默认为NULL， timestamp为NOT NULL默认值为当前时间2.DATATIME使用八字节的存储空间，TIMESTAMP的存储空间为4字节。TIMESTAMP空间利用率更高3.timestamp存储和时区相关，即会根据时区做转换。datatime存进去是什么就是什么不会变动 面试题4这个班级的每个学科的成绩的前三名的同学 #哪些部门的哪些职业的薪水和，薪水最高1位的职业是什么1.每个部门的每个职业的薪水和或者平均值 12345678910drop view sal; #起别名create view salasselectdeptno,jobsum(sal+ifnull(comm,0))# 注意ifnullfrom emp group by deptno,job;select * from sal; 2.哪些部门的哪些职业的薪水和，薪水最高1位的职业是什么 12345678910select a.*from sal awhere(select count(*) from sal where a.deptno=b.deptnoand a.sal&lt;b.sal #判断最高)=0order by a.deptno 面试题5端口号范围：1-65535 面试题6HDFS写流程 HDFS写流程 面试题7HDFS读流程 HDFS读流程 面试题8HDFS副本放置策略 HDFS副本放置策略 面试题9HDFS有两套相同作用的上传下载指令:-get上传 -put 下载-copyToLocal 上传 -copyFromLocal 下载\\ 面试题10MapReduce2.x 架构设计 = mr on yarn提交流程 = yarn的架构设计 https://wangqi1994.github.io/2020/05/17/MapReduce2.x的架构设计/ 面试题11请问作业的主程序运行在那个节点namenodedatenoderesourcemanagernodemanager-container干活 面试题12假如节点有其他组件，比如HBase RS节点256G内存cpu物理core 32核 DNNMHBase RS=30G 请问以上6个参数如何设置？预留256*20%=51.8G暂定52Gdn=2Gnm=4GHBase RS=30Gcontainer 总内存256-52-2-4-30=168G物理core32，设置pcore：vcore=1：2vcore =64一般设置vcore最大4，那么container有16个所以每个内存最大是10G 12345678910111213141516171819202122232425262728293031# cpu参数 &lt;property&gt; &lt;name&gt;yarn.nodemanager.resource.pcores-vcores-multiplier&lt;/name&gt; &lt;value&gt;2&lt;/value&gt; # pcore:vcore=1:2 &lt;/property&gt; &lt;property&gt; &lt;name&gt;yarn.nodemanager.resource.cpu-vcores&lt;/name&gt; &lt;value&gt;64&lt;/value&gt; # 可用虚拟vcore数 &lt;/property&gt; &lt;property&gt; &lt;name&gt;yarn.scheduler.minimum-allocation-vcores&lt;/name&gt; &lt;value&gt;1&lt;/value&gt; #可用虚拟vcore最小数，极限情况下 是32个 &lt;/property&gt; &lt;property&gt; &lt;name&gt;yarn.scheduler.maximum-allocation-vcores&lt;/name&gt; &lt;value&gt;4&lt;/value&gt; &lt;/property&gt; #内存参数 &lt;property&gt; &lt;name&gt;yarn.nodemanager.resource.memory-mb&lt;/name&gt; &lt;value&gt;168&lt;/value&gt; # 该参数控制所有container内存之和,生产上需要调整，默认只有8G &lt;/property&gt; &lt;property&gt; &lt;name&gt;yarn.scheduler.minimum-allocation-mb&lt;/name&gt; &lt;value&gt;1&lt;/value&gt; #container容器内存最小值，默认1G &lt;/property&gt; #在极限情况下，会存在96个container，每个内存1G &lt;property&gt; &lt;name&gt;yarn.scheduler.maximum-allocation-mb&lt;/name&gt; &lt;value&gt;10&lt;/value&gt; #container容器内存最大值，官方默认8G，应该改为上面参数的最大值 &lt;/property&gt; # 极限情况container 16个,所以设置为10G 笔试题1byte的取值范围0-127 变量做加法时不知道会不会超出范围，所以会自己给提升范围，会改变数据类型，自动变为int，所以会因为类型不一致而编译不过 如果后边是常量，则不会出现问题","categories":[{"name":"面试","slug":"面试","permalink":"https://github.com/wangqi1994/wangqi1994.github.io/categories/%E9%9D%A2%E8%AF%95/"}],"tags":[{"name":"面试","slug":"面试","permalink":"https://github.com/wangqi1994/wangqi1994.github.io/tags/%E9%9D%A2%E8%AF%95/"}]},{"title":"Centos杀死进程kill方法大全","slug":"Centos杀死进程kill方法大全","date":"2020-04-29T04:00:00.000Z","updated":"2020-04-29T04:00:00.000Z","comments":true,"path":"2020/04/29/Centos杀死进程kill方法大全/","link":"","permalink":"https://github.com/wangqi1994/wangqi1994.github.io/2020/04/29/Centos%E6%9D%80%E6%AD%BB%E8%BF%9B%E7%A8%8Bkill%E6%96%B9%E6%B3%95%E5%A4%A7%E5%85%A8/","excerpt":"","text":"###Centos杀死进程kill方法大全杀死进程最安全的方法是单纯使用kill命令。 首先使用ps -ef命令确定要杀死进程的PID，然后输入以下命令： 1# kill -pid 注释：标准的kill命令通常都能达到目的。终止有问题的进程，并把进程的资源释放给系统。然而，如果进程启动了子进程，只杀死父进程，子进程仍在运行，因此仍消耗资源。 为了防止这些所谓的“僵尸进程”，应确保在杀死父进程之前，先杀死其所有的子进程。 确定要杀死进程的PID或PPID 1# ps -ef | grep httpd 以优雅的方式结束进程 1# kill -l PID -l选项告诉kill命令用好像启动进程的用户已注销的方式结束进程。当使用该选项时，kill命令也试图杀死所留下的子进程。 但这个命令也不是总能成功–或许仍然需要先手工杀死子进程，然后再杀死父进程。 TERM信号 给父进程发送一个TERM信号，试图杀死它和它的子进程。 1# kill -TERM PPID killall命令 killall命令杀死同一进程组内的所有进程。其允许指定要终止的进程的名称，而非PID。 1# killall httpd 停止和重启进程，如下： 1# kill -HUP PID 该命令让Linux温柔的执行进程关闭，然后立即重启。 在配置应用程序的时候，这个命令很方便，在对配置文件修改后需要重启时可以执行此命令(例如重启nginx经常用到这个命令)。 必杀技 kill -9 PID 当使用此命令时，一定要通过ps -ef确认没有剩下任何僵尸进程。只能通过终止父进程来消除僵尸进程。如果僵尸进程被init收养，问题就比较严重了。杀死init进程意味着关闭系统。 如果系统中有僵尸进程，并且其父进程是init，而且僵尸进程占用了大量的系统资源，那么就需要在某个时候重启机器以清除进程表了。","categories":[{"name":"Linux","slug":"Linux","permalink":"https://github.com/wangqi1994/wangqi1994.github.io/categories/Linux/"}],"tags":[{"name":"Linux","slug":"Linux","permalink":"https://github.com/wangqi1994/wangqi1994.github.io/tags/Linux/"}]},{"title":"MySQL添加comment字段","slug":"MySQL添加comment字段","date":"2020-04-29T04:00:00.000Z","updated":"2020-04-29T04:00:00.000Z","comments":true,"path":"2020/04/29/MySQL添加comment字段/","link":"","permalink":"https://github.com/wangqi1994/wangqi1994.github.io/2020/04/29/MySQL%E6%B7%BB%E5%8A%A0comment%E5%AD%97%E6%AE%B5/","excerpt":"","text":"在MySQL数据库中， 字段或列的注释是用属性comment来添加。 创建新表的脚本中， 可在字段定义脚本中添加comment属性来添加注释。 示例代码如下： 12create table test( id int(11) not null default 0 comment '用户id' ) 如果是已经建好的表， 也可以用修改字段的命令，然后加上comment属性定义，就可以添加上注释了。 示例代码如下： 12alter table test change column id id int(11) not null default 0 comment '测试表id' 查看已有表的所有字段的注释呢？可以用命令：show full columns from table 来查看， 示例如下： 1show full columns from test; 创建表的时候写注释 123create table test1 ( field_name int comment '字段的注释' )comment='表的注释'; #写不写等号是一样的 修改表的注释 1alter table test1 comment '修改后的表的注释'; 修改字段的注释 1alter table test1 modify column field_name int comment '修改后的字段注释'; 注意：字段名和字段类型照写就行 查看表注释的方法-在生成的SQL语句中看 1show create table test1; -在元数据的表里面看 12use information_schema; select * from TABLES where TABLE_SCHEMA='my_db' and TABLE_NAME='test1' \\G 查看字段注释的方法-show 1show full columns from test1; -在元数据的表里面看 1select * from COLUMNS where TABLE_SCHEMA='my_db' and TABLE_NAME='test1' \\G","categories":[{"name":"MySQL","slug":"MySQL","permalink":"https://github.com/wangqi1994/wangqi1994.github.io/categories/MySQL/"}],"tags":[{"name":"MySQL","slug":"MySQL","permalink":"https://github.com/wangqi1994/wangqi1994.github.io/tags/MySQL/"}]},{"title":"解决bash:hexo:command not found","slug":"bug1_hexo_command not found","date":"2020-04-29T04:00:00.000Z","updated":"2020-04-29T04:00:00.000Z","comments":true,"path":"2020/04/29/bug1_hexo_command not found/","link":"","permalink":"https://github.com/wangqi1994/wangqi1994.github.io/2020/04/29/bug1_hexo_command%20not%20found/","excerpt":"","text":"介绍：电脑注销未关闭git正在运行的本地Hexo博客，再次打开想更新的时候输入 hexo，报错 bash: hexo: command not found。 解决思路： 1.本着能解决问题就不重装的原则，首先检查 nodejs 和 npm 是否正常，依次输入命令 node -v 和 npm -v 看看是否有相关版本信息 出现了版本信息就证明 nodejs 和 npm 是没有问题的，那么就应该是环境变量的配置问题了，在【此电脑】右键【属性】，依次选择【高级系统设置】-【环境变量】，选择系统变量 Path，将 node_modules 下的 .bin 文件路径添加到 Path 里面 注意要添加到 Path 里面的是与 _config.yml 在同一个目录的 node_modules 文件夹！环境变量添加好了之后重新打开 git 即可运行 hexo 命令. 2.如果此时仍然无法执行 hexo 命令，那就只能运行命令 npm install hexo-cli -g 重新安装 hexo ！","categories":[{"name":"BUG","slug":"BUG","permalink":"https://github.com/wangqi1994/wangqi1994.github.io/categories/BUG/"},{"name":"hexo","slug":"hexo","permalink":"https://github.com/wangqi1994/wangqi1994.github.io/categories/hexo/"}],"tags":[{"name":"BUG","slug":"BUG","permalink":"https://github.com/wangqi1994/wangqi1994.github.io/tags/BUG/"},{"name":"hexo","slug":"hexo","permalink":"https://github.com/wangqi1994/wangqi1994.github.io/tags/hexo/"}]},{"title":"早课4","slug":"20200427","date":"2020-04-27T04:00:00.000Z","updated":"2020-04-27T04:00:00.000Z","comments":true,"path":"2020/04/27/20200427/","link":"","permalink":"https://github.com/wangqi1994/wangqi1994.github.io/2020/04/27/20200427/","excerpt":"","text":"1.什么是管道符| 管道符，起过滤作用 2.老板让我打开A服务器的 只知道名称好像含有xxx服务的，web界面，请问怎么做？a.根据A服务器，可以得知ipb.ps -ef |grep xxx #找出该服务相关的进程 pidc.netstat -nlp | grep pid # 找出端口号portd.web页面http://ip:port #要确认ip和port都通 3.在杀死进程时，我们应该是否要确认 这个进程就是我们可以杀的？那么全局杀死所有 名称xxx的 进程，命令是什么？-复习肯定要先确认之后才可以进行杀死进程操作kill -9 $(pgrep -f xxx) #全局杀死进程 （记住，慎重） 4.netstat -nlp | grep pid 显示： 127.0.0.1:880；请问外部可以访问吗？不可以，127.0.0.1和localhost只能本地访问 5.netstat -nlp | grep pid 显示： ip:880；外部无法访问，请问应该要注意什么？注意防火墙和安全组策略问题，软件硬件都要注意 6.全局模糊搜索 名称含有 xxx 的文件、文件夹 - 复习12find / -name '*xxx*' #全局模糊搜索find /home/hadoop/ -name '*xxx*' #指定文件夹搜索 7.搜索 安装 卸载 rpm -复习12345rpm-qa | grep xxx # 搜索rpm -ql xxx # 搜索rpm -i xxx # 安装rpm --install xxx # 安装rpm -e xxx --nodeps # --nodeps不校验你的依赖，直接卸载 8.谈谈你们对命令帮助 ，应该怎么看呢？会看吗？命令 –helpman 命令 #更加详细清楚 9.生效完环境变量文件后，要习惯做一件事，是什么呢？which一下where一下 10.which的执行结果输出，是来自哪个系统环境变量呢？以下文件(/home/dwz/app/python3/bin:/usr/java/jdk1.8.0_181/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin) 11.vi的三种模式a.命令行模式 b.尾行模式 c.编辑模式 12.简书vi编辑文件正常流程a.vi进入文件b.i键进入编辑模式编辑文本c.ESC键退出编辑模式，进入命令行模式d.Shift + ：进入尾行模式 wq保存退出 13.简述 vi的如何清空文件内容 ，和 粘贴复制内容dd光标到第一个字母，dG删除光标之后所有内容粘贴一定要进入编辑模式，否则会缺失内容 14. rwxr-x-w- 数字多少752 15.window Linux 互相传输文件，需要安装哪个rpm？命令会吗-复习安装工具包 yum install -y lrzszsz xxx是下载 Linux–》windowrz 是上传 window–》Linux 16.查看磁盘命令df -h 17.查看内存命令free -m 18.查看系统负载命令（同时可以看哪些命令消耗的内存和cpu的占的高）top看数据文件data，还有500G以上的要监控load average: 0.01, 0.03, 0.05 1min 5min 15min 生产不用超过10 ，否则认为服务器就是卡 19.tar命令的压缩 、解压的命令参数 ？1234tar -xzvf xxx.tar.gz # 解压tar -czvf xxx.tar.gz xxx/* # 压缩zip -r xxx.zip xxx/* # 压缩unzip xxx.zip # 解压 20.下载某个安装包的命令wget 下载链接curl 下载链接 -O 文件名 #-O是输出的意思 21.说说你认为哪些命令，在生产上操作提前自己要注意的？ 高危的a.rm -rfb.&gt; 创建或覆盖c.kill -9 杀进程","categories":[{"name":"ruozedata","slug":"ruozedata","permalink":"https://github.com/wangqi1994/wangqi1994.github.io/categories/ruozedata/"}],"tags":[{"name":"ruozedata","slug":"ruozedata","permalink":"https://github.com/wangqi1994/wangqi1994.github.io/tags/ruozedata/"}]},{"title":"数仓培训第六天","slug":"若泽大数据-剑指数仓培训笔记6","date":"2020-04-27T04:00:00.000Z","updated":"2020-04-27T04:00:00.000Z","comments":true,"path":"2020/04/27/若泽大数据-剑指数仓培训笔记6/","link":"","permalink":"https://github.com/wangqi1994/wangqi1994.github.io/2020/04/27/%E8%8B%A5%E6%B3%BD%E5%A4%A7%E6%95%B0%E6%8D%AE-%E5%89%91%E6%8C%87%E6%95%B0%E4%BB%93%E5%9F%B9%E8%AE%AD%E7%AC%94%E8%AE%B06/","excerpt":"","text":"1.sql类型ddl 数据定义语言 create dropdml 数据操作语言 select insert update delete 增删改查dcl 数据控制语言 grant 2.建表规范1234567891011121314151617181920212223create table ruoze(id int(11) not null auto_increment, # 第一列必须是id自增长 加了唯一可以去掉not nullname varchar(255),age int (3),create_user varchar(255), # 建议增加以下字段，以后有用，举例：用于大数据的实时数仓的数据结构，需要加入创建时间和修改时间create_time timestamp not null default current_timestamp, #固定update_user varchar(255),update_time timestamp not null default current_timestamp on update current_timestamp, # 可变primary key(id) # 主键 = 唯一约束+非空约束)default charset=utf8; #支持中文编码insert into mysql.ruoze(name,age) values('jj',18),('rz',18),('qq',26); # 批量插入数据insert into mysql.ruoze(name,age) values('rz',18); # 海狸单个insert语句插入数据执行ctrl+enterinsert into mysql.ruoze(name,age) values('qq',26); # 海狸多个insert语句插入数据执行alt+xupdate mysql.ruoze set age=22 where name ='jj'; delete from mysql.ruoze where id =3;select * from mysql.ruoze; 注意点：1.表名称 字段名称 不要写中文 不要汉语拼音2.统一风格:已经存在表结构设计，风格比如是create_user，那么新建的表也遵循。或者不遵循设计，建表语句需要让leader check。假如不存在，那么你应该建议设计规则反例：创建时间： ctime cretime createtime cre_time create_time 订单号: order orderno orderid 3.第一个字段必须是自增长字段 主键 无业务意义 架构设计的遵循4.一张表只有一个主键 primary key(id) 业务数据 唯一约束ALTER TABLE mysql.ruoze ADD CONSTRAINTruoze_un UNIQUE KEY (name); Duplicate entry ‘jj’ for key ‘ruoze_un’ # 存在重复的唯一标识 5.后面四个字段 务必要加 6.业务字段 务必注释加上comment ‘xxxx’ # 在创建时最好加上 3.增删改查12345678910111213141516171819202122232425262728# 增加insert into mysql.ruoze(name,age) values('jj',18),('rz',18),('qq',26); # 批量插入数据insert into mysql.ruoze(name,age) values('rz',18); # 海狸单个insert语句插入数据执行ctrl+enterinsert into mysql.ruoze(name,age) values('qq',26); # 海狸多个insert语句插入数据执行alt+xinsert into mysql.ruozevalues(3,'jj',23,'j1','2020-12-12 00:00:00','j1','2020-12-12 00:00:00');Column count doesn't match value count at row 1 # 以上语法可能有内容匹配不到，不建议这种插入方式#修改update mysql.ruoze set age=33 where name='jj'; #修改单个参数update mysql.ruoze set age=33,name='小丽' where id=1; #修改多个参数#删除delete from mysql.ruoze; #全部删除，慎重!!!!delete from mysql.ruoze where id =3; #删除id=3的数据#查看select * from mysql.ruoze; #选择全部##update delete select语法慎重执行，仔细思考是否要加where过滤筛选Incorrect string value: '\\xE5\\xB0\\x8F\\xE4\\xB8\\xBD' for column 'name' at row 1 #数据编码不支持中文 default charset=utf8;select * from db.t;select name,age from db.t; * 代表所有字段 4.其他操作符123456789101112131415161718192021222324252627282930313233343536373839# where语法 判断select * from mysql.ruoze where age &lt;=18; # 支持比较运算符select * from mysql.ruoze where name ='jj';select * from mysql.ruoze where age &gt;=18 and name='jj'; #支持逻辑运算符select * from mysql.ruoze where age &gt;=18 or name='jj';select * from mysql.ruoze where name in ('jj','qq'); # 字符串判断select * from mysql.ruoze where name not in ('jj','qq');# 排序语法select * from mysql.ruoze order by age; # 默认是递增 ascselect * from mysql.ruoze order by age asc;select * from mysql.ruoze order by age desc; # 递减like语法select * from mysql.ruoze where name like 'j%'; # 字母开头为j的数据行select * from mysql.ruoze where name like '%q'; # 字母结尾为u的数据行select * from mysql.ruoze where name like '%q%'; # 含有h的数据行 不关心位置select * from mysql.ruoze where name like '_q%'; # 查第2个字母是h的数据_ 占位符 # 合并表create table a(i int,name varchar(255)); create table b(i int,name varchar(255));insert into a values(1,'rz');insert into b values(1,'rz');insert into b values(2,'jj');select * from a union all select * from b # 全部数据合并，不管重复select * from a union select * from b # 合并重复数据之后合并null语法select * from mysql.ruoze where age is null; # 查询age为null的数据select * from mysql.ruoze where age is not null; 5.分组语法12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849# 分组/聚合函数: sum # 求和avg # 平均值max # 最大值min # 最小值count # 计数select sum(age) as age_sum, # 可以进行字段命名avg(age),max(age),min(age),count(1) #计数，第一列from mysql.ruoze ;select name,ifnull(sum(age),0) as age_sum # 如果是null，当成0处理，进行求和操作from mysql.ruoze #数据来源group by name # 以name进行分组having ifnull(sum(age),0) &gt;20; # 子查询只显示求和超过20的数据##子查询select *from ( select name, ifnull(sum(age),0) as age_sum from mysql.ruoze group by name ) t where age_sum&gt;20;select name,xxx,ifnull(sum(age),0) as age_sumfrom mysql.ruoze group by name ,xxx # 以两个参数进行分组统计having ifnull(sum(age),0) &gt;20;##分组字段必须select出现和group 出现是一致的","categories":[{"name":"ruozedata","slug":"ruozedata","permalink":"https://github.com/wangqi1994/wangqi1994.github.io/categories/ruozedata/"},{"name":"MySQL","slug":"MySQL","permalink":"https://github.com/wangqi1994/wangqi1994.github.io/categories/MySQL/"}],"tags":[{"name":"ruozedata","slug":"ruozedata","permalink":"https://github.com/wangqi1994/wangqi1994.github.io/tags/ruozedata/"},{"name":"MySQL","slug":"MySQL","permalink":"https://github.com/wangqi1994/wangqi1994.github.io/tags/MySQL/"}]},{"title":"JDK部署","slug":"JDK部署","date":"2020-04-26T04:00:00.000Z","updated":"2020-04-26T04:00:00.000Z","comments":true,"path":"2020/04/26/JDK部署/","link":"","permalink":"https://github.com/wangqi1994/wangqi1994.github.io/2020/04/26/JDK%E9%83%A8%E7%BD%B2/","excerpt":"","text":"环境：OS：CentOS7.2 （虚拟机）JDK版本：jdk-8u45-linux-x64.gz （百度下载) 1.安装准备windows下载安装包，通过rz上传到Linux系统中 2.解压JDK程序包jdk文件建议放在/usr/java,没有则创建 12345678910111213[root@ruozedata001 ~]# mkdir /usr/java[root@ruozedata001 ~]# tar -xzvf jdk-8u45-linux-x64.gz -C /usr/java/ # -C 解压到那个文件夹 /usr/java # tar.gz解压储来之后建议习惯性查看一下所属用户和用户组有没有变化 # 可能存在权限问题：那是解压一瞬间的用户和用户组，导致用户错误，可能会报错莫名其妙[root@hadoop001 java]# lltotal 4drwxr-xr-x. 8 10 143 4096 Apr 11 2015 jdk1.8.0_45[root@hadoop001 java]# chown -R root:root jdk1.8.0_45[root@hadoop001 java]# lltotal 4drwxr-xr-x. 8 root root 4096 Apr 11 2015 jdk1.8.0_45 #修改用户权限 3.配置环境变量1234[root@ruozedata001 java]# vi /etc/profile#ruozedata envexport JAVA_HOME=/usr/java/jdk1.8.0_45export PATH=$JAVA_HOME/bin:$PATH 4.source生效环境变量123[root@ruozedata001 ~]# source /etc/profile[root@ruozedata001 ~]# which java/usr/java/jdk1.8.0_45/bin/java export 生效，路径必须是/usr/java保存，生效 5.测试123456[root@hadoop001 ~]# which java/usr/java/jdk1.8.0_45/bin/java[root@hadoop001 ~]# java -versionjava version \"1.8.0_45\"Java(TM) SE Runtime Environment (build 1.8.0_45-b14)Java HotSpot(TM) 64-Bit Server VM (build 25.45-b02, mixed mode) 完成JDK部署","categories":[{"name":"ruozedata","slug":"ruozedata","permalink":"https://github.com/wangqi1994/wangqi1994.github.io/categories/ruozedata/"},{"name":"Linux","slug":"Linux","permalink":"https://github.com/wangqi1994/wangqi1994.github.io/categories/Linux/"},{"name":"JAVA","slug":"JAVA","permalink":"https://github.com/wangqi1994/wangqi1994.github.io/categories/JAVA/"}],"tags":[{"name":"ruozedata","slug":"ruozedata","permalink":"https://github.com/wangqi1994/wangqi1994.github.io/tags/ruozedata/"},{"name":"Linux","slug":"Linux","permalink":"https://github.com/wangqi1994/wangqi1994.github.io/tags/Linux/"},{"name":"JAVA","slug":"JAVA","permalink":"https://github.com/wangqi1994/wangqi1994.github.io/tags/JAVA/"}]},{"title":"MySQL部署","slug":"MySQL部署","date":"2020-04-26T04:00:00.000Z","updated":"2020-04-26T04:00:00.000Z","comments":true,"path":"2020/04/26/MySQL部署/","link":"","permalink":"https://github.com/wangqi1994/wangqi1994.github.io/2020/04/26/MySQL%E9%83%A8%E7%BD%B2/","excerpt":"","text":"环境：OS：CentOS7.2 （虚拟机）MySQL安装包版本mysql-5.7.11-linux-glibc2.5-x86_64.tar.gz 1.安装准备windows下载安装包，通过rz上传到Linux系统中下载mysql安装包地址 2.解压及创建目录1234[root@hadoop001 ~]# mv mysql-5.7.11-linux-glibc2.5-x86_64.tar.gz /usr/local #移动[root@hadoop001 local]# tar -xzvf mysql-5.7.11-linux-glibc2.5-x86_64.tar.gz#解压[root@hadoop001 local]# mv mysql-5.7.11-linux-glibc2.5-x86_64 mysql #改名字[root@hadoop001 local]# mkdir mysql/arch mysql/data mysql/tmp #创建目录 3.创建my.cnf文件123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127[root@hadoop001 local]# vi /etc/my.cnf[client]port = 3306socket = /usr/local/mysql/data/mysql.sockdefault-character-set=utf8mb4[mysqld]port = 3306socket = /usr/local/mysql/data/mysql.sockskip-slave-startskip-external-lockingkey_buffer_size = 256Msort_buffer_size = 2Mread_buffer_size = 2Mread_rnd_buffer_size = 4Mquery_cache_size= 32Mmax_allowed_packet = 16Mmyisam_sort_buffer_size=128Mtmp_table_size=32Mtable_open_cache = 512thread_cache_size = 8wait_timeout = 86400interactive_timeout = 86400max_connections = 600# Try number of CPU's*2 for thread_concurrency# thread_concurrency = 32 # isolation level and default engine default-storage-engine = INNODBtransaction-isolation = READ-COMMITTEDserver-id = 1739basedir = /usr/local/mysqldatadir = /usr/local/mysql/datapid-file = /usr/local/mysql/data/hostname.pid#open performance schemalog-warningssysdate-is-nowbinlog_format = ROWlog_bin_trust_function_creators=1log-error = /usr/local/mysql/data/hostname.errlog-bin = /usr/local/mysql/arch/mysql-binexpire_logs_days = 7innodb_write_io_threads=16relay-log = /usr/local/mysql/relay_log/relay-logrelay-log-index = /usr/local/mysql/relay_log/relay-log.indexrelay_log_info_file= /usr/local/mysql/relay_log/relay-log.infolog_slave_updates=1gtid_mode=OFFenforce_gtid_consistency=OFF# slaveslave-parallel-type=LOGICAL_CLOCKslave-parallel-workers=4master_info_repository=TABLErelay_log_info_repository=TABLErelay_log_recovery=ON#other logs#general_log =1#general_log_file = /usr/local/mysql/data/general_log.err#slow_query_log=1#slow_query_log_file=/usr/local/mysql/data/slow_log.err#for replication slavesync_binlog = 500#for innodb options innodb_data_home_dir = /usr/local/mysql/data/innodb_data_file_path = ibdata1:1G;ibdata2:1G:autoextendinnodb_log_group_home_dir = /usr/local/mysql/archinnodb_log_files_in_group = 4innodb_log_file_size = 1Ginnodb_log_buffer_size = 200M#根据生产需要，调整pool size innodb_buffer_pool_size = 2G#innodb_additional_mem_pool_size = 50M #deprecated in 5.6tmpdir = /usr/local/mysql/tmpinnodb_lock_wait_timeout = 1000#innodb_thread_concurrency = 0innodb_flush_log_at_trx_commit = 2innodb_locks_unsafe_for_binlog=1#innodb io features: add for mysql5.5.8performance_schemainnodb_read_io_threads=4innodb-write-io-threads=4innodb-io-capacity=200#purge threads change default(0) to 1 for purgeinnodb_purge_threads=1innodb_use_native_aio=on#case-sensitive file names and separate tablespaceinnodb_file_per_table = 1lower_case_table_names=1[mysqldump]quickmax_allowed_packet = 128M[mysql]no-auto-rehashdefault-character-set=utf8mb4[mysqlhotcopy]interactive-timeout[myisamchk]key_buffer_size = 256Msort_buffer_size = 256Mread_buffer = 2Mwrite_buffer = 2M 根据生产需要，调整pool size生产一般8G 结合实际情况设置 4.创建用户组及用户123456789101112131415[root@hadoop001 local]# groupadd -g 101 dba[root@hadoop001 local]# useradd -u 515 -g dba -G root -d /usr/local/mysql mysqladmin#-u uid -g 主组 -G 次组 -d 家目录设置 [mysqladmin@hadoop001 ~]$ iduid=515(mysqladmin) gid=101(dba) groups=101(dba),0(root) context=unconfined_u:unconfined_r:unconfined_t:s0-s0:c0.c1023## 一般不需要设置mysqladmin的密码，直接从root或者LDAP用户sudo切换#[root@hadoop001 local]# passwd mysqladminChanging password for user mysqladmin.New UNIX password: BAD PASSWORD: it is too simplistic/systematicRetype new UNIX password: passwd: all authentication tokens updated successfully.## if user mysqladmin is existing,please execute the following command of usermod.#[root@hadoop001 local]# usermod -u 514 -g dba -G root -d /usr/local/mysql mysqladmin 5.copy 环境变量配置文件至mysqladmin用户的home目录中,为了以下步骤配置个人环境变量1[root@hadoop001 local]# cp /etc/skel/.* /usr/local/mysql ###important 6.配置环境变量123456789101112131415161718192021[root@hadoop001 local]# vi mysql&#x2F;.bash_profile# .bash_profile# Get the aliases and functionsif [ -f ~&#x2F;.bashrc ]; then . ~&#x2F;.bashrcfi# User specific environment and startup programsexport MYSQL_BASE&#x3D;&#x2F;usr&#x2F;local&#x2F;mysqlexport PATH&#x3D;$&#123;MYSQL_BASE&#125;&#x2F;bin:$PATHunset USERNAME#stty erase ^Hset umask to 022umask 022PS1&#x3D;&#96;uname -n&#96;&quot;:&quot;&#39;$USER&#39;&quot;:&quot;&#39;$PWD&#39;&quot;:&gt;&quot;; export PS1## end 建议修改.bashrc文件,如上内容不一致。 PS1后边是设置中括号内包含路径，可以省略pwd操作 7.赋权限和用户组，切换用户mysqladmin，安装123456[root@hadoop001 local]# chown mysqladmin:dba /etc/my.cnf [root@hadoop001 local]# chmod 640 /etc/my.cnf [root@hadoop001 local]# chown -R mysqladmin:dba /usr/local/mysql[root@hadoop001 local]# chmod -R 755 /usr/local/mysql 8.配置服务及开机自启动1234567891011121314151617181920212223242526[root@hadoop001 local]# cd /usr/local/mysql#将服务文件拷贝到init.d下，并重命名为mysql[root@hadoop001 mysql]# cp support-files/mysql.server /etc/rc.d/init.d/mysql #赋予可执行权限[root@hadoop001 mysql]# chmod +x /etc/rc.d/init.d/mysql#删除服务[root@hadoop001 mysql]# chkconfig --del mysql#添加服务[root@hadoop001 mysql]# chkconfig --add mysql[root@hadoop001 mysql]# chkconfig --level 345 mysql on[root@hadoop001 mysql]# vi /etc/rc.local#!/bin/bash# THIS FILE IS ADDED FOR COMPATIBILITY PURPOSES## It is highly advisable to create own systemd services or udev rules# to run scripts during boot instead of using this file.## In contrast to previous versions due to parallel execution during boot# this script will NOT be run after all other services.## Please note that you must run 'chmod +x /etc/rc.d/rc.local' to ensure# that this script will be executed during boot.touch /var/lock/subsys/localsu - mysqladmin -c \"/etc/init.d/mysql start --federated\" 9.安装libaio及安装mysql的初始db123456789101112131415161718192021[root@hadoop001 mysql]# yum -y install libaioLoaded plugins: fastestmirror, langpacksbase | 3.6 kB 00:00:00 extras | 2.9 kB 00:00:00 updates | 2.9 kB 00:00:00 Loading mirror speeds from cached hostfile * base: mirrors.cn99.com * extras: mirrors.163.com * updates: mirrors.cn99.comPackage libaio-0.3.109-13.el7.x86_64 already installed and latest version[root@hadoop001 mysql]# sudo su - mysqladminhadoop001:mysqladmin:/usr/local/mysql:&gt;bin/mysqld \\--defaults-file=/etc/my.cnf \\--user=mysqladmin \\--basedir=/usr/local/mysql/ \\--datadir=/usr/local/mysql/data/ \\--initialize#在初始化时如果加上 –initial-insecure，则会创建空密码的 root@localhost 账号，否则会创建带密码的 root@localhost 账号，密码直接写在 log-error 日志文件中#（在5.6版本中是放在 ~/.mysql_secret 文件里，更加隐蔽，不熟悉的话可能会无所适从） 10.查看临时密码12hadoop001:mysqladmin:/usr/local/mysql/data:&gt;cat hostname.err |grep password2020-04-27T05:06:23.348090Z 1 [Note] A temporary password is generated for root@localhost: VqS1#h8HgWxl 11.启动1/usr/local/mysql/bin/mysqld_safe --defaults-file=/etc/my.cnf &amp; 12.登录及修改用户密码1234567891011121314151617181920212223242526hadoop001:mysqladmin:/usr/local/mysql/data:&gt;mysql -uroot -p # 尽量不要将密码写在命令行中Enter password: Welcome to the MySQL monitor. Commands end with ; or \\g.Your MySQL connection id is 2Server version: 5.7.11-logCopyright (c) 2000, 2016, Oracle and/or its affiliates. All rights reserved.Oracle is a registered trademark of Oracle Corporation and/or itsaffiliates. Other names may be trademarks of their respectiveowners.Type 'help;' or '\\h' for help. Type '\\c' to clear the current input statement.mysql&gt; alter user root@localhost identified by 'hadoop001' # 记住以分号;结束命令，修改密码 -&gt; ;Query OK, 0 rows affected (0.00 sec)mysql&gt; GRANT ALL PRIVILEGES ON *.* TO 'root'@'%' IDENTIFIED BY 'hadoop001' ;# 一般是公司DBA进行操作Query OK, 0 rows affected, 1 warning (0.00 sec)mysql&gt; flush privileges; # 刷新权限Query OK, 0 rows affected (0.00 sec)mysql&gt; exitBye 13.重启12345678hadoop001:mysqladmin:/usr/local/mysql:&gt;service mysql restartShutting down MySQL..2020-04-27T05:16:16.947024Z mysqld_safe mysqld from pid file /usr/local/mysql/data/hostname.pid ended SUCCESS! Starting MySQL.. SUCCESS! [1]+ Done /usr/local/mysql/bin/mysqld_safe --defaults-file=/etc/my.cnf (wd: ~/bin)(wd now: ~)hadoop001:mysqladmin:/usr/local/mysql:&gt;mysql -uroot -pEnter password: 标准登录写法mysql -u用户 -p密码 -h 机器 -P端口号 指定db（默认不加）","categories":[{"name":"ruozedata","slug":"ruozedata","permalink":"https://github.com/wangqi1994/wangqi1994.github.io/categories/ruozedata/"},{"name":"Linux","slug":"Linux","permalink":"https://github.com/wangqi1994/wangqi1994.github.io/categories/Linux/"},{"name":"MySQL","slug":"MySQL","permalink":"https://github.com/wangqi1994/wangqi1994.github.io/categories/MySQL/"}],"tags":[{"name":"ruozedata","slug":"ruozedata","permalink":"https://github.com/wangqi1994/wangqi1994.github.io/tags/ruozedata/"},{"name":"Linux","slug":"Linux","permalink":"https://github.com/wangqi1994/wangqi1994.github.io/tags/Linux/"},{"name":"MySQL","slug":"MySQL","permalink":"https://github.com/wangqi1994/wangqi1994.github.io/tags/MySQL/"}]},{"title":"数仓培训第五天","slug":"若泽大数据-剑指数仓培训笔记5","date":"2020-04-26T04:00:00.000Z","updated":"2020-04-26T04:00:00.000Z","comments":true,"path":"2020/04/26/若泽大数据-剑指数仓培训笔记5/","link":"","permalink":"https://github.com/wangqi1994/wangqi1994.github.io/2020/04/26/%E8%8B%A5%E6%B3%BD%E5%A4%A7%E6%95%B0%E6%8D%AE-%E5%89%91%E6%8C%87%E6%95%B0%E4%BB%93%E5%9F%B9%E8%AE%AD%E7%AC%94%E8%AE%B05/","excerpt":"","text":"MySQL1.MySQL安装包准备windows下载安装包，通过rz上传到Linux系统中 123[root@ruozedata001 ~]# ll -h-rw-r--r-- 1 root root 166M Jul 24 2019 jdk-8u45-linux-x64.gz-rw-r--r-- 1 root root 523M Jul 24 2019 mysql-5.7.11-linux-glibc2.5-x86_64.tar.gz mysql（小写） MySQL（大写） 2.JDK部署windows下载安装包，通过rz上传到Linux系统中 12[root@ruozedata001 ~]# ll -h-rw-r--r-- 1 root root 166M Jul 24 2019 jdk-8u45-linux-x64.gz 具体部署流程参考https://wangqi1994.github.io/2020/04/26/JDK部署 3.MySQL部署 5.7具体部署流程参考https://wangqi1994.github.io/2020/04/26/MySQL部署 创建用户组及用户mysql mysql用户来管理oracle oracle用户hadoop hive bigdata用户来管理 sudo su - 用户 #切换用户建议命令格式，业务场景经常连着使用 4.重新部署怎么办？删除binlog文件夹和数据文件夹 123456789rm -rf mysql/arch/* binlog文件夹rm -rf mysql/data/* 数据文件bin/mysqld \\--defaults-file=/etc/my.cnf \\--user=mysqladmin \\--basedir=/usr/local/mysql/ \\--datadir=/usr/local/mysql/data/ \\--initialize 5.dbeaver 海狸5.1 window / mac 安装好jdk1.8 64位安装参考：https://jingyan.baidu.com/article/b907e62789c79346e7891ced.html 5.2 下载 绿色版本https://dbeaver.io/files/dbeaver-ce-latest-win32.win32.x86_64.zip 海狸dbeaver 必须要安装jdk1.8 64位的 当建立MySQL连接时 使用云主机 ，3306 假如没有放开，我们就使用安全组，设置该端口通行 放开 6.常用命令123create database ruozedata; # 创建ruozedata数据库grant all privileges on ruozedata.* to ruoze@'%' identified by 'ruozedata';flush privileges; # 养成习惯！！！ % 代表任意客户端机器去访问mysql服务器 192.168.1.1 这台机器有权限去访问 192.168.1.% 这个网段的所有ip机器有权限去访问 检验:select user,authentication_string,host from mysql.user; 7.登录标准登录写法mysql -u用户 -p密码 -h 机器 -P端口号 指定db（默认不加） 1mysql -uroot -phadoop001 -hhadoop001 -P3306 mysql Usage: mysql [OPTIONS] [database] database schema namespace 是一个意思 就可以认为是一个文件夹table 就可以认为是一个Excel表格 切换： 123456789101112mysql&gt; use hadoop001;Database changedmysql&gt; mysql&gt; show tables;# 看表格Empty set (0.00 sec)#提醒一点: 密码不要写在命令行 不然 history命令可以发现mysql -uroot -p -hhadoop001 -P3306 直接回车注意一点:mysql -u root -phadoop001 -h hadoop001 -P 3306 mysql-p后面如果非要写密码 不能有空格，其他参数无所谓！ 8.进程12show processlist; # 看进程kill Id #杀进程 如果卡住了，time一直在变大，企业中这时候要找公司dba做 9.字段类型汉字等于两个字节英文字母一个字节 数值类型 int 整型 long 长整型 float 单精度 double 双精度 decimal 小数值 钱有关的 *****字符串 char 字节 定长0-255 长度 ruozexxxxxxx 自动补齐 varchar 字符串 变长0-65535字节？ ruoze 日期 date 日期 YYYY-MM-DD time 时间 HH:MM:SS datetime 年月日时分秒 YYYY-MM-DD HH:MM:SS timestamp 年月日时分秒 YYYY-MM-DD HH:MM:SS 面试题datetime timestamp差别 1.datatime字段默认为NULL， timestamp为NOT NULL默认值为当前时间2.DATATIME使用八字节的存储空间，TIMESTAMP的存储空间为4字节。TIMESTAMP空间利用率更高3.timestamp存储和时区相关，即会根据时区做转换。datatime存进去是什么就是什么不会变动 生产上一般不会用yum源安装sql","categories":[{"name":"ruozedata","slug":"ruozedata","permalink":"https://github.com/wangqi1994/wangqi1994.github.io/categories/ruozedata/"},{"name":"MySQL","slug":"MySQL","permalink":"https://github.com/wangqi1994/wangqi1994.github.io/categories/MySQL/"}],"tags":[{"name":"ruozedata","slug":"ruozedata","permalink":"https://github.com/wangqi1994/wangqi1994.github.io/tags/ruozedata/"},{"name":"MySQL","slug":"MySQL","permalink":"https://github.com/wangqi1994/wangqi1994.github.io/tags/MySQL/"}]},{"title":"早课3","slug":"20200424","date":"2020-04-24T04:00:00.000Z","updated":"2020-04-24T04:00:00.000Z","comments":true,"path":"2020/04/24/20200424/","link":"","permalink":"https://github.com/wangqi1994/wangqi1994.github.io/2020/04/24/20200424/","excerpt":"","text":"1.强制删除文件夹1rm -rf 文件夹 2.个人环境变量文件，默认在哪里？推荐使用哪个呢？怎样生效？生效完成后，习惯做一件事是执行什么命令？个人: 默认用户家目录下隐藏文件&emsp;&emsp;&emsp; ~/.bash_profile 只能是设置命令的当前用户使用 其他不能使用&emsp;&emsp;&emsp; ~/.bashrc [设置个人环境变量主要修改这个文件]推荐&emsp;&emsp;&emsp; 场景: 使用ssh 远程执行B机器 +命令&emsp;&emsp;&emsp; 提示找不到命令 java command not found&emsp;&emsp;&emsp; 但是直接登录B机器 命令是找到的 which java有的 生效文件:修改后需要操作之后才会生效 12345source /etc/profilesource ~/.bash_profilesource ~/.bashrccd 进家目录.空格.bashrc 想在配置后，全局生效，需要新开窗口，老窗口可看作静态窗口生效完成后习惯上的which一下，看看是否成功 3.历史命令，执行第55行；清空历史命令输入history，弹出历史命令!55 执行第55行命令 history -c 清空历史 ，不想让人知道自己的操作，把尾巴擦干净 4.用户的文件是哪个？123456[root@hadoop001 ~]# ll /usr/sbin/user* #用户命令-rwxr-x---. 1 root root 114056 Mar 6 2015 /usr/sbin/useradd-rwxr-x---. 1 root root 80352 Mar 6 2015 /usr/sbin/userdel-rws--x--x. 1 root root 40312 Jun 10 2014 /usr/sbin/userhelper-rwxr-x---. 1 root root 113808 Mar 6 2015 /usr/sbin/usermod-rwsr-xr-x. 1 root root 11272 Nov 20 2015 /usr/sbin/usernetctl 用户存储信息 /etc/passwd 5.用户组的文件是哪个？12345[root@hadoop001 ~]# ll /usr/sbin/group* #用户组命令-rwxr-x---. 1 root root 61336 Mar 6 2015 /usr/sbin/groupadd-rwxr-x---. 1 root root 56992 Mar 6 2015 /usr/sbin/groupdel-rwxr-x---. 1 root root 57024 Mar 6 2015 /usr/sbin/groupmems-rwxr-x---. 1 root root 76400 Mar 6 2015 /usr/sbin/groupmod 用户组存储信息 /etc/group 6.假如su/ssh 无法登录机器，这个用户是不是有可能在/etc/passwd文件里，做了禁止？/etc/passwd文件中权限sbin/nologin会出现无法切换用户的现象，报错无法登录权限设为/usr/bin/false，无法登录，但是无报错需要修改为/bin/bash 7.修改一个用户 usermod命令，指定主组 和 附加组，会吗？1234567891011[root@hadoop001 ~]# groupadd bigdata[root@hadoop001 ~]# usermod -a -G bigdata ruoze #将bigdata附加到ruoze的groups中[root@hadoop001 ~]# id ruozeuid=1002(ruoze) gid=1002(ruoze) groups=1002(ruoze),1003(bigdata)[root@hadoop001 ~]# usermod -g bigdata ruoze #强制将ruoze主组改为bigdata[root@hadoop001 ~]# id ruoze uid=1002(ruoze) gid=1003(bigdata) groups=1003(bigdata) #gid编程bigdata用户组[root@hadoop001 ~]# usermod -a -G ruoze ruoze #将ruoze附加到ruoze的groups中[root@hadoop001 ~]# id ruozeuid=1002(ruoze) gid=1003(bigdata) groups=1003(bigdata),1002(ruoze)[root@hadoop001 ~]# 8.设置密码在root用户下，可输入passwd +用户名， 修改对应用户的密码在对应用户下，可输入passwd修改该用户的密码 123456[root@hadoop001 ~]# passwdChanging password for user root.New password: BAD PASSWORD: The password is shorter than 8 charactersRetype new password: passwd: all authentication tokens updated successfully. 9.su - ruoze,这个命令执行完成后，做哪些事？切换到ruoze用户根目录，并执行环境变量 10.一个普通用户，想要瞬间临时获取root的最大权限，请问在哪个配置文件修改什么内容？博客写了吗？ 在执行命令时，sudo命令加在前面？1234567vi /etc/sudoers #找到allow设置root权限ruoze ALL=(root) NOPASSWD:ALL[ruoze@hadoop001 ~]$ cat /root/rz.logcat: /root/rz.log: Permission denied[ruoze@hadoop001 ~]$ sudo cat /root/rz.logwww.ruozedata.com[ruoze@hadoop001 ~]$ 11. &gt; &gt;&gt;区别是什么“&gt;” 创建或覆盖 【高危命令1】‘&gt;&gt;’ 追加 12.rwx分别代表数字多少？ rwx- - x - w - ,请问权限数字多少？r: read 读权限 4w: write 写权限 2x: 执行 1-: 没权限 0 占位rwx- - x - w - = 712 13.上题中，三组分别代表哪个方面的权限呢？r: read 读权限 4w: write 写权限 2x: 执行 1-: 没权限 0 占位 14.修改权限 和 所属用户用户组的命令，分别是什么？ 假如修改文件夹，加什么参数修改权限chmod修改用户用户组的chown修改文件夹参数 -R 15.简述vi编辑文件的流程vi命令进入命令行模式，i键进入插入模式，编辑内容，ESC键退出插入模式，shift+：进入尾行模式，wq回车-保存退出 16.简述vi清空文件的命令a.vi命令行模式：dd光标到第一行第一个字母，dG删除当前光标以下所有内容b.文件操作 1234567cat /dev/null &gt; 1.logecho \"\" &gt; 2.logtrue &gt; 1.log #也是清空文件内容 0字节[root@hadoop001 ~]# lltotal 16-rw-r--r-- 1 root root 0 Apr 19 21:58 1.log-rw-r--r-- 1 root root 1 Apr 19 21:58 2.log 17.vi编辑文件，想要从外部文件内容粘贴复制到这个文件，必须提前做一件什么事？否则数据丢失i键进入插入模式 18.查看进程、端口号命令？ps -ef打印所有进程&emsp;&emsp;PID是计算分配ID,PPID是上级ID，即由PID调用PPID&emsp;&emsp;PID 1是系统ID，从根目录开始的ps -ef | grep http 123456[root@hadoop001 ~]# yum install -y net-tools.x86_64[root@hadoop001 ~]# netstat -nlp| grep 18670 tcp6 0 0 :::80 :::* LISTEN 18670/httpd [root@hadoop001 ~]# netstat -nlp| grep 18671 #子进程可能没有端口号[root@hadoop001 ~]# netstat -nlp| grep 18672[root@hadoop001 ~]# netstat -nlp| grep 18673 19.window 和 Linux 去测试端口号的命令，会先部署吗？会使用吗？windows：控制面板-卸载程序-启用或关闭windows功能使用：talnet ip portlinux：下载安装 yum install -y talnet使用：talnet ip port 或者 talnet 主机名 port 20.netstat 一个服务时，显示 127.0.0.1:8899 ，外部window 或者其他服务器进行 访问，能通吗？不能 21.netstat 一个服务时，显示 hostname:8899 ，外部window 或者其他服务器进行 访问，假如不通，我们应该要调整什么？ping iptelnet ip portip不通不代表端口不通假如不通，本地机器看本身防火墙配置，云主机看web界面的安全组配置，配置成放这个端口号通信如果都不通，咋找运维看硬件防火墙是否有问题将hostname设置为以下三种格式 :::port0 0.0.0.0:portip:port","categories":[{"name":"ruozedata","slug":"ruozedata","permalink":"https://github.com/wangqi1994/wangqi1994.github.io/categories/ruozedata/"}],"tags":[{"name":"ruozedata","slug":"ruozedata","permalink":"https://github.com/wangqi1994/wangqi1994.github.io/tags/ruozedata/"}]},{"title":"数仓培训第四天","slug":"若泽大数据-剑指数仓培训笔记4","date":"2020-04-24T04:00:00.000Z","updated":"2020-04-24T04:00:00.000Z","comments":true,"path":"2020/04/24/若泽大数据-剑指数仓培训笔记4/","link":"","permalink":"https://github.com/wangqi1994/wangqi1994.github.io/2020/04/24/%E8%8B%A5%E6%B3%BD%E5%A4%A7%E6%95%B0%E6%8D%AE-%E5%89%91%E6%8C%87%E6%95%B0%E4%BB%93%E5%9F%B9%E8%AE%AD%E7%AC%94%E8%AE%B04/","excerpt":"","text":"大数据之Linux生产常用命令四1.系统常用检查命令磁盘 df -h内存 free -m负载 top内存 free -m 1234[root@hadoop001 ~]# free -m # -g是以GB为单位，不建议，会丢数据 total used free shared buff/cache availableMem: 1993 759 203 11 1030 1022Swap: 2047 0 2047 #大数据 生产服务器 swap是设置0 10也可以 10是惰性 磁盘 df -h 123456789101112131415[root@hadoop001 ~]# df -hFilesystem Size Used Avail Use% Mounted on/dev/sda2 57G 5.2G 49G 10% / #主要查看以下数据文件/dev/vdb1 2T 16G 25G 1% /data01/dev/vdb2 2T 16G 25G 1% /data02/dev/vdb3 2T 16G 25G 1% /data03/dev/vdb4 2T 16G 25G 1% /data04 #需要监控500G以上的硬盘ssd #不太需要看devtmpfs 3.9G 0 3.9G 0% /devtmpfs 3.9G 16K 3.9G 1% /dev/shmtmpfs 3.9G 258M 3.6G 7% /runtmpfs 3.9G 0 3.9G 0% /sys/fs/cgrouptmpfs 783M 0 783M 0% /run/user/1004 系统负载 top 12345678910111213top - 21:20:22 up 7 days, 58 min, 1 user, load average: 0.01, 0.03, 0.05Tasks: 89 total, 1 running, 88 sleeping, 0 stopped, 0 zombie%Cpu(s): 0.2 us, 0.5 sy, 0.0 ni, 99.0 id, 0.0 wa, 0.0 hi, 0.0 si, 0.3 stKiB Mem : 8011076 total, 6377388 free, 229060 used, 1404628 buff/cacheKiB Swap: 0 total, 0 free, 0 used. 7265724 avail Mem PID USER PR NI VIRT RES SHR S %CPU %MEM TIME+ COMMAND 2374 root 20 0 394348 31376 8608 S 0.3 0.4 41:44.99 jdog-kunlunmirr 1 root 20 0 125356 3796 2508 S 0.0 0.0 1:22.32 systemd 2 root 20 0 0 0 0 S 0.0 0.0 0:00.00 kthreadd 3 root 20 0 0 0 0 S 0.0 0.0 0:00.08 ksoftirqd/0 5 root 0 -20 0 0 0 S 0.0 0.0 0:00.00 kworker/0:0H 6 root 20 0 0 0 0 S 0.0 0.0 0:02.50 kworker/u4:0 刷新时间up 运行时间，用户数，load average: 0.01, 0.03, 0.05(分别代表 1min 5min 15min) J哥的经验值: 10 生产不用超过这个 ，否则认为服务器就是卡a.是你的程序有问题 在大量跑计算b.是不是被挖矿 yarn redis 最容易被hacker 攻击c.硬件问题 不仅内存条问题，还可能是硬盘 、判断方法：重启服务器系统cpu加起来超过100就要看，还有就是看内存 2.yum安装 123yum search http #会出来很多可选项yum search httpd # 最后的d一般代表进程yum install httpd # -y 对所有的选项选择yes centos6:service httpd status|start|stop 只能操作1个应用httpd启动服务用servicecentos7:service httpd status|start|stop 兼容 能使用systemctl status|start|stop|restart httpd app2 app3 app4 一次性操作多个应用可选择状态，开始或者结束,重启 搜索 卸载: 12345[root@hadoop001 ~]# rpm -qa|grep http #搜索httpd-2.4.6-90.el7.centos.x86_64httpd-tools-2.4.6-90.el7.centos.x86_64[root@hadoop001 ~]# rpm -e 包名称 --nodeps # --nodeps不校验你的依赖，直接卸载[root@hadoop001 ~]# yum remove httpd-2.4.6-90.el7.centos.x86_64 # 也可以卸载 3.进程 端口号ps -ef打印所有进程&emsp;&emsp;PID是计算分配ID,PPID是上级ID，即由PID调用PPID&emsp;&emsp;PID 1是系统ID，从根目录开始的ps -ef | grep http 父ID被干掉，子不一定会被干掉kill -9 16629 #-9级别最高kill -9 16630 16631 16632 16633 16634 多杀进程 查看进程和杀死进程 12345678[root@hadoop001 ~]# ps -ef |grep httpdroot 20092 1 0 14:28 ? 00:00:00 /usr/sbin/httpd -DFOREGROUNDapache 20094 20092 0 14:29 ? 00:00:00 /usr/sbin/httpd -DFOREGROUNDapache 20095 20092 0 14:29 ? 00:00:00 /usr/sbin/httpd -DFOREGROUNDapache 20096 20092 0 14:29 ? 00:00:00 /usr/sbin/httpd -DFOREGROUNDapache 20097 20092 0 14:29 ? 00:00:00 /usr/sbin/httpd -DFOREGROUNDapache 20098 20092 0 14:29 ? 00:00:00 /usr/sbin/httpd -DFOREGROUNDroot 20101 19478 0 14:29 pts/2 00:00:00 grep --color=auto httpd 根据匹配字段 搜索所有符合的进程 全部杀死但是: 生产慎用 除非你先ps查看 这个关键词搜索的进程 是不是都是你想要杀死的进程保不齐有个其他服务的进程 会造成误杀 生产事故！！！ 123[root@hadoop001 ~]# kill -9 $(pgrep -f httpd) #全局杀死进程[root@hadoop001 ~]# ps -ef |grep httpdroot 20131 19478 0 14:31 pts/2 00:00:00 grep --color=auto httpd 重启之后进程号改变 12345678[root@hadoop001 ~]# ps -ef |grep httpdroot 20153 1 0 14:33 ? 00:00:00 /usr/sbin/httpd -DFOREGROUNDapache 20154 20153 0 14:33 ? 00:00:00 /usr/sbin/httpd -DFOREGROUNDapache 20155 20153 0 14:33 ? 00:00:00 /usr/sbin/httpd -DFOREGROUNDapache 20156 20153 0 14:33 ? 00:00:00 /usr/sbin/httpd -DFOREGROUNDapache 20157 20153 0 14:33 ? 00:00:00 /usr/sbin/httpd -DFOREGROUNDapache 20158 20153 0 14:33 ? 00:00:00 /usr/sbin/httpd -DFOREGROUNDroot 20169 19478 0 14:34 pts/2 00:00:00 grep --color=auto httpd 查看端口号 12345[root@hadoop001 ~]# yum install -y net-tools.x86_64[root@hadoop001 ~]# netstat -nlp| grep 20153 #-nlp死记硬背 tcp6 0 0 :::80 :::* LISTEN 20153/httpd [root@hadoop001 ~]# netstat -nlp| grep 20154[root@hadoop001 ~]# netstat -nlp| grep 20155 进程不一定都会起到端口号 #子进程可能没有，与外部无交流但是与其他服务通信 必然需要端口号！！！ 面试题老板: 去打开xxx服务器的应用yyy的网页？你会涉及到哪些Linux命令 #面试题ip #知道IP，之后需要知道yyy的端口号ps -ef|grep yyy –》pid #找到pidnetstat -nlp|grep pid –》port #找到端口号浏览器: http://ip:port要确定ping的通和telnet的通端口号 ip和port设置细节: 123456[root@hadoop001 ~]# netstat -nlp| grep 18670tcp6 0 0 :::80 :::* LISTEN 18670/httpd tcp6 0 0 0.0.0.0:80 :::* LISTEN 18670/httpd tcp6 0 0 192.168.0.3:80 :::* LISTEN 18670/httpd tcp6 0 0 127.0.0.1:80 :::* LISTEN 18670/httpd tcp6 0 0 localhost:80 :::* LISTEN 18670/httpd 前三种一样，前两种等价于本机器的ip # 查看ip命令ifconfig危险: 后两种服务只能自己服务器的里面自己访问自己 生产上，注意ip要查看，如果127开头或者localhost不能连外网 测试网络，连接失败问题ping ip #测试网络通不通telnet ip port #ping端口号 window cmd：ping 192.168.111.131telnet 192.168.111.131 22 弹出新窗口成功，弹提示即不成功Linux： 12345678910yum install -y telnet[root@hadoop001 ~]# telnet hadoop001 80Trying 192.168.0.3...Connected to hadoop001.Escape character is '^]'.#通的^ZConnection closed by foreign host.[root@hadoop001 ~]# telnet hadoop001 809Trying 192.168.0.3...telnet: connect to address 192.168.0.3: Connection refused 如果ip和端口都不通，解决方法：有可能你的服务器的防火墙 开启，云主机 需要开启 安全组策略直接找Linux运维 网络工程师 加防火墙(硬件)策略 总结:Connection refused #无法连接1.ping ip 因为服务器是ping功能禁止，导致ping不通 #防黑客2.telnet ip port ok repo结尾文件yum下载配置文件/etc/yum #yum.repos.d –确认 建议配置企业级别yum源 取代互联网的repo文件的URL，物理隔绝 4.下载wget https://repo1.maven.org/maven2/org/apache/spark/spark-core_2.12/2.4.5/spark-core_2.12-2.4.5.jar #下载链接curl https://repo1.maven.org/maven2/org/apache/spark/spark-core_2.12/2.4.5/spark-core_2.12-2.4.5.jar -O spark-core_2.12-2.4.5.jar #-O是输出的意思 5.压缩 解压创建一个例子，空文件zip -r xxx.zip xxx/*unzip xxx.zip如果两个没有则需要单独安装，不是一体的 1234567tar -czvf xxxx.tar.gz xxxx/* #压缩tar -xzvf xxxx.tar.gz #解压Examples:# 不加-zv，则文件后缀是.tar tar -cf archive.tar foo bar # Create archive.tar from files foo and bar. tar -tvf archive.tar # List all files in archive.tar verbosely. tar -xf archive.tar # Extract all files from archive.tar. 6.命令找不到使用which 命令查看，只会显示出环境变量中的第一个匹配命令 12345678[root@hadoop001 ~]# lsdir1 dir1.tar.gz[root@hadoop001 ~]# which lsalias ls='ls --color=auto' /usr/bin/ls[root@hadoop001 ~]# which jjj/usr/bin/which: no jjj in (/home/dwz/app/python3/bin:/usr/java/jdk1.8.0_181/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin)[root@hadoop001 ~]# 想要命令快速找到 which xxx 来验证，其实就是提前将命令的目录配置在环境变量$PATH通过echo $PATH 来查看是否将命令的目录配置上！ 1234[root@hadoop001 ~]# echo $PATH/home/dwz/app/python3/bin:/usr/java/jdk1.8.0_181/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin[root@hadoop001 ~]# jjj-bash: jjj: command not found command not found a.没安装上 b.路径没配置 whereis 命令 能匹配到的都给你展示出来 7.定时 脚本: 1234567891011121314151617181920212223242526272829303132333435363738[root@hadoop001 ~]# vi ruoze.sh #shell脚本#!/bin/bashdate[root@hadoop001 ~]# lltotal 8drwxr-xr-x 2 root root 30 Apr 22 22:50 dir1-rw-r--r-- 1 root root 128 Apr 22 22:49 dir1.tar.gz-rw-r--r-- 1 root root 19 Apr 22 23:02 ruoze.sh[root@hadoop001 ~]# ./ruoze.sh # 当前目录方式执行-bash: ./ruoze.sh: Permission denied[root@hadoop001 ~]# sh ./ruoze.sh # 不想赋权限,用sh命令Wed Apr 22 23:02:36 CST 2020[root@hadoop001 ~]# chmod 744 ruoze.sh[root@hadoop001 ~]# lltotal 8drwxr-xr-x 2 root root 30 Apr 22 22:50 dir1-rw-r--r-- 1 root root 128 Apr 22 22:49 dir1.tar.gz-rwxr--r-- 1 root root 19 Apr 22 23:02 ruoze.sh[root@hadoop001 ~]# ./ruoze.sh Wed Apr 22 23:03:17 CST 2020[root@hadoop001 ~]# [root@hadoop001 ~]# dateWed Apr 22 23:03:21 CST 2020[root@hadoop001 ~]# crontab -e #-e是编辑 ， crontab命令可以当一个文本编辑框用* * * * * /root/ruoze.sh &gt;&gt; /root/ruoze.log #五个星号五个星号分别代表分小时日月周* 表示 每* * * * * 每分钟 #最常用*/1 * * * * 每分钟 面试题:每隔10s打印一次 怎么做 1*/6 * * * * # 不对，这是每6分钟 如果时间是秒 123456789[root@hadoop001 ~]# vi ruoze2.sh #每次六次之后休眠，10秒一跳#!/bin/bashfor((i=1;i&lt;=6;i++));do date sleep 10sdone [root@hadoop001 ~]# chmod +x ruoze2.sh # 设置完之后需要赋权限,所有人都拥有可以执行的权限 8.后台执行脚本nohup /root/ruoze.sh &gt;&gt; /root/ruoze.log 2&gt;&amp;1 &amp; # 生产标准写法 nohup 中间随便命令 &amp;","categories":[{"name":"ruozedata","slug":"ruozedata","permalink":"https://github.com/wangqi1994/wangqi1994.github.io/categories/ruozedata/"},{"name":"Linux","slug":"Linux","permalink":"https://github.com/wangqi1994/wangqi1994.github.io/categories/Linux/"}],"tags":[{"name":"ruozedata","slug":"ruozedata","permalink":"https://github.com/wangqi1994/wangqi1994.github.io/tags/ruozedata/"},{"name":"Linux","slug":"Linux","permalink":"https://github.com/wangqi1994/wangqi1994.github.io/tags/Linux/"}]},{"title":"早课2","slug":"20200423","date":"2020-04-23T04:00:00.000Z","updated":"2020-04-23T04:00:00.000Z","comments":true,"path":"2020/04/23/20200423/","link":"","permalink":"https://github.com/wangqi1994/wangqi1994.github.io/2020/04/23/20200423/","excerpt":"","text":"1.查看当前目录1pwd 2.隐藏文件、文件夹以什么开始，怎样查看以.开头 1ls -a 3.ls -l 等价于什么？ls -l = ll 显示额外信息 权限 用户用户组 时间 大小 4.级联创建文件夹mkdir dir1 dir2 dir3 并mkdir -p dir4/dir5/dir6 串 级联创建-p 5.创建文件哪几种方式a.touch 1.log 创建空文件b.vi 2.log 创建文件并用vim编辑器打开编辑c.echo “ruozedata” &gt; 3.log主要场景是为了 覆盖内容 或者 追加内容打印一句话进入3.log文件“&gt;” 创建或覆盖 【高危命令1】‘&gt;&gt;’ 追加 6.cp和mv谁快？ 能不能在cp 、mv过程，顺便修改名称呢？mv是始终一份 快cp是两份 慢同时支持修改名称mv dir2 ruozedata/dir22cp -r dir3 dir33 7.查看文件的大小哪两种命令？ls -l 显示额外信息 权限 用户用户组 时间 大小 = llls -l -h 仅仅查看文件的可读大小 8.查看文件夹的大小的命令？du -l 查看当前目录下各文件夹大小du -sh 查看当前目录大小du -h 显示可读的大小 9.ll 命令执行完成后，文件、文件夹展示一长串信息，有哪些？除文件名或文件夹名之外，还显示额外信息 权限 用户用户组 时间 大小 10.绝对路径和相对路径，区别是什么？绝对路径就是文件的真正存在的路径，是指从硬盘的根目录(盘符)开始，进行一级级目录指向文件。相对路径就是以当前文件为基准进行一级级目录指向被引用的资源文件。../ 表示当前文件所在的目录的上一级目录./ 表示当前文件所在的目录(可以省略)/ 表示当前用户的根目录 11.root的家目录在哪？普通用户的默认家目录在哪？root家目录/rootxx用户家目录/home/xxx 12.切换到用户的家目录，哪三种方式？切换到家目录cd ~cd 空格cd /home/用户 13.切换到 上一层目录 与 上一次目录，命令分别是什么？切换上一次目录cd -切换到上一层目录cd ../ 14.清除屏幕信息clear 15.查看文件内容 哪几个命令？cat 文件内容一下子全部显示 ctrl+z 中断more 文件内容一页页往下翻，按空格往下 Ctrl+B 回退 q退出less 文件内容 按上下键 q退出tail 实时查看文件最新内容 16.实时查看文件内容，-f -F区别是什么？tail 实时查看文件最新内容&emsp;&emsp;&emsp;tail -f xxx.log 基本不太用来自动提取实时监控，当文件不在之后就不会在尝试查看，即使文件重新创建&emsp;&emsp;&emsp;tail -F yyy.log =-f+ retry再次尝试采集信息 17.谈谈你对 如何定位ERROR的 理解？a.当文件内容超多时 需要定位ERROR 信息 1234cat xxx.log | grep ERROR #提取当前行cat xxx.log | grep -A 5 ERROR #提取关键字出现的后5行cat xxx.log | grep -B 5 ERROR #提取关键字出现的前5行cat xxx.log | grep -C 5 ERROR #提取关键字出现的前后各5行 如果没有-A-B-C则只会打出错误行，最好前后打印15.20行的数据| 管道符 前面命令的结果是接下来的输入数据grep 过滤比如 xxx.log ERROR 很多 上万个 可以导出到单独文件查看 12cat xxx.log | grep -C 5 ERROR &gt; 20200418error.logmore 20200418error.log b.当文件不是很大时，可通过vim编辑器查看文件进行定位vi xxx.log&emsp;&emsp;shift+:&emsp;&emsp;/ 代表搜索的语法，之后输入需要寻找的对象&emsp;&emsp;ERROR 输入错误的关键字&emsp;&emsp;n寻找，下翻c.可以将文件下载到windows，利用文件处理软件进行错误定位&emsp;&emsp;&emsp;editplus（window）&emsp;&emsp;&emsp;notepad++&emsp;&emsp;&emsp;sublime（widnow mac）工具 搜索 统计 校验 18. &gt; &gt;&gt;区别是什么？‘&gt;’ 创建或覆盖 【高危命令1】‘&gt;&gt;’ 追加 19.设置变量 key= value ,这样写对吗？如何引用呢？普通变量可以，引用只需要输入key即可设置环境变量：alias key = ‘value’想在配置后，全局生效，需要新开窗口，老窗口可看作静态窗口 生效文件:设置完变量之后需要进行生效操作source，三种方式 12345source /etc/profilesource ~/.bash_profilesource ~/.bashrccd 进家目录.空格.bashrc 20.全局环境变量文件在哪？ 个人环境变量文件(推荐哪个)在哪？如何生效？全局 : /etc/profile 所有用户都可以使用个人:&emsp;&emsp;&emsp; ~/.bash_profile 只能是设置命令的当前用户使用 其他不能使用&emsp;&emsp;&emsp; ~/.bashrc [设置个人别名主要修改这个文件]&emsp;&emsp;&emsp; 场景: 使用ssh 远程执行B机器 +命令&emsp;&emsp;&emsp; 提示找不到命令 java command not found&emsp;&emsp;&emsp; 但是直接登录B机器 命令是找到的 which java有的 命令的环境变量配置在.bash_profile 是不正确的。 应该配置在.bashrc文件想在配置后，全局生效，需要新开窗口，老窗口可看作静态窗口 生效文件:修改后需要操作之后才会生效 12345source /etc/profilesource ~/.bash_profilesource ~/.bashrccd 进家目录.空格.bashrc","categories":[{"name":"ruozedata","slug":"ruozedata","permalink":"https://github.com/wangqi1994/wangqi1994.github.io/categories/ruozedata/"}],"tags":[{"name":"ruozedata","slug":"ruozedata","permalink":"https://github.com/wangqi1994/wangqi1994.github.io/tags/ruozedata/"}]},{"title":"数仓培训第三天","slug":"若泽大数据-剑指数仓培训笔记3","date":"2020-04-23T04:00:00.000Z","updated":"2020-04-23T04:00:00.000Z","comments":true,"path":"2020/04/23/若泽大数据-剑指数仓培训笔记3/","link":"","permalink":"https://github.com/wangqi1994/wangqi1994.github.io/2020/04/23/%E8%8B%A5%E6%B3%BD%E5%A4%A7%E6%95%B0%E6%8D%AE-%E5%89%91%E6%8C%87%E6%95%B0%E4%BB%93%E5%9F%B9%E8%AE%AD%E7%AC%94%E8%AE%B03/","excerpt":"","text":"大数据之Linux生产命令三1.用户 用户组1234567891011121314151617# 查看用户命令[root@hadoop001 ~]# ll /usr/sbin/user*-rwxr-x---. 1 root root 114056 Mar 6 2015 /usr/sbin/useradd-rwxr-x---. 1 root root 80352 Mar 6 2015 /usr/sbin/userdel-rws--x--x. 1 root root 40312 Jun 10 2014 /usr/sbin/userhelper-rwxr-x---. 1 root root 113808 Mar 6 2015 /usr/sbin/usermod-rwsr-xr-x. 1 root root 11272 Nov 20 2015 /usr/sbin/usernetctl# 查看用户组命令[root@hadoop001 ~]# ll /usr/sbin/group*-rwxr-x---. 1 root root 61336 Mar 6 2015 /usr/sbin/groupadd-rwxr-x---. 1 root root 56992 Mar 6 2015 /usr/sbin/groupdel-rwxr-x---. 1 root root 57024 Mar 6 2015 /usr/sbin/groupmems-rwxr-x---. 1 root root 76400 Mar 6 2015 /usr/sbin/groupmod# 增加用户,查看id [root@hadoop001 ~]# useradd ruoze[root@hadoop001 ~]# id ruozeuid=1002(ruoze) gid=1002(ruoze) groups=1002(ruoze) 创建一个普通用户 用户名称 ruoze同时也会创建一个 ruoze用户组设置ruoze用户的组为ruoze,且把这个ruoze用户组设置为 主组同时也创建家目录 /home/ruoze 12345[root@hadoop001 ~]# ll /hometotal 12drwx------. 3 hadoop001 hadoop001 4096 Apr 20 13:56 hadoop001drwx------. 5 luc luc 4096 Apr 23 09:54 lucdrwx------. 3 ruoze ruoze 4096 Apr 23 13:36 ruoze 用户存储信息 /etc/passwd用户组 /etc/group 123456[root@hadoop001 ~]# userdel ruoze #删除之后再添加同一名称用户，会沿用以前那创建的文件[root@hadoop001 ~]# useradd ruozeuseradd: warning: the home directory already exists.Not copying any file from skel directory into it.Creating mailbox file: File exists[root@hadoop001 ~]# 样式丢失在删除之后重新加上该用户，可能会缺失某些文件导致丢失样式三种解决方法：a.自己创建b.去其它用户文件夹copyc.去skel隐藏文件copy 12345678910111213141516171819202122232425262728[root@hadoop001 ~]# su - ruoze #删除了bash相关的文件之后，下次切用户会丢失样式[ruoze@hadoop001 ~]$ ll -atotal 32drwx------. 5 ruoze ruoze 4096 Apr 23 13:50 .drwxr-xr-x. 5 root root 4096 Apr 23 13:36 ..-rw-r--r--. 1 ruoze ruoze 18 Nov 20 2015 .bash_logout-rw-r--r--. 1 ruoze ruoze 193 Nov 20 2015 .bash_profile-rw-r--r--. 1 ruoze ruoze 231 Nov 20 2015 .bashrcdrwxrwxr-x. 3 ruoze ruoze 4096 Apr 23 13:50 .cachedrwxrwxr-x. 3 ruoze ruoze 4096 Apr 23 13:50 .configdrwxr-xr-x. 4 ruoze ruoze 4096 Apr 20 13:56 .mozilla[ruoze@hadoop001 ~]$ rm -rf .bash*[ruoze@hadoop001 ~]$ ll -atotal 20drwx------. 5 ruoze ruoze 4096 Apr 23 13:51 .drwxr-xr-x. 5 root root 4096 Apr 23 13:36 ..drwxrwxr-x. 3 ruoze ruoze 4096 Apr 23 13:50 .cachedrwxrwxr-x. 3 ruoze ruoze 4096 Apr 23 13:50 .configdrwxr-xr-x. 4 ruoze ruoze 4096 Apr 20 13:56 .mozilla[ruoze@hadoop001 ~]$ exitlogout[root@hadoop001 ~]# su - ruozeLast login: Thu Apr 23 13:50:13 CST 2020 on pts/1-bash-4.2$ -bash-4.2$-bash-4.2$ id-bash-4.2$ iduid=1002(ruoze) gid=1002(ruoze) groups=1002(ruoze) context=unconfined_u:unconfined_r:unconfined_t:s0-s0:c0.c1023 样式恢复1234567891011121314151617181920-bash-4.2$ cp /etc/skel/.* ./ #将备份文件重新复制过来后，重新登录之后样式恢复cp: omitting directory ‘/etc/skel/.’cp: omitting directory ‘/etc/skel/..’cp: omitting directory ‘/etc/skel/.mozilla’-bash-4.2$ ll -atotal 36drwx------. 5 ruoze ruoze 4096 Apr 23 13:56 .drwxr-xr-x. 5 root root 4096 Apr 23 13:36 ..-rw-------. 1 ruoze ruoze 52 Apr 23 13:53 .bash_history-rw-r--r--. 1 ruoze ruoze 18 Apr 23 13:56 .bash_logout-rw-r--r--. 1 ruoze ruoze 193 Apr 23 13:56 .bash_profile-rw-r--r--. 1 ruoze ruoze 231 Apr 23 13:56 .bashrcdrwxrwxr-x. 3 ruoze ruoze 4096 Apr 23 13:50 .cachedrwxrwxr-x. 3 ruoze ruoze 4096 Apr 23 13:50 .configdrwxr-xr-x. 4 ruoze ruoze 4096 Apr 20 13:56 .mozilla-bash-4.2$ exitlogout[root@hadoop001 ~]# su - ruozeLast login: Thu Apr 23 13:53:28 CST 2020 on pts/1[ruoze@hadoop001 ~]$ 添加用户到bigdata用户组1234567891011[root@hadoop001 ~]# groupadd bigdata[root@hadoop001 ~]# usermod -a -G bigdata ruoze #将bigdata附加到ruoze的groups中[root@hadoop001 ~]# id ruozeuid=1002(ruoze) gid=1002(ruoze) groups=1002(ruoze),1003(bigdata)[root@hadoop001 ~]# usermod -g bigdata ruoze #强制将ruoze主组改为bigdata[root@hadoop001 ~]# id ruoze uid=1002(ruoze) gid=1003(bigdata) groups=1003(bigdata) #gid编程bigdata用户组[root@hadoop001 ~]# usermod -a -G ruoze ruoze #将ruoze附加到ruoze的groups中[root@hadoop001 ~]# id ruozeuid=1002(ruoze) gid=1003(bigdata) groups=1003(bigdata),1002(ruoze)[root@hadoop001 ~]# 2.设置密码passwd123456[root@hadoop001 ~]# passwdChanging password for user root.New password: BAD PASSWORD: The password is shorter than 8 charactersRetype new password: passwd: all authentication tokens updated successfully. 3.切换用户su ruoze 会进入该用户账号，但是目录位置不变su - ruoze [J哥推荐] 代表该用户切换到家目录，且执行环境变量文件 12345678910[root@hadoop001 ~]# su ruoze #切换到ruoze用户的root目录下[ruoze@hadoop001 root]$ pwd/root[ruoze@hadoop001 root]$ exitexit[root@hadoop001 ~]# su - ruoze #切换到ruoze用户的家目录下Last login: Thu Apr 23 14:10:24 CST 2020 on pts/1[ruoze@hadoop001 ~]$ pwd/home/ruoze[ruoze@hadoop001 ~]$ 4.sudo 普通用户临时使用root的最大权限1234567vi /etc/sudoers #找到allow设置root权限ruoze ALL=(root) NOPASSWD:ALL[ruoze@ruozedata001 ~]$ cat /root/rz.logcat: /root/rz.log: Permission denied[ruoze@ruozedata001 ~]$ sudo cat /root/rz.logwww.ruozedata.com[ruoze@ruozedata001 ~]$ 5./etc/passwd文件ruoze:x:1004:1005::/home/ruoze:/sbin/nologin 有提示ruoze:x:1004:1005::/home/ruoze:/usr/bin/false 没提示 CDH平台 hdfs yarn hive hbasesu - yarn 不成功的 /sbin/nologin /usr/bin/false ===》/bin/bash 可以登陆 /etc/passwd文件中权限sbin/nologin会出现无法切换用户的，报错无法登录权限设为/usr/bin/false，无法登录，但是无报错需要修改为/bin/bash 6.权限12345[root@hadoop001 ~]# lltotal 48-rw-------. 1 root root 1732 Apr 20 14:06 anaconda-ks.cfgdrwxr-xr-x. 2 root root 4096 Apr 20 14:36 Desktopdrwxr-xr-x. 2 root root 4096 Apr 23 09:17 dir2 第一个字母：d文件夹 -文件 l连接后面9个字母,3个字母为一组:rw- r– r– r: read 读权限 4w: write 写权限 2x: 执行 1-: 没权限 0 占位 7=4 2 15=4 16=4 2 rw- 第一组 6 代表文件或文件夹的所属用户，读写权限r– 第二组 4 代表文件或文件夹的所属用户组，读权限r– 第三组 4 代表其他用户组的用户对这个文件或文件夹，读权限 rw-r–r– root root 22.log 关于权限：chmod -R 777 文件或文件夹chown -R 用户:用户组 文件或文件夹 案例: 12345678910[root@ruozedata001 tmp]# vi ruoze.logwww.ruozedata.com[ruoze@ruozedata001 tmp]$ cat ruoze.log www.ruozedata.com[ruoze@ruozedata001 tmp]$ [root@ruozedata001 tmp]# chmod 640 ruoze.log #收回其他组的r权限 [ruoze@ruozedata001 tmp]$ cat ruoze.log cat: ruoze.log: Permission denied 7.大小文件： ll -h 、du -sh文件夹: du -sh 8.搜索 find接手大数据平台，服务器登录，大数据组件安装目录在哪？ 12find / -name '*hadoop*'find /home/hadoop/ -name '*hadoop*'#根目录搜索会很多，最好顶死安装目录搜索 补充:history 命令 hietory -cps -ef 查看进程kill -PID 杀死PID进程 9.vi命令9.1 正常编辑一个文件，要正常退出 wqvi异常中断出现swap结尾文件会报错-rw-r–r– 1 root root 16 Apr 19 21:26 2.log-rw-r–r– 1 root root 12288 Apr 19 21:31 .2.log.swpswap文件需要删除rm -rf .2.log.swp 9.2 粘贴操作必须进入编辑模式，否则第一行内容丢失 不完整 9.3 搜索尾行模式（shift+:)–》 /error 9.4 行号尾行–》 set nu 设置行号 set nonu 取消行号 f 也是可以显示 当前光标的所在的行9.5 常用快捷方式123456dd #删除当前行dG #删除当前及以下所有行ndd #删除当前及以下n行gg #跳转到第一行的第一个字母G #跳转到最后一行的第一个字母shift+$ #行尾 场景：清空这个文件内容，从另外一个文件内容 拷贝过来gg–》dG –》 i –&gt;鼠标右键单击 粘贴上 清空补充： 1234567cat /dev/null &gt; 1.logecho \"\" &gt; 2.logtrue &gt; 1.log #也是清空文件内容 0字节[root@ruozedata001 ~]# lltotal 16-rw-r--r-- 1 root root 0 Apr 19 21:58 1.log-rw-r--r-- 1 root root 1 Apr 19 21:58 2.log 场景:shell脚本，数据文件清空操作，根据字节大小判断是否清空完成 123456echo \"\" &gt; 2.logif filezie &gt; 0 then 业务不操作else 2.log 灌业务数据","categories":[{"name":"ruozedata","slug":"ruozedata","permalink":"https://github.com/wangqi1994/wangqi1994.github.io/categories/ruozedata/"},{"name":"Linux","slug":"Linux","permalink":"https://github.com/wangqi1994/wangqi1994.github.io/categories/Linux/"}],"tags":[{"name":"ruozedata","slug":"ruozedata","permalink":"https://github.com/wangqi1994/wangqi1994.github.io/tags/ruozedata/"},{"name":"Linux","slug":"Linux","permalink":"https://github.com/wangqi1994/wangqi1994.github.io/tags/Linux/"}]},{"title":"数仓培训第二天","slug":"若泽大数据-剑指数仓培训笔记2","date":"2020-04-23T04:00:00.000Z","updated":"2020-04-23T04:00:00.000Z","comments":true,"path":"2020/04/23/若泽大数据-剑指数仓培训笔记2/","link":"","permalink":"https://github.com/wangqi1994/wangqi1994.github.io/2020/04/23/%E8%8B%A5%E6%B3%BD%E5%A4%A7%E6%95%B0%E6%8D%AE-%E5%89%91%E6%8C%87%E6%95%B0%E4%BB%93%E5%9F%B9%E8%AE%AD%E7%AC%94%E8%AE%B02/","excerpt":"","text":"大数据之Linux生产常用命令一+二1.清楚屏幕 clear2.mv移动 cp复制mv是文件始终一份 速度快cp是存在两份文件 速度慢不标准写法: 12mv dir1 ruozedatacp -r dir2 ruozedata 标准写法: 12mv dir1 ruozedata/dir1cp -r dir2 ruozedata/dir2 也支持修改名称 12mv dir2 dir22cp -r dir3 dir33 #可以支持复制的同时修改文件名称 3.创建文件a.touch 1.log 创建空文件b.vi 2.log 创建文件并用vim编辑器打开编辑vim操作简介：&emsp;&emsp;&emsp;默认命令行&emsp;&emsp;&emsp;i键 编辑模式，进行编辑&emsp;&emsp;&emsp;esc键 从编辑模式–》命令行模式&emsp;&emsp;&emsp;shift+:键 从命令行模式–》尾行模式，输入wq 保存退出c.主要场景是为了 覆盖内容 或者 追加内容echo “ruozedata” &gt; 3.log打印一句话进入3.log文件“&gt;” 创建或覆盖 【高危命令1】‘&gt;&gt;’ 追加 4.查看文件内容 log config datacat 文件内容一下子全部显示 ctrl+z 中断more 文件内容一页页往下翻，按空格往下 Ctrl+B 回退 q退出less 文件内容 按上下键 q退出 cat 适用于文件内容少的情况more 适用于文件内容稍微多点的情况 tail 实时查看文件最新内容&emsp;&emsp;&emsp;tail -f xxx.log 基本不太用来自动提取实时监控，&emsp;&emsp;&emsp;当文件不在之后就不会在尝试查看，即使文件重新创建&emsp;&emsp;&emsp;tail -F yyy.log =-f+ retry再次尝试采集信息 场景:a.采集业务log日志内容 log4j（业务系统中很多是）&emsp;&emsp;规则: 每份100m 保留10份&emsp;&emsp;系统–》 erp.log 90m …100m&emsp;&emsp;&emsp;mv erp.log erp.log1&emsp;&emsp;&emsp;touch erp.log ll命令查看，会存在11份数据 erp.log erp.log1 erp.log2 .... erp.log10b.大数据Flume组件 exec source: tail -F erp.log 生产上面监控数据指令 想要查看文件内容倒数100行,同时实时监控tail -100f xxx.logtail -100F xxx.log 错误的 文件内容超多时 需要定位ERROR 信息 1234cat xxx.log | grep ERROR #提取当前行cat xxx.log | grep -A 5 ERROR #提取关键字出现的后5行cat xxx.log | grep -B 5 ERROR #提取关键字出现的前5行cat xxx.log | grep -C 5 ERROR #提取关键字出现的前后各5行 如果没有-A-B-C则只会打出错误行，最好前后打印15.20行的数据| 管道符 前面命令的结果是接下来的输入数据grep 过滤比如 xxx.log ERROR 很多 上万个 可以导出到单独文件查看 12cat xxx.log | grep -C 5 ERROR &gt; 20200418error.logmore 20200418error.log 文件内容100m :&emsp;&emsp;&emsp;vi xxx.log &emsp;&emsp;&emsp;&emsp;shift+: &emsp;&emsp;&emsp;&emsp;/ 代表搜索的语法，之后输入需要寻找的对象 &emsp;&emsp;&emsp;&emsp;ERROR &emsp;&emsp;&emsp;&emsp;n寻找，下翻&emsp;&emsp;&emsp;下载到window&emsp;&emsp;&emsp;editplus（window）&emsp;&emsp;&emsp;notepad++&emsp;&emsp;&emsp;sublime（widnow mac）工具 搜索 统计 校验 5. 上传下载安装工具包 yum install -y lrzszsz xxx.log是下载 Linux–》windowrz 是上传 window–》Linux 6.别名 alias123456789101112[root@hadoop001 log]# aliasalias cp='cp -i' #需要加引号才可以设置alias egrep='egrep --color=auto'alias fgrep='fgrep --color=auto'alias grep='grep --color=auto'alias l.='ls -d .* --color=auto'alias ll='ls -l --color=auto'alias ls='ls --color=auto'alias mv='mv -i'alias rm='rm -i'alias which='alias | /usr/bin/which --tty-only --read-alias --show-dot --show-tilde'[root@hadoop001 log]# 自制别名只在当前会话生效，会话即xshell的一个窗口 1234[root@hadoop001 log]# alias jj='cd /tmp'其他会话不生效[root@hadoop001 ~]# jj-bash: jj: command not found 是因为没有在环境变量文件配置 7.环境变量全局 : /etc/profile 所有用户都可以使用 个人:&emsp;&emsp;&emsp; ~/.bash_profile 只能是设置命令的当前用户使用 其他不能使用&emsp;&emsp;&emsp; ~/.bashrc [设置个人别名主要修改这个文件]&emsp;&emsp;&emsp; 场景: 使用ssh 远程执行B机器 +命令&emsp;&emsp;&emsp; 提示找不到命令 java command not found&emsp;&emsp;&emsp; 但是直接登录B机器 命令是找到的 which java有的 命令的环境变量配置在.bash_profile 是不正确的。 应该配置在.bashrc文件想在配置后，全局生效，需要新开窗口，老窗口可看作静态窗口 生效文件:修改后需要操作之后才会生效 12345source /etc/profilesource ~/.bash_profilesource ~/.bashrccd 进家目录.空格.bashrc 8.创建用户root 默认管理员用户 已存在的创建luc用户 123456789[root@hadoop001 ~]# useradd luc[root@hadoop001 ~]# su - luc[luc@hadoop001 ~]$ pwd/home/luc[luc@hadoop001 ~]$ [luc@hadoop001 ~]$ jj 是因为jj配置在全局变量文件 [luc@hadoop001 tmp]$ pwd/tmp[luc@hadoop001 tmp]$ 9.自动补全tab键一次，只有1个 命令自动补全&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;多个 没响应&emsp;按二次，会把当前匹配到的 所有命令打印出来，再挑选 10.history 历史命令输入history，弹出历史命令!2 执行第二行命令 history -c 清空历史 ，不想让人知道自己的操作，把尾巴擦干净 可使用的情况，区分服务器类型直连 服务器 ok跳板机(vpn) 服务器 ok堡垒机 敲一个命令 都记录 堡垒机系统里 web界面 可视化 11.【高危命令】 rm千万不要做 rm -rf 全完蛋 1234567[root@hadoop001 ~]# rm 11.logrm: remove regular file ‘11.log’? y #rm命令会询问是否删除[root@hadoop001 ~]# rm -f 1.log #-f直接删除不询问[root@hadoop001 ~]# rm -r dir22 #-r删除文件夹，之前询问rm: remove directory ‘dir22’? y[root@hadoop001 ~]# rm -rf dir33 #-rf所有东西全部直接删除不提示，慎用[root@hadoop001 ~]# 可用场景:在脚本里设置LOG_PATH=/xxx/yyy需要根据业务逻辑判断 去赋值&emsp;&emsp;漏了一种 没有赋值rm -rf ${LOG_PATH}/* ==》rm -rf /* 该怎么避免 ：每次删除之前 都判断${LOG_PATH} 是否存在 补充:123456[root@JD ~]# hostnamectl set-hostname hadoop001 #JD云改主机名[root@hadoop001 ~]# ifconfig # 找内网ip 或者 京东云控制台查看 [root@hadoop001 ~]# vi /etc/hosts127.0.0.1 localhost localhost.localdomain localhost4 localhost4.localdomain4::1 localhost localhost.localdomain localhost6 localhost6.localdomain6192.168.0.3 hadoop001","categories":[{"name":"ruozedata","slug":"ruozedata","permalink":"https://github.com/wangqi1994/wangqi1994.github.io/categories/ruozedata/"},{"name":"Linux","slug":"Linux","permalink":"https://github.com/wangqi1994/wangqi1994.github.io/categories/Linux/"}],"tags":[{"name":"ruozedata","slug":"ruozedata","permalink":"https://github.com/wangqi1994/wangqi1994.github.io/tags/ruozedata/"},{"name":"Linux","slug":"Linux","permalink":"https://github.com/wangqi1994/wangqi1994.github.io/tags/Linux/"}]},{"title":"CentOS修改主机名","slug":"centos修改主机名","date":"2020-04-22T04:00:00.000Z","updated":"2020-04-22T04:00:00.000Z","comments":true,"path":"2020/04/22/centos修改主机名/","link":"","permalink":"https://github.com/wangqi1994/wangqi1994.github.io/2020/04/22/centos%E4%BF%AE%E6%94%B9%E4%B8%BB%E6%9C%BA%E5%90%8D/","excerpt":"","text":"CentOS6.5修改主机名 1.编辑/etc/sysconfig/network 123[root\\@localhost \\~]\\# vi /etc/sysconfig/networkNETWORKING=yesHOSTNAME=hadoop001 2.hostname直接命名 1[root\\@localhost \\~]\\#hostname hadoop-01 3.编辑/etc/hosts 1234567[root\\@localhost \\~]\\# vi /etc/hosts127.0.0.1 localhost localhost.localdomain localhost4 localhost4.localdomain4::1 localhost localhost.localdomain localhost6 localhost6.localdomain6192.168.137.130 hadoop001 主机名修改之后需要重新打开终端，才能显示。","categories":[{"name":"系统配置","slug":"系统配置","permalink":"https://github.com/wangqi1994/wangqi1994.github.io/categories/%E7%B3%BB%E7%BB%9F%E9%85%8D%E7%BD%AE/"}],"tags":[{"name":"系统配置","slug":"系统配置","permalink":"https://github.com/wangqi1994/wangqi1994.github.io/tags/%E7%B3%BB%E7%BB%9F%E9%85%8D%E7%BD%AE/"}]},{"title":"数仓培训第一天","slug":"若泽大数据-剑指数仓培训笔记1","date":"2020-04-22T04:00:00.000Z","updated":"2020-04-22T04:00:00.000Z","comments":true,"path":"2020/04/22/若泽大数据-剑指数仓培训笔记1/","link":"","permalink":"https://github.com/wangqi1994/wangqi1994.github.io/2020/04/22/%E8%8B%A5%E6%B3%BD%E5%A4%A7%E6%95%B0%E6%8D%AE-%E5%89%91%E6%8C%87%E6%95%B0%E4%BB%93%E5%9F%B9%E8%AE%AD%E7%AC%94%E8%AE%B01/","excerpt":"","text":"数仓培训第一天 一、系统安装部署具体流程参考：Centos7.2安装部署（图文教程）iciCentOS6.5配置静态IP和可访问外网iciCentOS6.5修改主机名ici 二、Linux部分认知和命令1. [root@hadoop001 ~]#root默认管理员，拥有最大权限 hadoop001是机器名称，可以自行修改~表示当前用户家目录 root用户家目录/root , hadoop001用户家目录/home/hadoop001 2. pwd查看当前光标所在目录 路径12[root@ hadoop001 ~]# pwdroot 3. ls 查看[root@ hadoop001 ~]# lsls 显示文件夹 文件名称ls -l 显示额外信息 权限 用户用户组 更新时间 大小ls -l -a 显示隐藏文件夹和文件 = ls -al 123456[root@ hadoop001 ~]# ls -l -atotal 4dr-xr-x---. 6 root root 4096 Apr 15 21:51 .dr-xr-xr-x. 17 root root 4096 Aug 8 2018 ..-rw-------. 1 root root 3814 Apr 15 21:49 .bash_history-rw-r--r--. 1 root root 18 Dec 29 2013 .bash_logout 隐藏文件夹 文件是以.开头 12345678ls -l -h #仅仅查看文件的大小ls -l -r -t #按时间排序 （解决如何快速找到最新更新文件的问题）ll -a #ls -l ==》ll #等价ll -rtll -h 4. mkdir 创建文件夹12345[root@ hadoop001 ~]# mkdir ruozedata[root@ hadoop001 ~]# lsruozedatamkdir dir1 dir2 dir3 #并联创建，可以同时创建三个文件夹mkdir -p dir4/dir5/dir6 #串级创建，可以直接创建三层文件夹 5. cd 切换目录 路径Linux系统 从根目录的标识 / 123456[root@ hadoop001 ~]# cd /cd dir1 #进入dir1文件夹cd ../ #退到上一层目录 注意：不是上一次的目录cd ../../ #退到上面2层 root用户 家目录 /root普通xx用户 家目录 /home/xx家目录 是 ~ 表示如何进当前用户的家目录:cd /root #当前用户的家目录的完整路径 cd 直接回车cd ~ 123456cd - #回退到上一次的目录[root@ hadoop001 ~]# cd dir4[root@ hadoop001 dir4]# cd dir5/dir6[root@ hadoop001 dir6]#[root@ hadoop001 dir6]# cd -[root@ hadoop001 dir4]# 6. 帮助命令 –help[]标识的参数可选 … 多个参数Usage: ls [OPTIONS]Usage: ls XXX [OPTIONS] 12345678[root@ hadoop001 ~]# ls --helpUsage: ls [OPTION]... [FILE]...List information about the FILEs (the current directory by default).Sort entries alphabetically if none of -cftuvSUX nor --sort is specified.Mandatory arguments to long options are mandatory for short options too.-a, --all do not ignore entries starting with .-A, --almost-all do not list implied . and ..--author with -l, print the author of each file-b, --escape print C-style escapes for nongraphic characters--block-size=SIZE scale sizes by SIZE before printing them; e.g.,'--block-size=M' prints sizes in units of1,048,576 bytes; see SIZE format below man 命令 比–help更加详细","categories":[{"name":"ruozedata","slug":"ruozedata","permalink":"https://github.com/wangqi1994/wangqi1994.github.io/categories/ruozedata/"},{"name":"Linux","slug":"Linux","permalink":"https://github.com/wangqi1994/wangqi1994.github.io/categories/Linux/"}],"tags":[{"name":"ruozedata","slug":"ruozedata","permalink":"https://github.com/wangqi1994/wangqi1994.github.io/tags/ruozedata/"},{"name":"Linux","slug":"Linux","permalink":"https://github.com/wangqi1994/wangqi1994.github.io/tags/Linux/"}]},{"title":"CentOS6.5配置静态IP和可访问外网","slug":"centos6.5配置静态IP和可访问外网","date":"2020-04-21T04:00:00.000Z","updated":"2020-04-21T04:00:00.000Z","comments":true,"path":"2020/04/21/centos6.5配置静态IP和可访问外网/","link":"","permalink":"https://github.com/wangqi1994/wangqi1994.github.io/2020/04/21/centos6.5%E9%85%8D%E7%BD%AE%E9%9D%99%E6%80%81IP%E5%92%8C%E5%8F%AF%E8%AE%BF%E9%97%AE%E5%A4%96%E7%BD%91/","excerpt":"","text":"CentOS6.5配置静态IP和可访问外网 1.关闭Windos7防火墙 路径：控制面板\\系统和安全\\Windows Defender防火墙，选择启用或关闭防火墙，将防火墙关闭。 2.关闭CentOS6.5防火墙 在centos系统中关闭防火墙，terminal输入以下命令回车 12service iptables stopchkconfig iptables off 3.开启两个服务 Windows系统打开以下两个服务，默认是开启的。路径windows键+x，选择计算机管理，选择服务，将以下两个服务开启并设置为自动启动。 VMware DHCP Service VMware NAT Service 4.无线网卡的网络(或者插网线的网络)上设置网络共享，选择VM8。 路径：设置网络-更改适配器配置-选中网络-属性-高级属性-共享-将VM8加入共享。 5.使用ipconfig -all命令查看DNS、IPv4等信息 Windows键+R-cmd 记住现在所连网络的DNS，以及VMnet8的Ipv4地址和子网掩码 6.配置VM8的选择 使用配置ip 路径：设置网络-更改适配器配置-选中VMnet8-属性-选中Internet协议Ipv4（TCP/Ipv4）-修改IP地址和子网掩码 7.进入vm,单击菜单栏的编辑–&gt;虚拟网络编辑器 子网IP最后一个为0NAT设置中网关IP最后一位2DHCP设置中范围128-254 Centos7.2安装之后可以不需要设置静态IP，在安装时直接选择开启网络即可（安装配置可参照https://wangqi1994.github.io/2020/04/21/centos7.2/） 8.hadoop001配置NAT网络在虚拟机设置中，确认网络适配器是选择的NAT模式 9.进入hadoop001,编辑ifcfg-eth0 1vi /etc/sysconfig/network-scripts/ifcfg-eth0 IPADDR即IP地址，最后一位在设置范围内即可128-254NETMASK即子网掩码 GATEWAY即网关IPDNS即外部网络DNS注意不要打错单词，否则无法设置成功 10. 进入hadoop001,重启网络执行命令： 1service network restart 11. 进入hadoop001,检查网络","categories":[{"name":"ruozedata","slug":"ruozedata","permalink":"https://github.com/wangqi1994/wangqi1994.github.io/categories/ruozedata/"},{"name":"系统配置","slug":"系统配置","permalink":"https://github.com/wangqi1994/wangqi1994.github.io/categories/%E7%B3%BB%E7%BB%9F%E9%85%8D%E7%BD%AE/"}],"tags":[{"name":"ruozedata","slug":"ruozedata","permalink":"https://github.com/wangqi1994/wangqi1994.github.io/tags/ruozedata/"},{"name":"系统配置","slug":"系统配置","permalink":"https://github.com/wangqi1994/wangqi1994.github.io/tags/%E7%B3%BB%E7%BB%9F%E9%85%8D%E7%BD%AE/"}]},{"title":"Centos7.2安装部署（图文教程）","slug":"centos7.2","date":"2020-04-21T04:00:00.000Z","updated":"2020-04-21T04:00:00.000Z","comments":true,"path":"2020/04/21/centos7.2/","link":"","permalink":"https://github.com/wangqi1994/wangqi1994.github.io/2020/04/21/centos7.2/","excerpt":"","text":"Centos7.2安装部署（图文教程） 描述：记录VMware中centos安装部署步骤，包括安装流程和参数配置 一、下载CentOSer6.5镜像文件。============================= http://vault.centos.org/7.2.1511/isos/x86_64/ 二．虚拟机创建流程:（本次安装使用的VMware版本是15.5）===================================================== 点击新建虚拟机，弹出如下窗口，选择自定义，点击下一步 选择workstations 10.x，点击下一步 选择稍后安装操作系统，下一步 选择Linux之后，选择安装版本，此次选择Centos7 64位，点击下一步 设置虚拟机的名称以及安装位置，（名称根据个人喜好设置），点击下一步 处理器配置，在不影响电脑流畅度条件下，随意设置 配置内存，建议2G以上 网络类型选择默认使用网络地址转换（NAT） I/O控制器类型默认选择LSI Logic（L） 磁盘类型默认选择SCIS 选择磁盘使用，默认选择创建新虚拟磁盘 指定磁盘容量，在不影响电脑使用情况下，合理分配内存，建议40G以上 磁盘文件命名，默认即可，点击下一步 点击完成，完成创建，或者选择自定义硬件，编辑相关属性。 选中新创建的虚拟机，点击编辑虚拟机设置 选择CD/DVD（IDE）后选择使用镜像文件安装，选中提前下载好的镜像文件，点击确定 三、系统安装配置================ 点击开启此虚拟机进行系统安装，选择Install Centos 7,直接回车，开始安装 进入配置参数界面，建议选择英文系统，当然选择中文系统也可，看个人喜好。 点击继续，进入具体设置配置界面 设置系统时间和时区，选择Asia/Shanghai，注意具体时间可能会差9小时，可以自己进行手动设置。 至于键盘和辅助语言选择根据个人喜好设置，个人建议英文 选择设置安装software软件，选中softwareselection进行自己的定制安装，默认选中最小化安装。 此次选择安装桌面版GNOME桌面，右侧可以选择想要安装的软件包。 接下来，最重要的是设置installation destination，选中配置的磁盘（两次点击） 选择自定义，进行磁盘分配。然后选择Done确定进入磁盘分配 选择标准分区后，选择添加按钮进行磁盘分配 记得文件系统选择ex4，swap分区最好设置2G往上，设置好boot和swap分区之后，剩余所有磁盘分配给根目录/。点击确认退出磁盘分配 关于KDUMP，建议关闭，报错文件看不懂，可以勾选 关于网络和主机名，建议选择打开网络并根据需要自行修改主机名。 配置完成之后点击开始安装。 安装过程中，可以设置root用户和普通用户账号和密码，设置完成之后，等待安装完成。 安装完成后，点击reboot重启 会弹出用户协议选择界面，依此输入1-2-c-c即为同意协议 完成安装 输入密码之后，进入欢迎界面，可选择设置系统语言和键盘分布，还有google等用户可选择登录，可以选择跳过。 最后，进入Centos 7 桌面。","categories":[{"name":"ruozedata","slug":"ruozedata","permalink":"https://github.com/wangqi1994/wangqi1994.github.io/categories/ruozedata/"},{"name":"系统配置","slug":"系统配置","permalink":"https://github.com/wangqi1994/wangqi1994.github.io/categories/%E7%B3%BB%E7%BB%9F%E9%85%8D%E7%BD%AE/"}],"tags":[{"name":"ruozedata","slug":"ruozedata","permalink":"https://github.com/wangqi1994/wangqi1994.github.io/tags/ruozedata/"},{"name":"系统配置","slug":"系统配置","permalink":"https://github.com/wangqi1994/wangqi1994.github.io/tags/%E7%B3%BB%E7%BB%9F%E9%85%8D%E7%BD%AE/"}]},{"title":"早课1","slug":"20200420","date":"2020-04-20T04:00:00.000Z","updated":"2020-04-20T04:00:00.000Z","comments":true,"path":"2020/04/20/20200420/","link":"","permalink":"https://github.com/wangqi1994/wangqi1994.github.io/2020/04/20/20200420/","excerpt":"","text":"1.查看当前目录命令1pwd 2.隐藏文件文件夹什么开始，怎样查看以.开头 1ls -a 3.创建文件夹级联，需要加什么参数mkdir dir1 dir2 dir3 并mkdir -p dir4/dir5/dir6 串 级联创建-p 4.创建空文件-注意123cat /dev/null &gt; 1.logecho \"\"&gt;1.log #非空集合true&gt;1.log 5.&gt; 代表什么意思，是不是应该慎用覆盖，需要慎用 6.rwx分别代表什么r: read 读权限 4w: write 写权限 2x: 执行 1-: 没权限 0 占位 7.644分别代表哪三组，什么权限rw- 第一组 6 代表文件或文件夹的所属用户，读写权限r– 第二组 4 代表文件或文件夹的所属用户组，读权限r– 第三组 4 代表其他用户组的用户对这个文件或文件夹，读权限 8.带大写 R参数的命令，有哪些-复习chmod -R 777 文件或文件夹chown -R 用户:用户组 文件或文件夹 9.vi命令如何清空一个文件内容命令行模式gg光标到达第一行第一个字母dG删除光标之后所有内容 10.cd切换到家目录哪三种，切换到上一次目录，切换到上一层目录切换到家目录cd ~cd 空格cd /home/用户切换上一次目录cd -切换到上一层目录cd ../","categories":[{"name":"ruozedata","slug":"ruozedata","permalink":"https://github.com/wangqi1994/wangqi1994.github.io/categories/ruozedata/"}],"tags":[{"name":"ruozedata","slug":"ruozedata","permalink":"https://github.com/wangqi1994/wangqi1994.github.io/tags/ruozedata/"}]},{"title":"Hello World","slug":"hello-world","date":"2020-04-19T04:00:00.000Z","updated":"2020-04-19T04:00:00.000Z","comments":true,"path":"2020/04/19/hello-world/","link":"","permalink":"https://github.com/wangqi1994/wangqi1994.github.io/2020/04/19/hello-world/","excerpt":"","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","categories":[],"tags":[]}],"categories":[{"name":"hexo","slug":"hexo","permalink":"https://github.com/wangqi1994/wangqi1994.github.io/categories/hexo/"},{"name":"软件配置","slug":"软件配置","permalink":"https://github.com/wangqi1994/wangqi1994.github.io/categories/%E8%BD%AF%E4%BB%B6%E9%85%8D%E7%BD%AE/"},{"name":"Oracle","slug":"Oracle","permalink":"https://github.com/wangqi1994/wangqi1994.github.io/categories/Oracle/"},{"name":"ruozedata","slug":"ruozedata","permalink":"https://github.com/wangqi1994/wangqi1994.github.io/categories/ruozedata/"},{"name":"Hadoop","slug":"Hadoop","permalink":"https://github.com/wangqi1994/wangqi1994.github.io/categories/Hadoop/"},{"name":"拓展","slug":"拓展","permalink":"https://github.com/wangqi1994/wangqi1994.github.io/categories/%E6%8B%93%E5%B1%95/"},{"name":"Linux","slug":"Linux","permalink":"https://github.com/wangqi1994/wangqi1994.github.io/categories/Linux/"},{"name":"HDFS","slug":"HDFS","permalink":"https://github.com/wangqi1994/wangqi1994.github.io/categories/HDFS/"},{"name":"BUG","slug":"BUG","permalink":"https://github.com/wangqi1994/wangqi1994.github.io/categories/BUG/"},{"name":"Git","slug":"Git","permalink":"https://github.com/wangqi1994/wangqi1994.github.io/categories/Git/"},{"name":"MySQL","slug":"MySQL","permalink":"https://github.com/wangqi1994/wangqi1994.github.io/categories/MySQL/"},{"name":"JAVA","slug":"JAVA","permalink":"https://github.com/wangqi1994/wangqi1994.github.io/categories/JAVA/"},{"name":"面试","slug":"面试","permalink":"https://github.com/wangqi1994/wangqi1994.github.io/categories/%E9%9D%A2%E8%AF%95/"},{"name":"系统配置","slug":"系统配置","permalink":"https://github.com/wangqi1994/wangqi1994.github.io/categories/%E7%B3%BB%E7%BB%9F%E9%85%8D%E7%BD%AE/"}],"tags":[{"name":"hexo","slug":"hexo","permalink":"https://github.com/wangqi1994/wangqi1994.github.io/tags/hexo/"},{"name":"软件配置","slug":"软件配置","permalink":"https://github.com/wangqi1994/wangqi1994.github.io/tags/%E8%BD%AF%E4%BB%B6%E9%85%8D%E7%BD%AE/"},{"name":"Oracle","slug":"Oracle","permalink":"https://github.com/wangqi1994/wangqi1994.github.io/tags/Oracle/"},{"name":"ruozedata","slug":"ruozedata","permalink":"https://github.com/wangqi1994/wangqi1994.github.io/tags/ruozedata/"},{"name":"Hadoop","slug":"Hadoop","permalink":"https://github.com/wangqi1994/wangqi1994.github.io/tags/Hadoop/"},{"name":"拓展","slug":"拓展","permalink":"https://github.com/wangqi1994/wangqi1994.github.io/tags/%E6%8B%93%E5%B1%95/"},{"name":"Linux","slug":"Linux","permalink":"https://github.com/wangqi1994/wangqi1994.github.io/tags/Linux/"},{"name":"HDFS","slug":"HDFS","permalink":"https://github.com/wangqi1994/wangqi1994.github.io/tags/HDFS/"},{"name":"BUG","slug":"BUG","permalink":"https://github.com/wangqi1994/wangqi1994.github.io/tags/BUG/"},{"name":"Git","slug":"Git","permalink":"https://github.com/wangqi1994/wangqi1994.github.io/tags/Git/"},{"name":"MySQL","slug":"MySQL","permalink":"https://github.com/wangqi1994/wangqi1994.github.io/tags/MySQL/"},{"name":"JAVA","slug":"JAVA","permalink":"https://github.com/wangqi1994/wangqi1994.github.io/tags/JAVA/"},{"name":"面试","slug":"面试","permalink":"https://github.com/wangqi1994/wangqi1994.github.io/tags/%E9%9D%A2%E8%AF%95/"},{"name":"系统配置","slug":"系统配置","permalink":"https://github.com/wangqi1994/wangqi1994.github.io/tags/%E7%B3%BB%E7%BB%9F%E9%85%8D%E7%BD%AE/"}]}