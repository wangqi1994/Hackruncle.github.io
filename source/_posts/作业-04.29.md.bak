---
title: "作业-04.29"
catalog: true
toc_nav_num: true
date: 2020-04-30 12:00:00
subtitle: "MySQL作业"
article_type: 0 # 0 原创，1 转载
tags:
- [ruozedata]
- [MySQL]
categories:
- [ruozedata]
- [MySQL]
updateDate: 2020-04-30 12:00:00
top: 3  #置顶
---

### 建表
```sql
create database devoir;
grant all privileges on devoir.* to root@'%' identified by '123456';
flush privileges;

use devoir;

#--部门表
#dept部门表(deptno部门编号/dname部门名称/loc地点)
create table dept (
    deptno numeric(2),
    dname varchar(14),
    loc varchar(13)
);

insert into dept values (10, 'ACCOUNTING', 'NEW YORK');
insert into dept values (20, 'RESEARCH', 'DALLAS');
insert into dept values (30, 'SALES', 'CHICAGO');
insert into dept values (40, 'OPERATIONS', 'BOSTON');

#--工资等级表
#salgrade工资等级表(grade 等级/losal此等级的最低/hisal此等级的最高)
create table salgrade (
    grade numeric,
    losal numeric,
    hisal numeric
);

insert into salgrade values (1, 700, 1200);
insert into salgrade values (2, 1201, 1400);
insert into salgrade values (3, 1401, 2000);
insert into salgrade values (4, 2001, 3000);
insert into salgrade values (5, 3001, 9999);


#--员工表
#emp员工表(empno员工号/ename员工姓名/job工作/mgr上级编号/hiredate受雇日期/sal薪金/comm佣金/deptno部门编号)
#工资 ＝ 薪金 ＋ 佣金

create table emp (
    empno numeric(4) not null,
    ename varchar(10),
    job varchar(9),
    mgr numeric(4),
    hiredate datetime,
    sal numeric(7, 2),
    comm numeric(7, 2),
    deptno numeric(2)
);



insert into emp values (7369, 'SMITH', 'CLERK', 7902, '1980-12-17', 800, null, 20);
insert into emp values (7499, 'ALLEN', 'SALESMAN', 7698, '1981-02-20', 1600, 300, 30);
insert into emp values (7521, 'WARD', 'SALESMAN', 7698, '1981-02-22', 1250, 500, 30);
insert into emp values (7566, 'JONES', 'MANAGER', 7839, '1981-04-02', 2975, null, 20);
insert into emp values (7654, 'MARTIN', 'SALESMAN', 7698, '1981-09-28', 1250, 1400, 30);
insert into emp values (7698, 'BLAKE', 'MANAGER', 7839, '1981-05-01', 2850, null, 30);
insert into emp values (7782, 'CLARK', 'MANAGER', 7839, '1981-06-09', 2450, null, 10);
insert into emp values (7788, 'SCOTT', 'ANALYST', 7566, '1982-12-09', 3000, null, 20);
insert into emp values (7839, 'KING', 'PRESIDENT', null, '1981-11-17', 5000, null, 10);
insert into emp values (7844, 'TURNER', 'SALESMAN', 7698, '1981-09-08', 1500, 0, 30);
insert into emp values (7876, 'ADAMS', 'CLERK', 7788, '1983-01-12', 1100, null, 20);
insert into emp values (7900, 'JAMES', 'CLERK', 7698, '1981-12-03', 950, null, 30);
insert into emp values (7902, 'FORD', 'ANALYST', 7566, '1981-12-03', 3000, null, 20);
insert into emp values (7934, 'MILLER', 'CLERK', 7782, '1982-01-23', 1300, null, 10);
```

### 作业:
#### 1.查询出部门编号为30的所有员工的编号和姓名
```sql
select
empno,
ename
from devoir.emp where deptno=30;
```

#### 2.找出部门编号为10中所有经理，和部门编号为30中所有销售员的详细资料。
```sql
select 
*
from devoir.emp where(deptno=10 and job = 'MANAGER') 
or (deptno=30 and job ='SALESMAN')
order by deptno;
```

#### 3.查询所有员工详细信息，用工资降序排序，如果工资相同使用入职日期升序排序
```sql
select 
*,
sal+ifnull(comm,0) as money 
from devoir.emp 
order by money desc, hiredate asc;
```
修改：工资只有sal


#### 4.列出薪金大于1500的各种工作及从事此工作的员工人数。
```sql
select 
job,
count(job)
from devoir.emp e where (sal+ifnull(comm,0)) >1500
group by job ;
```
修改：
```sql
select e.job,count(*) as 员工人数     # count(*)和count(1)基本作用一致count(job)
from emp e 
group by job having min(sal)>1500; 
```
聚合:  多行-->多行或低于多行
各种工作及从事此工作的员工人数
```sql
select e.job,count(*) as 员工人数,avg(*) as 平均数
from emp e 
group by job

 select e.job,count(*) as 员工人数 from emp e  group by job having count(*)>3;
 select * from (select e.job,count(*) as 员工人数 from emp e  group by job) a where a.员工人数>3;
```
#### 5.列出在销售部工作的员工的姓名，假定不知道销售部的部门编号。
```sql
select 
devoir.emp.ename,
devoir.dept.dname
from devoir.emp
left join devoir.dept on devoir.emp.deptno=devoir.dept.deptno
group by emp.ename,dept.dname 
having dname='SALES';
```
修改：
```sql
select e.ename from emp e
where e.deptno =(select deptno from dept where dname='SALES');
```
#### 6.查询姓名以S开头的\以S结尾\包含S字符\第二个字母为L  __
```sql
#S开头
select 
*
from devoir.emp where ename like 'S%';
#S结尾
select 
*
from devoir.emp where ename like '%S';
# 包含S
select 
*
from devoir.emp where ename like '%S%';
#第二个字母L
select 
*
from devoir.emp where ename like '_L%';
```

#### 7.查询每种工作的最高工资、最低工资、人数
```sql
select 
job,
max(sal+ifnull(comm,0)),
min(sal+ifnull(comm,0)),
count(job)
from devoir.emp 
group by job;
```

#### 8.列出薪金 高于 公司平均薪金的所有员工号，员工姓名，所在部门名称，上级领导，工资，工资等级
```sql
create view gr
as
select 
emp.empno,
emp.ename,
dept.dname,
emp.mgr,
emp.sal+ifnull(emp.comm,0) as money
#salgrade.grade #where money between losal and hisal
from emp
left join dept on emp.deptno=dept.deptno
group by emp.empno,
emp.ename,
dept.dname,
emp.mgr,
emp.sal+ifnull(emp.comm,0);
#salgrade.grade;


select 
gr.empno,
gr.ename,
gr.dname,
gr.mgr,
gr.money,
salgrade.grade #where money between losal and hisal
from gr 
left join salgrade on gr.money between losal and hisal 
group by # group by 只要选择前面一个字段
gr.empno,
gr.ename,
gr.dname,
gr.mgr,
gr.money,
salgrade.grade
having gr.money>(select 
avg(gr.money)
from gr) ;
```
修改：
```sql
select e.empno as 工号,e.ename as 姓名,
d.dname as 部门,
m.ename as 上级领导,
(e.sal+ifnull(e.comm,0)) as 工资,
s.grade as 薪水等级
from emp e 
  left join dept d on e.deptno=d.deptno #连续join
  left join emp m on  e.mgr=m.empno
  left join salgrade s on e.sal between s.losal and s.hisal
where (e.sal+ifnull(e.comm,0)) > (select avg(sal+ifnull(comm,0)) from emp);
```
#### 9.列出薪金  高于  在部门30工作的  所有/任何一个员工的薪金的员工姓名和薪金、部门名称。
```sql
select
gr.ename,
gr.money,
gr.dname 
from gr where gr.money >
(select 
max(sal+ifnull(comm,0))
from emp
where emp.deptno =30
)

```
修改：
```sql
select e.ename, e.sal, d.dname
from emp e, dept d
where e.deptno=d.deptno and sal > all(select sal from emp where deptno=30)
# all 是括号内所有的
any: # any 是括号内任一个
select e.ename, e.sal, d.dname
from emp e, dept d
where e.deptno=d.deptno and sal > any(select sal from emp where deptno=30);
```